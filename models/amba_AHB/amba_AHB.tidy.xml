<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE nta PUBLIC "-//Uppaal Team//DTD Flat System 1.1//EN" "http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd"><nta><declaration>typedef int short;
typedef int unsigned_short;
typedef int uint64;
typedef int tlm_sync_enum;
const tlm_sync_enum END_RESP = 2;
const tlm_sync_enum TLM_UPDATED = 2;
const tlm_sync_enum BEGIN_RESP = 1;
const tlm_sync_enum TLM_ACCEPTED = 1;
const tlm_sync_enum TLM_GENERIC_ERROR_RESPONSE = 64;
const tlm_sync_enum TLM_INCOMPLETE_RESPONSE = 16;
const tlm_sync_enum END_REQ = 8;
const tlm_sync_enum TLM_OK_RESPONSE = 32;
const tlm_sync_enum TLM_COMPLETED = 4;
const tlm_sync_enum BEGIN_REQ = 4;
const tlm_sync_enum TLM_WRITE_COMMAND = 16;
const tlm_sync_enum TLM_IGNORE_COMMAND = 32;
const tlm_sync_enum TLM_READ_COMMAND = 8;
const tlm_sync_enum TLM_BURST_ERROR_RESPONSE = 32;
typedef int tlm_dmi;
typedef int sc_uint;
typedef int unsigned_int;
clock global;

///////////////////////////
// MEMORY ALLOCATION STATES
///////////////////////////

const int MEM_FREE = 0;
const int MEM_STATIC_OBJ = 1;
const int MEM_STATIC_ARR_HEAD = 2;
const int MEM_STATIC_ARR_TAIL = 3;
const int MEM_DYN_OBJ = 4;
const int MEM_DYN_ARR_HEAD = 5;
const int MEM_DYN_ARR_TAIL = 6;
const int NULL = -1;

////////////////////////
// MEMORY RELATED ERRORS
////////////////////////

bool MEM_ERR_ACCESS_FAIL = false;
bool MEM_ERR_DOUBLE_FREE = false;
bool MEM_ERR_INVALID_ARR_DELETE = false;
bool MEM_ERR_INVALID_OBJ_DELETE = false;
bool MEM_ERR_DELETE_ON_STATIC_VAR = false;
bool MEM_ERR_NOT_ENOUGH_MEM = false;
bool MEM_ERR_CORRUPTED_MEM = false;
bool MEM_ERR_FRAGMENTED_MEM = false;


///////////////////
// BOOL - globals
///////////////////

const bool DEFAULT_BOOL_VALUE = false;
const int BOOL_MEMSIZE = 0;
int BOOL_FREE_MEM = BOOL_MEMSIZE;
typedef int[NULL, BOOL_MEMSIZE-1] bool_addr_ptr;


///////////////////
// INT - globals
///////////////////

const int DEFAULT_INT_VALUE = 0;
const int INT_MEMSIZE = 50;
int INT_FREE_MEM = INT_MEMSIZE;
typedef int[NULL, INT_MEMSIZE-1] int_addr_ptr;
int[0, 6] intMemState[INT_MEMSIZE];
int intMem[INT_MEMSIZE];
bool MEM_ERR_FRAGMENTED_MEM_INT = false;
bool MEM_ERR_NOT_ENOUGH_MEM_INT = false;


///////////////////
// TLM_DMI - globals
///////////////////

const tlm_dmi DEFAULT_TLM_DMI_VALUE = 0;
const int TLM_DMI_MEMSIZE = 0;
int TLM_DMI_FREE_MEM = TLM_DMI_MEMSIZE;
typedef int[NULL, TLM_DMI_MEMSIZE-1] tlm_dmi_addr_ptr;


///////////////////
// TLM_SYNC_ENUM - globals
///////////////////

const tlm_sync_enum DEFAULT_TLM_SYNC_ENUM_VALUE = 0;
const int TLM_SYNC_ENUM_MEMSIZE = 0;
int TLM_SYNC_ENUM_FREE_MEM = TLM_SYNC_ENUM_MEMSIZE;
typedef int[NULL, TLM_SYNC_ENUM_MEMSIZE-1] tlm_sync_enum_addr_ptr;


///////////////////
// UINT64 - globals
///////////////////

const uint64 DEFAULT_UINT64_VALUE = 0;
const int UINT64_MEMSIZE = 0;
int UINT64_FREE_MEM = UINT64_MEMSIZE;
typedef int[NULL, UINT64_MEMSIZE-1] uint64_addr_ptr;


///////////////////
// UNSIGNED_INT - globals
///////////////////

const unsigned_int DEFAULT_UNSIGNED_INT_VALUE = 0;
const int UNSIGNED_INT_MEMSIZE = 21;
int UNSIGNED_INT_FREE_MEM = UNSIGNED_INT_MEMSIZE;
typedef int[NULL, UNSIGNED_INT_MEMSIZE-1] unsigned_int_addr_ptr;
int[0, 6] unsigned_intMemState[UNSIGNED_INT_MEMSIZE];
unsigned_int unsigned_intMem[UNSIGNED_INT_MEMSIZE];
bool MEM_ERR_FRAGMENTED_MEM_UNSIGNED_INT = false;
bool MEM_ERR_NOT_ENOUGH_MEM_UNSIGNED_INT = false;


///////////////////
// UNSIGNED_SHORT - globals
///////////////////

const unsigned_short DEFAULT_UNSIGNED_SHORT_VALUE = 0;
const int UNSIGNED_SHORT_MEMSIZE = 0;
int UNSIGNED_SHORT_FREE_MEM = UNSIGNED_SHORT_MEMSIZE;
typedef int[NULL, UNSIGNED_SHORT_MEMSIZE-1] unsigned_short_addr_ptr;


///////////////////
// DATA - globals
///////////////////

typedef struct {int address; unsigned_int amba_id; unsigned_int_addr_ptr burst_size; unsigned_int command; unsigned_int data_length; unsigned_int_addr_ptr data_ptr; int response_status; int streaming_width; int_addr_ptr trans_type;} data;
const data DEFAULT_DATA_VALUE = {0, 0, NULL, 0, 0, NULL, 0, 0, NULL};
const int DATA_MEMSIZE = 23;
int DATA_FREE_MEM = DATA_MEMSIZE;
typedef int[NULL, DATA_MEMSIZE-1] data_addr_ptr;
int[0, 6] dataMemState[DATA_MEMSIZE];
data dataMem[DATA_MEMSIZE];
bool MEM_ERR_FRAGMENTED_MEM_DATA = false;
bool MEM_ERR_NOT_ENOUGH_MEM_DATA = false;


///////////////////
// TLMDATA - globals
///////////////////

typedef struct {int address; unsigned_int command; unsigned_int_addr_ptr data_ptr; unsigned_int data_length; int response_status; int streaming_width;} tlmdata;
const tlmdata DEFAULT_TLMDATA_VALUE = {0, 0, NULL, 0, 0, 0};
const int TLMDATA_MEMSIZE = 2;
int TLMDATA_FREE_MEM = TLMDATA_MEMSIZE;
typedef int[NULL, TLMDATA_MEMSIZE-1] tlmdata_addr_ptr;
int[0, 6] tlmdataMemState[TLMDATA_MEMSIZE];
tlmdata tlmdataMem[TLMDATA_MEMSIZE];
bool MEM_ERR_FRAGMENTED_MEM_TLMDATA = false;
bool MEM_ERR_NOT_ENOUGH_MEM_TLMDATA = false;


///////////////////
// Global Variable Definition
///////////////////

bool PEQ_ERR_OUT_OF_ELEMENTS = false;
int clk$val;
int clk$_val;
int clk$delta;
int clk$period;
tlmdata_addr_ptr TLM2_M1$d = NULL;
uint64 AHB_M1$current_Address;
unsigned_int AHB_M1$current_Command;
unsigned_int AHB_M1$current_DataLength;
data_addr_ptr AHB_M1$current_trans = NULL;
unsigned_int AHB_M1$master_id;
bool AHB_M1$m_bus_granted;
bool AHB_M1$m_bus_req_pending;
unsigned_int AHB_M1$m_data_count;
bool AHB_M1$m_data_pending;
bool AHB_M1$m_request_pending;
bool AHB_M1$m_restart_pending_req;
unsigned_int AHB_M1$m_txn_count;
tlmdata_addr_ptr TLM2_M2$d = NULL;
uint64 AHB_M2$current_Address;
unsigned_int AHB_M2$current_Command;
unsigned_int AHB_M2$current_DataLength;
data_addr_ptr AHB_M2$current_trans = NULL;
unsigned_int AHB_M2$master_id;
bool AHB_M2$m_bus_granted;
bool AHB_M2$m_bus_req_pending;
unsigned_int AHB_M2$m_data_count;
bool AHB_M2$m_data_pending;
bool AHB_M2$m_request_pending;
bool AHB_M2$m_restart_pending_req;
unsigned_int AHB_M2$m_txn_count;
unsigned_int AHB_S1$baseAddr;
unsigned_int AHB_S1$counter;
data_addr_ptr AHB_S1$current_trans = NULL;
unsigned_int_addr_ptr AHB_S1$MEM = NULL;
unsigned_int AHB_S1$mem_size;
bool AHB_S1$m_data_pending;
bool AHB_S1$m_request_pending;
unsigned_int AHB_S1$txn_address;
unsigned_int AHB_S1$txn_burst_len;
unsigned_int AHB_S2$baseAddr;
unsigned_int AHB_S2$counter;
data_addr_ptr AHB_S2$current_trans = NULL;
unsigned_int_addr_ptr AHB_S2$MEM = NULL;
unsigned_int AHB_S2$mem_size;
bool AHB_S2$m_data_pending;
bool AHB_S2$m_request_pending;
unsigned_int AHB_S2$txn_address;
unsigned_int AHB_S2$txn_burst_len;
data_addr_ptr AHB_Bus$outstanding_req = NULL;
data_addr_ptr AHB_Bus$outstanding_data = NULL;
unsigned_int AHB_Bus$outstanding_txn_count;
unsigned_int AHB_Bus$data_count;
unsigned_int AHB_Bus$current_req_master;
unsigned_int AHB_Bus$current_data_master;
unsigned_short AHB_Bus$m_BusRequest_Register;
unsigned_short AHB_Bus$m_InService_Register;
data_addr_ptr AHB_Bus$m_grant_txn = NULL;
int_addr_ptr AHB_Bus$m_grant_phase = NULL;
int_addr_ptr AHB_Bus$m_grant_time = NULL;
int AHB_Bus$m_bus_req_sample_time;
int AHB_Bus$m_req_sample_time;
unsigned_int AHB_Bus$m_drop_cycle;
unsigned_int_addr_ptr AHB_Bus$m_default_size = NULL;
int AHB_Bus$m_outstanding_req_type;
chan activate;
chan deactivate;
chan updatestart;
chan updateend;
broadcast chan initdone;
broadcast chan deltadelay;
broadcast chan advancetime;
int deltacount = 0;
int readyprocs = 3;
int updaterequests = 0;
chan scmodules_initialized;
broadcast chan dummybchannel;
chan dummychannel;
int dummyinteger;
broadcast chan clk$edge$wait;
chan clk$edge$notify;
chan clk$edge$notify_imm;
int clk$edge$notify_t;
broadcast chan clk$change$wait;
chan clk$change$notify;
chan clk$change$notify_imm;
int clk$change$notify_t;
broadcast chan clk$thread0$sensitivechan;
broadcast chan clk$thread0$timeoutevent$wait;
chan clk$thread0$timeoutevent$notify;
chan clk$thread0$timeoutevent$notify_imm;
int clk$thread0$timeoutevent$notify_t;
chan clk$thread0$sc_clock$run$ctrl;
broadcast chan TLM2_M1$pos_clk_edge$wait;
chan TLM2_M1$pos_clk_edge$notify;
chan TLM2_M1$pos_clk_edge$notify_imm;
int TLM2_M1$pos_clk_edge$notify_t;
broadcast chan TLM2_M1$thread0$sensitivechan;
chan TLM2_M1$tlm2_simple_master$clock_tick$ctrl;
broadcast chan TLM2_M1$thread1$sensitivechan;
chan TLM2_M1$thread1$tlm2_simple_master$thread_process$ctrl;
chan TLM2_M1$thread1$AHB_M1$tlm2_master_to_ahb$b_transport$ctrl;
tlmdata_addr_ptr TLM2_M1$thread1$AHB_M1$tlm2_master_to_ahb$b_transport$param$tran = NULL;
int_addr_ptr TLM2_M1$thread1$AHB_M1$tlm2_master_to_ahb$b_transport$param$t = NULL;
broadcast chan AHB_M1$b_transport_finished_ev$wait;
chan AHB_M1$b_transport_finished_ev$notify;
chan AHB_M1$b_transport_finished_ev$notify_imm;
int AHB_M1$b_transport_finished_ev$notify_t;
broadcast chan AHB_M1$thread0$sensitivechan;
chan AHB_M1$tlm2_master_to_ahb$clock_tick$ctrl;
chan AHB_M1$tlm2_master_to_ahb$dataProcess$ctrl;
chan AHB_M1$tlm2_master_to_ahb$sendData$ctrl;
chan AHB_Bus$ahb_simple_bus$nb_transport_fw$ctrl;
data_addr_ptr AHB_Bus$ahb_simple_bus$nb_transport_fw$param$tran = NULL;
int_addr_ptr AHB_Bus$ahb_simple_bus$nb_transport_fw$param$phase = NULL;
int_addr_ptr AHB_Bus$ahb_simple_bus$nb_transport_fw$param$t = NULL;
tlm_sync_enum AHB_Bus$ahb_simple_bus$nb_transport_fw$return;
chan AHB_S1$ahb_simple_mem$nb_transport_fw$ctrl;
data_addr_ptr AHB_S1$ahb_simple_mem$nb_transport_fw$param$tran = NULL;
int_addr_ptr AHB_S1$ahb_simple_mem$nb_transport_fw$param$phase = NULL;
int_addr_ptr AHB_S1$ahb_simple_mem$nb_transport_fw$param$t = NULL;
tlm_sync_enum AHB_S1$ahb_simple_mem$nb_transport_fw$return;
chan AHB_S1$m_peq$notify$peq_notify$ctrl;
chan AHB_S1$m_peq$notify$peq_element$ctrl[4];
bool AHB_S1$m_peq$notify$peqInUse[4];
data_addr_ptr AHB_S1$m_peq$fetch$peq_cb$param$tran = NULL;
chan AHB_S1$m_peq$fetch$peq_fetch$ctrl;
int_addr_ptr AHB_S1$m_peq$fetch$peq_cb$param$phase = NULL;
int AHB_S1$m_peq$peq_element$param$delay;
data_addr_ptr AHB_S1$m_peq$peq_element$param$trans = NULL;
int_addr_ptr AHB_S1$m_peq$peq_element$param$phase = NULL;
chan AHB_S1$ahb_simple_mem$peq_cb$ctrl;
data_addr_ptr AHB_S1$ahb_simple_mem$peq_cb$param$tran = NULL;
int_addr_ptr AHB_S1$ahb_simple_mem$peq_cb$param$phase = NULL;
chan AHB_S2$ahb_simple_mem$nb_transport_fw$ctrl;
data_addr_ptr AHB_S2$ahb_simple_mem$nb_transport_fw$param$tran = NULL;
int_addr_ptr AHB_S2$ahb_simple_mem$nb_transport_fw$param$phase = NULL;
int_addr_ptr AHB_S2$ahb_simple_mem$nb_transport_fw$param$t = NULL;
tlm_sync_enum AHB_S2$ahb_simple_mem$nb_transport_fw$return;
chan AHB_S2$m_peq$notify$peq_notify$ctrl;
chan AHB_S2$m_peq$notify$peq_element$ctrl[4];
bool AHB_S2$m_peq$notify$peqInUse[4];
data_addr_ptr AHB_S2$m_peq$fetch$peq_cb$param$tran = NULL;
chan AHB_S2$m_peq$fetch$peq_fetch$ctrl;
int_addr_ptr AHB_S2$m_peq$fetch$peq_cb$param$phase = NULL;
int AHB_S2$m_peq$peq_element$param$delay;
data_addr_ptr AHB_S2$m_peq$peq_element$param$trans = NULL;
int_addr_ptr AHB_S2$m_peq$peq_element$param$phase = NULL;
chan AHB_S2$ahb_simple_mem$peq_cb$ctrl;
data_addr_ptr AHB_S2$ahb_simple_mem$peq_cb$param$tran = NULL;
int_addr_ptr AHB_S2$ahb_simple_mem$peq_cb$param$phase = NULL;
chan AHB_Bus$ahb_simple_bus$get_index$ctrl;
uint64 AHB_Bus$ahb_simple_bus$get_index$param$address;
unsigned_int AHB_Bus$ahb_simple_bus$get_index$return;
chan AHB_Bus$ahb_simple_bus$nb_transport_bw$ctrl;
data_addr_ptr AHB_Bus$ahb_simple_bus$nb_transport_bw$param$tran = NULL;
int_addr_ptr AHB_Bus$ahb_simple_bus$nb_transport_bw$param$phase = NULL;
int_addr_ptr AHB_Bus$ahb_simple_bus$nb_transport_bw$param$t = NULL;
tlm_sync_enum AHB_Bus$ahb_simple_bus$nb_transport_bw$return;
chan AHB_M1$tlm2_master_to_ahb$nb_transport_bw$ctrl;
data_addr_ptr AHB_M1$tlm2_master_to_ahb$nb_transport_bw$param$tran = NULL;
int_addr_ptr AHB_M1$tlm2_master_to_ahb$nb_transport_bw$param$phase = NULL;
int_addr_ptr AHB_M1$tlm2_master_to_ahb$nb_transport_bw$param$t = NULL;
tlm_sync_enum AHB_M1$tlm2_master_to_ahb$nb_transport_bw$return;
chan AHB_M1$m_peq$notify$peq_notify$ctrl;
chan AHB_M1$m_peq$notify$peq_element$ctrl[4];
bool AHB_M1$m_peq$notify$peqInUse[4];
data_addr_ptr AHB_M1$m_peq$fetch$peq_cb$param$tran = NULL;
chan AHB_M1$m_peq$fetch$peq_fetch$ctrl;
int_addr_ptr AHB_M1$m_peq$fetch$peq_cb$param$phase = NULL;
int AHB_M1$m_peq$peq_element$param$delay;
data_addr_ptr AHB_M1$m_peq$peq_element$param$trans = NULL;
int_addr_ptr AHB_M1$m_peq$peq_element$param$phase = NULL;
chan AHB_M1$tlm2_master_to_ahb$peq_cb$ctrl;
data_addr_ptr AHB_M1$tlm2_master_to_ahb$peq_cb$param$tran = NULL;
int_addr_ptr AHB_M1$tlm2_master_to_ahb$peq_cb$param$phase = NULL;
chan AHB_M1$tlm2_master_to_ahb$receiveData$ctrl;
data_addr_ptr AHB_M1$tlm2_master_to_ahb$receiveData$param$tran = NULL;
chan AHB_M1$tlm2_master_to_ahb$requestProcess$ctrl;
chan AHB_M1$tlm2_master_to_ahb$busNotGranted$ctrl;
chan AHB_M1$tlm2_master_to_ahb$busGranted$ctrl;
chan AHB_M1$tlm2_master_to_ahb$startRequest$ctrl;
chan AHB_M1$tlm2_master_to_ahb$resumeRequest$ctrl;
chan AHB_M2$tlm2_master_to_ahb$nb_transport_bw$ctrl;
data_addr_ptr AHB_M2$tlm2_master_to_ahb$nb_transport_bw$param$tran = NULL;
int_addr_ptr AHB_M2$tlm2_master_to_ahb$nb_transport_bw$param$phase = NULL;
int_addr_ptr AHB_M2$tlm2_master_to_ahb$nb_transport_bw$param$t = NULL;
tlm_sync_enum AHB_M2$tlm2_master_to_ahb$nb_transport_bw$return;
chan AHB_M2$m_peq$notify$peq_notify$ctrl;
chan AHB_M2$m_peq$notify$peq_element$ctrl[4];
bool AHB_M2$m_peq$notify$peqInUse[4];
data_addr_ptr AHB_M2$m_peq$fetch$peq_cb$param$tran = NULL;
chan AHB_M2$m_peq$fetch$peq_fetch$ctrl;
int_addr_ptr AHB_M2$m_peq$fetch$peq_cb$param$phase = NULL;
int AHB_M2$m_peq$peq_element$param$delay;
data_addr_ptr AHB_M2$m_peq$peq_element$param$trans = NULL;
int_addr_ptr AHB_M2$m_peq$peq_element$param$phase = NULL;
chan AHB_M2$tlm2_master_to_ahb$peq_cb$ctrl;
data_addr_ptr AHB_M2$tlm2_master_to_ahb$peq_cb$param$tran = NULL;
int_addr_ptr AHB_M2$tlm2_master_to_ahb$peq_cb$param$phase = NULL;
chan AHB_M2$tlm2_master_to_ahb$receiveData$ctrl;
data_addr_ptr AHB_M2$tlm2_master_to_ahb$receiveData$param$tran = NULL;
chan AHB_M2$tlm2_master_to_ahb$dataProcess$ctrl;
chan AHB_M2$tlm2_master_to_ahb$sendData$ctrl;
chan AHB_M2$tlm2_master_to_ahb$requestProcess$ctrl;
chan AHB_M2$tlm2_master_to_ahb$busNotGranted$ctrl;
chan AHB_M2$tlm2_master_to_ahb$busGranted$ctrl;
chan AHB_M2$tlm2_master_to_ahb$startRequest$ctrl;
chan AHB_M2$tlm2_master_to_ahb$resumeRequest$ctrl;
broadcast chan TLM2_M2$pos_clk_edge$wait;
chan TLM2_M2$pos_clk_edge$notify;
chan TLM2_M2$pos_clk_edge$notify_imm;
int TLM2_M2$pos_clk_edge$notify_t;
broadcast chan TLM2_M2$thread0$sensitivechan;
chan TLM2_M2$tlm2_simple_master$clock_tick$ctrl;
broadcast chan TLM2_M2$thread1$sensitivechan;
chan TLM2_M2$thread1$tlm2_simple_master$thread_process$ctrl;
chan TLM2_M2$thread1$AHB_M2$tlm2_master_to_ahb$b_transport$ctrl;
tlmdata_addr_ptr TLM2_M2$thread1$AHB_M2$tlm2_master_to_ahb$b_transport$param$tran = NULL;
int_addr_ptr TLM2_M2$thread1$AHB_M2$tlm2_master_to_ahb$b_transport$param$t = NULL;
broadcast chan AHB_M2$b_transport_finished_ev$wait;
chan AHB_M2$b_transport_finished_ev$notify;
chan AHB_M2$b_transport_finished_ev$notify_imm;
int AHB_M2$b_transport_finished_ev$notify_t;
broadcast chan AHB_M2$thread0$sensitivechan;
chan AHB_M2$tlm2_master_to_ahb$clock_tick$ctrl;
broadcast chan AHB_S1$thread0$sensitivechan;
chan AHB_S1$ahb_simple_mem$responseProcess$ctrl;
chan AHB_S1$ahb_simple_mem$writeData$ctrl;
unsigned_int_addr_ptr AHB_S1$ahb_simple_mem$writeData$param$burst_size = NULL;
chan AHB_S1$ahb_simple_mem$readData$ctrl;
unsigned_int_addr_ptr AHB_S1$ahb_simple_mem$readData$param$burst_size = NULL;
broadcast chan AHB_S2$thread0$sensitivechan;
chan AHB_S2$ahb_simple_mem$responseProcess$ctrl;
chan AHB_S2$ahb_simple_mem$writeData$ctrl;
unsigned_int_addr_ptr AHB_S2$ahb_simple_mem$writeData$param$burst_size = NULL;
chan AHB_S2$ahb_simple_mem$readData$ctrl;
unsigned_int_addr_ptr AHB_S2$ahb_simple_mem$readData$param$burst_size = NULL;
broadcast chan AHB_Bus$end_data_ev$wait;
chan AHB_Bus$end_data_ev$notify;
chan AHB_Bus$end_data_ev$notify_imm;
int AHB_Bus$end_data_ev$notify_t;
broadcast chan AHB_Bus$bus_ungrant_ev$wait;
chan AHB_Bus$bus_ungrant_ev$notify;
chan AHB_Bus$bus_ungrant_ev$notify_imm;
int AHB_Bus$bus_ungrant_ev$notify_t;
broadcast chan AHB_Bus$bus_grant_ev$wait;
chan AHB_Bus$bus_grant_ev$notify;
chan AHB_Bus$bus_grant_ev$notify_imm;
int AHB_Bus$bus_grant_ev$notify_t;
broadcast chan AHB_Bus$thread0$sensitivechan;
chan AHB_Bus$ahb_simple_bus$bus_ungrant$ctrl;
broadcast chan AHB_Bus$thread1$sensitivechan;
chan AHB_Bus$ahb_simple_bus$bus_grant$ctrl;
chan AHB_Bus$ahb_simple_bus$arbitrate$ctrl;
broadcast chan AHB_Bus$thread2$sensitivechan;
chan AHB_Bus$ahb_simple_bus$pendingReqProcess$ctrl;


///////////////////
// INT - helper functions
///////////////////

bool is_free_elem_int(int_addr_ptr pos) {
	return intMemState[pos] == MEM_FREE;
}

bool is_obj_elem_int(int_addr_ptr pos) {
	return intMemState[pos] == MEM_STATIC_OBJ || intMemState[pos] == MEM_DYN_OBJ;
}

bool is_static_elem_int(int_addr_ptr pos) {
	return intMemState[pos] == MEM_STATIC_OBJ || intMemState[pos] == MEM_STATIC_ARR_HEAD || intMemState[pos] == MEM_STATIC_ARR_TAIL;
}

bool is_dynamic_elem_int(int_addr_ptr pos) {
	return intMemState[pos] == MEM_DYN_OBJ || intMemState[pos] == MEM_DYN_ARR_HEAD || intMemState[pos] == MEM_DYN_ARR_TAIL;
}

bool is_arr_head_elem_int(int_addr_ptr pos) {
	return intMemState[pos] == MEM_STATIC_ARR_HEAD || intMemState[pos] == MEM_DYN_ARR_HEAD;
}

bool is_arr_tail_elem_int(int_addr_ptr pos) {
	return intMemState[pos] == MEM_STATIC_ARR_TAIL || intMemState[pos] == MEM_DYN_ARR_TAIL;
}

void check_mem_errors_for_delete_int(int_addr_ptr pos, bool isStatic, bool shouldBeAnArray) {
	if (pos == NULL) {
		MEM_ERR_CORRUPTED_MEM = true;
	} else if (is_free_elem_int(pos)) {
		MEM_ERR_DOUBLE_FREE = true;
	} else if (not is_obj_elem_int(pos) &amp;&amp; not is_arr_head_elem_int(pos)) {
		// something went completely wrong :(
		// ex: delete somewhere in the middle of an array
		MEM_ERR_CORRUPTED_MEM = true;
	} else {
		if (!isStatic &amp;&amp; is_static_elem_int(pos)) {
			MEM_ERR_DELETE_ON_STATIC_VAR = true;
		}
		if (shouldBeAnArray) {
			if (not is_arr_head_elem_int(pos)) {
				MEM_ERR_INVALID_ARR_DELETE = true; // shouldn't have called 'delete []' ?
			}
		} else { // delete normal obj
			if (not is_obj_elem_int(pos)) {
				MEM_ERR_INVALID_OBJ_DELETE = true;
			}
		}
	}
}

bool addr_is_in_range_int(int pos) {
	return pos &gt;= 0 &amp;&amp; pos &lt; INT_MEMSIZE;
}

bool addr_is_valid_int(int pos) {
	return addr_is_in_range_int(pos) &amp;&amp; intMemState[pos] != MEM_FREE;
}

bool is_arr_elem_int(int head, int index) {
	int i;
	if (!addr_is_in_range_int(head + index)) {
		return false;
	}
	if (!is_arr_head_elem_int(head)) {
		return false;
	}
	if (index &lt; 0) { // assuming heap/stack arrays grow leftward
		return false;
	}
	for (i = head + 1; i &lt;= head + index; i++) {
		if (!is_arr_tail_elem_int(i)) {
			return false;
		}
	}
	return true;
}


///////////////////
// INT - private
///////////////////

void allocate_and_init_int(int memState, int_addr_ptr pos, int value) {
	if (pos == NULL) {
		MEM_ERR_CORRUPTED_MEM = true;
	} else {
		intMemState[pos] = memState;
		intMem[pos] = value;
        if (memState == MEM_FREE) {
            INT_FREE_MEM++;
        } else {
            INT_FREE_MEM--;
        }
	}
}

void allocate_int(int memState, int_addr_ptr pos) {
	allocate_and_init_int(memState, pos, DEFAULT_INT_VALUE);
}

int_addr_ptr find_free_pos_int(int memState) {
	int_addr_ptr pos = NULL;
	if (memState == MEM_STATIC_OBJ) { // stack
		for(pos = 0; pos &lt;= INT_MEMSIZE - 1; pos++) {
			if (intMemState[pos] == MEM_FREE) {
				return pos;
			}
		}
	} else if (memState == MEM_DYN_OBJ) { // heap
		for(pos = INT_MEMSIZE - 1; pos &gt;= 0; pos--) {
			if (intMemState[pos] == MEM_FREE) {
				return pos;
			}
		}
	}
	return NULL;
}

int_addr_ptr find_free_pos_and_allocate_and_init_int(int memState, int value) {
	int_addr_ptr pos;
	if (INT_FREE_MEM == 0) {
		MEM_ERR_NOT_ENOUGH_MEM = true;
		MEM_ERR_NOT_ENOUGH_MEM_INT = true;
		return NULL;
	}
	pos = find_free_pos_int(memState);
	if (pos == NULL) {
		MEM_ERR_CORRUPTED_MEM = true;
	} else {
		allocate_and_init_int(memState, pos, value);
	}
	return pos;
}

int_addr_ptr find_free_pos_and_allocate_int(int memState) {
	return find_free_pos_and_allocate_and_init_int(memState, DEFAULT_INT_VALUE);
}

void delete_int(int_addr_ptr pos, bool isStatic) {
	check_mem_errors_for_delete_int(pos, isStatic, false);
	allocate_and_init_int(MEM_FREE, pos, DEFAULT_INT_VALUE);
}
//////////////////
// INT - public
//////////////////

int_addr_ptr allocate_static_int() {
	return find_free_pos_and_allocate_and_init_int(MEM_STATIC_OBJ, DEFAULT_INT_VALUE);
}

int_addr_ptr allocate_dynamic_int() {
	return find_free_pos_and_allocate_and_init_int(MEM_DYN_OBJ, DEFAULT_INT_VALUE);
}

int_addr_ptr allocate_static_and_init_int(int value) {
	return find_free_pos_and_allocate_and_init_int(MEM_STATIC_OBJ, value);
}

int_addr_ptr allocate_dynamic_and_init_int(int value) {
	return find_free_pos_and_allocate_and_init_int(MEM_DYN_OBJ, value);
}

void delete_static_int(int_addr_ptr pos) {
	delete_int(pos, true);
}

void delete_dynamic_int(int_addr_ptr pos) {
	delete_int(pos, false);
}

void empty_stack_int(int_addr_ptr pos) {
	if (pos != NULL) {
	    allocate_and_init_int(MEM_FREE, pos, DEFAULT_INT_VALUE);
	}
}


/////////////////////////
// INT ARRAY - private
/////////////////////////

int_addr_ptr find_free_pos_arr_int(int memState, int length) {
	int count = 0;
	int_addr_ptr pos = -1;
	int i = 0;
	if (memState == MEM_STATIC_ARR_HEAD) {
		for (i = 0; i &lt;= INT_MEMSIZE - 1; i++) {
			if (intMemState[i] == MEM_FREE) {
				if (count == 0) {
					pos = i;
				}
				count++;
				if (count == length) {
					return pos;
				}
			} else if (is_static_elem_int(i)) {
				count = 0;
				pos = NULL;
			} else {
				return NULL;
			}
		}
	} else if (memState == MEM_DYN_ARR_HEAD) {
		for(i = INT_MEMSIZE - 1; i &gt;= 0; i--) {
			if (intMemState[i] == MEM_FREE) {
				if (count == 0) {
					pos = i;
				}
				count++;
				if (count == length) {
					return pos - length + 1; // return the 'lower' index w.r.t. the memArray; + 1 because count starts at 0
				}
			} else if (is_static_elem_int(i)) {
				count = 0;
				pos = NULL;
			} else {
				return NULL;
			}
		}
	}
	return NULL;
}

int_addr_ptr allocate_arr_int(int memState, int length) {
	int i;
    int_addr_ptr pos;
    int tailElemStateType;
    if (INT_FREE_MEM &lt; length) {
		MEM_ERR_NOT_ENOUGH_MEM = true;
		MEM_ERR_NOT_ENOUGH_MEM_INT = true;
		return NULL;
	}
	pos = find_free_pos_arr_int(memState, length);
	if (pos == NULL) {
		MEM_ERR_FRAGMENTED_MEM = true;
		MEM_ERR_FRAGMENTED_MEM_INT = true;
		return NULL;
	}
	if (memState == MEM_STATIC_ARR_HEAD) {
		tailElemStateType = MEM_STATIC_ARR_TAIL;
	} else {
		tailElemStateType = MEM_DYN_ARR_TAIL;
	}
	allocate_int(memState, pos); // allocate head
	for(i = pos + 1; i &lt; (pos + length); i++) {
		allocate_int(tailElemStateType, i);
	}
	return pos;
}

void delete_arr_int(int_addr_ptr pos, bool isStatic) {
	int i = pos + 1;
	check_mem_errors_for_delete_int(pos, isStatic, true);
	allocate_and_init_int(MEM_FREE, pos, DEFAULT_INT_VALUE);
	while(i &lt; INT_MEMSIZE &amp;&amp; is_arr_tail_elem_int(i)) {
		allocate_and_init_int(MEM_FREE, i, DEFAULT_INT_VALUE);
		i++;
	}
}

////////////////////////
// INT ARRAY - public
////////////////////////

int_addr_ptr allocate_static_arr_int(int length) {
	return allocate_arr_int(MEM_STATIC_ARR_HEAD, length);
}

int_addr_ptr allocate_dynamic_arr_int(int length) {
	return allocate_arr_int(MEM_DYN_ARR_HEAD, length);
}

void delete_arr_static_int(int_addr_ptr pos) {
	delete_arr_int(pos, true);
}

void delete_arr_dynamic_int(int_addr_ptr pos) {
	delete_arr_int(pos, false);
}

void empty_stack_arr_int(int_addr_ptr pos) {
	int i = pos + 1;
	if (pos != NULL) {
		allocate_and_init_int(MEM_FREE, pos, DEFAULT_INT_VALUE);
		while(i &lt; INT_MEMSIZE &amp;&amp; is_arr_tail_elem_int(i)) {
			allocate_and_init_int(MEM_FREE, i, DEFAULT_INT_VALUE);
			i++;
		}
	}
}

void init_arr_elem_int(int_addr_ptr pos, int value) {
	if (pos == NULL) {
		MEM_ERR_CORRUPTED_MEM = true;
	} else {
		intMem[pos] = value;
	}
}





///////////////////
// UNSIGNED_INT - helper functions
///////////////////

bool is_free_elem_unsigned_int(unsigned_int_addr_ptr pos) {
	return unsigned_intMemState[pos] == MEM_FREE;
}

bool is_obj_elem_unsigned_int(unsigned_int_addr_ptr pos) {
	return unsigned_intMemState[pos] == MEM_STATIC_OBJ || unsigned_intMemState[pos] == MEM_DYN_OBJ;
}

bool is_static_elem_unsigned_int(unsigned_int_addr_ptr pos) {
	return unsigned_intMemState[pos] == MEM_STATIC_OBJ || unsigned_intMemState[pos] == MEM_STATIC_ARR_HEAD || unsigned_intMemState[pos] == MEM_STATIC_ARR_TAIL;
}

bool is_dynamic_elem_unsigned_int(unsigned_int_addr_ptr pos) {
	return unsigned_intMemState[pos] == MEM_DYN_OBJ || unsigned_intMemState[pos] == MEM_DYN_ARR_HEAD || unsigned_intMemState[pos] == MEM_DYN_ARR_TAIL;
}

bool is_arr_head_elem_unsigned_int(unsigned_int_addr_ptr pos) {
	return unsigned_intMemState[pos] == MEM_STATIC_ARR_HEAD || unsigned_intMemState[pos] == MEM_DYN_ARR_HEAD;
}

bool is_arr_tail_elem_unsigned_int(unsigned_int_addr_ptr pos) {
	return unsigned_intMemState[pos] == MEM_STATIC_ARR_TAIL || unsigned_intMemState[pos] == MEM_DYN_ARR_TAIL;
}

void check_mem_errors_for_delete_unsigned_int(unsigned_int_addr_ptr pos, bool isStatic, bool shouldBeAnArray) {
	if (pos == NULL) {
		MEM_ERR_CORRUPTED_MEM = true;
	} else if (is_free_elem_unsigned_int(pos)) {
		MEM_ERR_DOUBLE_FREE = true;
	} else if (not is_obj_elem_unsigned_int(pos) &amp;&amp; not is_arr_head_elem_unsigned_int(pos)) {
		// something went completely wrong :(
		// ex: delete somewhere in the middle of an array
		MEM_ERR_CORRUPTED_MEM = true;
	} else {
		if (!isStatic &amp;&amp; is_static_elem_unsigned_int(pos)) {
			MEM_ERR_DELETE_ON_STATIC_VAR = true;
		}
		if (shouldBeAnArray) {
			if (not is_arr_head_elem_unsigned_int(pos)) {
				MEM_ERR_INVALID_ARR_DELETE = true; // shouldn't have called 'delete []' ?
			}
		} else { // delete normal obj
			if (not is_obj_elem_unsigned_int(pos)) {
				MEM_ERR_INVALID_OBJ_DELETE = true;
			}
		}
	}
}

bool addr_is_in_range_unsigned_int(int pos) {
	return pos &gt;= 0 &amp;&amp; pos &lt; UNSIGNED_INT_MEMSIZE;
}

bool addr_is_valid_unsigned_int(int pos) {
	return addr_is_in_range_unsigned_int(pos) &amp;&amp; unsigned_intMemState[pos] != MEM_FREE;
}

bool is_arr_elem_unsigned_int(int head, int index) {
	int i;
	if (!addr_is_in_range_unsigned_int(head + index)) {
		return false;
	}
	if (!is_arr_head_elem_unsigned_int(head)) {
		return false;
	}
	if (index &lt; 0) { // assuming heap/stack arrays grow leftward
		return false;
	}
	for (i = head + 1; i &lt;= head + index; i++) {
		if (!is_arr_tail_elem_unsigned_int(i)) {
			return false;
		}
	}
	return true;
}


///////////////////
// UNSIGNED_INT - private
///////////////////

void allocate_and_init_unsigned_int(int memState, unsigned_int_addr_ptr pos, unsigned_int value) {
	if (pos == NULL) {
		MEM_ERR_CORRUPTED_MEM = true;
	} else {
		unsigned_intMemState[pos] = memState;
		unsigned_intMem[pos] = value;
        if (memState == MEM_FREE) {
            UNSIGNED_INT_FREE_MEM++;
        } else {
            UNSIGNED_INT_FREE_MEM--;
        }
	}
}

void allocate_unsigned_int(int memState, unsigned_int_addr_ptr pos) {
	allocate_and_init_unsigned_int(memState, pos, DEFAULT_UNSIGNED_INT_VALUE);
}

unsigned_int_addr_ptr find_free_pos_unsigned_int(int memState) {
	unsigned_int_addr_ptr pos = NULL;
	if (memState == MEM_STATIC_OBJ) { // stack
		for(pos = 0; pos &lt;= UNSIGNED_INT_MEMSIZE - 1; pos++) {
			if (unsigned_intMemState[pos] == MEM_FREE) {
				return pos;
			}
		}
	} else if (memState == MEM_DYN_OBJ) { // heap
		for(pos = UNSIGNED_INT_MEMSIZE - 1; pos &gt;= 0; pos--) {
			if (unsigned_intMemState[pos] == MEM_FREE) {
				return pos;
			}
		}
	}
	return NULL;
}

unsigned_int_addr_ptr find_free_pos_and_allocate_and_init_unsigned_int(int memState, unsigned_int value) {
	unsigned_int_addr_ptr pos;
	if (UNSIGNED_INT_FREE_MEM == 0) {
		MEM_ERR_NOT_ENOUGH_MEM = true;
		MEM_ERR_NOT_ENOUGH_MEM_UNSIGNED_INT = true;
		return NULL;
	}
	pos = find_free_pos_unsigned_int(memState);
	if (pos == NULL) {
		MEM_ERR_CORRUPTED_MEM = true;
	} else {
		allocate_and_init_unsigned_int(memState, pos, value);
	}
	return pos;
}

unsigned_int_addr_ptr find_free_pos_and_allocate_unsigned_int(int memState) {
	return find_free_pos_and_allocate_and_init_unsigned_int(memState, DEFAULT_UNSIGNED_INT_VALUE);
}

void delete_unsigned_int(unsigned_int_addr_ptr pos, bool isStatic) {
	check_mem_errors_for_delete_unsigned_int(pos, isStatic, false);
	allocate_and_init_unsigned_int(MEM_FREE, pos, DEFAULT_UNSIGNED_INT_VALUE);
}
//////////////////
// UNSIGNED_INT - public
//////////////////

unsigned_int_addr_ptr allocate_static_unsigned_int() {
	return find_free_pos_and_allocate_and_init_unsigned_int(MEM_STATIC_OBJ, DEFAULT_UNSIGNED_INT_VALUE);
}

unsigned_int_addr_ptr allocate_dynamic_unsigned_int() {
	return find_free_pos_and_allocate_and_init_unsigned_int(MEM_DYN_OBJ, DEFAULT_UNSIGNED_INT_VALUE);
}

unsigned_int_addr_ptr allocate_static_and_init_unsigned_int(unsigned_int value) {
	return find_free_pos_and_allocate_and_init_unsigned_int(MEM_STATIC_OBJ, value);
}

unsigned_int_addr_ptr allocate_dynamic_and_init_unsigned_int(unsigned_int value) {
	return find_free_pos_and_allocate_and_init_unsigned_int(MEM_DYN_OBJ, value);
}

void delete_static_unsigned_int(unsigned_int_addr_ptr pos) {
	delete_unsigned_int(pos, true);
}

void delete_dynamic_unsigned_int(unsigned_int_addr_ptr pos) {
	delete_unsigned_int(pos, false);
}

void empty_stack_unsigned_int(unsigned_int_addr_ptr pos) {
	if (pos != NULL) {
	    allocate_and_init_unsigned_int(MEM_FREE, pos, DEFAULT_UNSIGNED_INT_VALUE);
	}
}


/////////////////////////
// UNSIGNED_INT ARRAY - private
/////////////////////////

unsigned_int_addr_ptr find_free_pos_arr_unsigned_int(int memState, int length) {
	int count = 0;
	unsigned_int_addr_ptr pos = -1;
	int i = 0;
	if (memState == MEM_STATIC_ARR_HEAD) {
		for (i = 0; i &lt;= UNSIGNED_INT_MEMSIZE - 1; i++) {
			if (unsigned_intMemState[i] == MEM_FREE) {
				if (count == 0) {
					pos = i;
				}
				count++;
				if (count == length) {
					return pos;
				}
			} else if (is_static_elem_unsigned_int(i)) {
				count = 0;
				pos = NULL;
			} else {
				return NULL;
			}
		}
	} else if (memState == MEM_DYN_ARR_HEAD) {
		for(i = UNSIGNED_INT_MEMSIZE - 1; i &gt;= 0; i--) {
			if (unsigned_intMemState[i] == MEM_FREE) {
				if (count == 0) {
					pos = i;
				}
				count++;
				if (count == length) {
					return pos - length + 1; // return the 'lower' index w.r.t. the memArray; + 1 because count starts at 0
				}
			} else if (is_static_elem_unsigned_int(i)) {
				count = 0;
				pos = NULL;
			} else {
				return NULL;
			}
		}
	}
	return NULL;
}

unsigned_int_addr_ptr allocate_arr_unsigned_int(int memState, int length) {
	int i;
    unsigned_int_addr_ptr pos;
    int tailElemStateType;
    if (UNSIGNED_INT_FREE_MEM &lt; length) {
		MEM_ERR_NOT_ENOUGH_MEM = true;
		MEM_ERR_NOT_ENOUGH_MEM_UNSIGNED_INT = true;
		return NULL;
	}
	pos = find_free_pos_arr_unsigned_int(memState, length);
	if (pos == NULL) {
		MEM_ERR_FRAGMENTED_MEM = true;
		MEM_ERR_FRAGMENTED_MEM_UNSIGNED_INT = true;
		return NULL;
	}
	if (memState == MEM_STATIC_ARR_HEAD) {
		tailElemStateType = MEM_STATIC_ARR_TAIL;
	} else {
		tailElemStateType = MEM_DYN_ARR_TAIL;
	}
	allocate_unsigned_int(memState, pos); // allocate head
	for(i = pos + 1; i &lt; (pos + length); i++) {
		allocate_unsigned_int(tailElemStateType, i);
	}
	return pos;
}

void delete_arr_unsigned_int(unsigned_int_addr_ptr pos, bool isStatic) {
	int i = pos + 1;
	check_mem_errors_for_delete_unsigned_int(pos, isStatic, true);
	allocate_and_init_unsigned_int(MEM_FREE, pos, DEFAULT_UNSIGNED_INT_VALUE);
	while(i &lt; UNSIGNED_INT_MEMSIZE &amp;&amp; is_arr_tail_elem_unsigned_int(i)) {
		allocate_and_init_unsigned_int(MEM_FREE, i, DEFAULT_UNSIGNED_INT_VALUE);
		i++;
	}
}

////////////////////////
// UNSIGNED_INT ARRAY - public
////////////////////////

unsigned_int_addr_ptr allocate_static_arr_unsigned_int(int length) {
	return allocate_arr_unsigned_int(MEM_STATIC_ARR_HEAD, length);
}

unsigned_int_addr_ptr allocate_dynamic_arr_unsigned_int(int length) {
	return allocate_arr_unsigned_int(MEM_DYN_ARR_HEAD, length);
}

void delete_arr_static_unsigned_int(unsigned_int_addr_ptr pos) {
	delete_arr_unsigned_int(pos, true);
}

void delete_arr_dynamic_unsigned_int(unsigned_int_addr_ptr pos) {
	delete_arr_unsigned_int(pos, false);
}

void empty_stack_arr_unsigned_int(unsigned_int_addr_ptr pos) {
	int i = pos + 1;
	if (pos != NULL) {
		allocate_and_init_unsigned_int(MEM_FREE, pos, DEFAULT_UNSIGNED_INT_VALUE);
		while(i &lt; UNSIGNED_INT_MEMSIZE &amp;&amp; is_arr_tail_elem_unsigned_int(i)) {
			allocate_and_init_unsigned_int(MEM_FREE, i, DEFAULT_UNSIGNED_INT_VALUE);
			i++;
		}
	}
}

void init_arr_elem_unsigned_int(unsigned_int_addr_ptr pos, unsigned_int value) {
	if (pos == NULL) {
		MEM_ERR_CORRUPTED_MEM = true;
	} else {
		unsigned_intMem[pos] = value;
	}
}



///////////////////
// DATA - helper functions
///////////////////

bool is_free_elem_data(data_addr_ptr pos) {
	return dataMemState[pos] == MEM_FREE;
}

bool is_obj_elem_data(data_addr_ptr pos) {
	return dataMemState[pos] == MEM_STATIC_OBJ || dataMemState[pos] == MEM_DYN_OBJ;
}

bool is_static_elem_data(data_addr_ptr pos) {
	return dataMemState[pos] == MEM_STATIC_OBJ || dataMemState[pos] == MEM_STATIC_ARR_HEAD || dataMemState[pos] == MEM_STATIC_ARR_TAIL;
}

bool is_dynamic_elem_data(data_addr_ptr pos) {
	return dataMemState[pos] == MEM_DYN_OBJ || dataMemState[pos] == MEM_DYN_ARR_HEAD || dataMemState[pos] == MEM_DYN_ARR_TAIL;
}

bool is_arr_head_elem_data(data_addr_ptr pos) {
	return dataMemState[pos] == MEM_STATIC_ARR_HEAD || dataMemState[pos] == MEM_DYN_ARR_HEAD;
}

bool is_arr_tail_elem_data(data_addr_ptr pos) {
	return dataMemState[pos] == MEM_STATIC_ARR_TAIL || dataMemState[pos] == MEM_DYN_ARR_TAIL;
}

void check_mem_errors_for_delete_data(data_addr_ptr pos, bool isStatic, bool shouldBeAnArray) {
	if (pos == NULL) {
		MEM_ERR_CORRUPTED_MEM = true;
	} else if (is_free_elem_data(pos)) {
		MEM_ERR_DOUBLE_FREE = true;
	} else if (not is_obj_elem_data(pos) &amp;&amp; not is_arr_head_elem_data(pos)) {
		// something went completely wrong :(
		// ex: delete somewhere in the middle of an array
		MEM_ERR_CORRUPTED_MEM = true;
	} else {
		if (!isStatic &amp;&amp; is_static_elem_data(pos)) {
			MEM_ERR_DELETE_ON_STATIC_VAR = true;
		}
		if (shouldBeAnArray) {
			if (not is_arr_head_elem_data(pos)) {
				MEM_ERR_INVALID_ARR_DELETE = true; // shouldn't have called 'delete []' ?
			}
		} else { // delete normal obj
			if (not is_obj_elem_data(pos)) {
				MEM_ERR_INVALID_OBJ_DELETE = true;
			}
		}
	}
}

bool addr_is_in_range_data(int pos) {
	return pos &gt;= 0 &amp;&amp; pos &lt; DATA_MEMSIZE;
}

bool addr_is_valid_data(int pos) {
	return addr_is_in_range_data(pos) &amp;&amp; dataMemState[pos] != MEM_FREE;
}

bool is_arr_elem_data(int head, int index) {
	int i;
	if (!addr_is_in_range_data(head + index)) {
		return false;
	}
	if (!is_arr_head_elem_data(head)) {
		return false;
	}
	if (index &lt; 0) { // assuming heap/stack arrays grow leftward
		return false;
	}
	for (i = head + 1; i &lt;= head + index; i++) {
		if (!is_arr_tail_elem_data(i)) {
			return false;
		}
	}
	return true;
}


///////////////////
// DATA - private
///////////////////

void allocate_and_init_data(int memState, data_addr_ptr pos, data value) {
	if (pos == NULL) {
		MEM_ERR_CORRUPTED_MEM = true;
	} else {
		dataMemState[pos] = memState;
		dataMem[pos] = value;
        if (memState == MEM_FREE) {
            DATA_FREE_MEM++;
        } else {
            DATA_FREE_MEM--;
        }
	}
}

void allocate_data(int memState, data_addr_ptr pos) {
	allocate_and_init_data(memState, pos, DEFAULT_DATA_VALUE);
}

data_addr_ptr find_free_pos_data(int memState) {
	data_addr_ptr pos = NULL;
	if (memState == MEM_STATIC_OBJ) { // stack
		for(pos = 0; pos &lt;= DATA_MEMSIZE - 1; pos++) {
			if (dataMemState[pos] == MEM_FREE) {
				return pos;
			}
		}
	} else if (memState == MEM_DYN_OBJ) { // heap
		for(pos = DATA_MEMSIZE - 1; pos &gt;= 0; pos--) {
			if (dataMemState[pos] == MEM_FREE) {
				return pos;
			}
		}
	}
	return NULL;
}

data_addr_ptr find_free_pos_and_allocate_and_init_data(int memState, data value) {
	data_addr_ptr pos;
	if (DATA_FREE_MEM == 0) {
		MEM_ERR_NOT_ENOUGH_MEM = true;
		MEM_ERR_NOT_ENOUGH_MEM_DATA = true;
		return NULL;
	}
	pos = find_free_pos_data(memState);
	if (pos == NULL) {
		MEM_ERR_CORRUPTED_MEM = true;
	} else {
		allocate_and_init_data(memState, pos, value);
	}
	return pos;
}

data_addr_ptr find_free_pos_and_allocate_data(int memState) {
	return find_free_pos_and_allocate_and_init_data(memState, DEFAULT_DATA_VALUE);
}

void delete_data(data_addr_ptr pos, bool isStatic) {
	check_mem_errors_for_delete_data(pos, isStatic, false);
	allocate_and_init_data(MEM_FREE, pos, DEFAULT_DATA_VALUE);
}
//////////////////
// DATA - public
//////////////////

data_addr_ptr allocate_static_data() {
	return find_free_pos_and_allocate_and_init_data(MEM_STATIC_OBJ, DEFAULT_DATA_VALUE);
}

data_addr_ptr allocate_dynamic_data() {
	return find_free_pos_and_allocate_and_init_data(MEM_DYN_OBJ, DEFAULT_DATA_VALUE);
}

data_addr_ptr allocate_static_and_init_data(data value) {
	return find_free_pos_and_allocate_and_init_data(MEM_STATIC_OBJ, value);
}

data_addr_ptr allocate_dynamic_and_init_data(data value) {
	return find_free_pos_and_allocate_and_init_data(MEM_DYN_OBJ, value);
}

void delete_static_data(data_addr_ptr pos) {
	delete_data(pos, true);
}

void delete_dynamic_data(data_addr_ptr pos) {
	delete_data(pos, false);
}

void empty_stack_data(data_addr_ptr pos) {
	if (pos != NULL) {
	    allocate_and_init_data(MEM_FREE, pos, DEFAULT_DATA_VALUE);
	}
}


/////////////////////////
// DATA ARRAY - private
/////////////////////////

data_addr_ptr find_free_pos_arr_data(int memState, int length) {
	int count = 0;
	data_addr_ptr pos = -1;
	int i = 0;
	if (memState == MEM_STATIC_ARR_HEAD) {
		for (i = 0; i &lt;= DATA_MEMSIZE - 1; i++) {
			if (dataMemState[i] == MEM_FREE) {
				if (count == 0) {
					pos = i;
				}
				count++;
				if (count == length) {
					return pos;
				}
			} else if (is_static_elem_data(i)) {
				count = 0;
				pos = NULL;
			} else {
				return NULL;
			}
		}
	} else if (memState == MEM_DYN_ARR_HEAD) {
		for(i = DATA_MEMSIZE - 1; i &gt;= 0; i--) {
			if (dataMemState[i] == MEM_FREE) {
				if (count == 0) {
					pos = i;
				}
				count++;
				if (count == length) {
					return pos - length + 1; // return the 'lower' index w.r.t. the memArray; + 1 because count starts at 0
				}
			} else if (is_static_elem_data(i)) {
				count = 0;
				pos = NULL;
			} else {
				return NULL;
			}
		}
	}
	return NULL;
}

data_addr_ptr allocate_arr_data(int memState, int length) {
	int i;
    data_addr_ptr pos;
    int tailElemStateType;
    if (DATA_FREE_MEM &lt; length) {
		MEM_ERR_NOT_ENOUGH_MEM = true;
		MEM_ERR_NOT_ENOUGH_MEM_DATA = true;
		return NULL;
	}
	pos = find_free_pos_arr_data(memState, length);
	if (pos == NULL) {
		MEM_ERR_FRAGMENTED_MEM = true;
		MEM_ERR_FRAGMENTED_MEM_DATA = true;
		return NULL;
	}
	if (memState == MEM_STATIC_ARR_HEAD) {
		tailElemStateType = MEM_STATIC_ARR_TAIL;
	} else {
		tailElemStateType = MEM_DYN_ARR_TAIL;
	}
	allocate_data(memState, pos); // allocate head
	for(i = pos + 1; i &lt; (pos + length); i++) {
		allocate_data(tailElemStateType, i);
	}
	return pos;
}

void delete_arr_data(data_addr_ptr pos, bool isStatic) {
	int i = pos + 1;
	check_mem_errors_for_delete_data(pos, isStatic, true);
	allocate_and_init_data(MEM_FREE, pos, DEFAULT_DATA_VALUE);
	while(i &lt; DATA_MEMSIZE &amp;&amp; is_arr_tail_elem_data(i)) {
		allocate_and_init_data(MEM_FREE, i, DEFAULT_DATA_VALUE);
		i++;
	}
}

////////////////////////
// DATA ARRAY - public
////////////////////////

data_addr_ptr allocate_static_arr_data(int length) {
	return allocate_arr_data(MEM_STATIC_ARR_HEAD, length);
}

data_addr_ptr allocate_dynamic_arr_data(int length) {
	return allocate_arr_data(MEM_DYN_ARR_HEAD, length);
}

void delete_arr_static_data(data_addr_ptr pos) {
	delete_arr_data(pos, true);
}

void delete_arr_dynamic_data(data_addr_ptr pos) {
	delete_arr_data(pos, false);
}

void empty_stack_arr_data(data_addr_ptr pos) {
	int i = pos + 1;
	if (pos != NULL) {
		allocate_and_init_data(MEM_FREE, pos, DEFAULT_DATA_VALUE);
		while(i &lt; DATA_MEMSIZE &amp;&amp; is_arr_tail_elem_data(i)) {
			allocate_and_init_data(MEM_FREE, i, DEFAULT_DATA_VALUE);
			i++;
		}
	}
}

void init_arr_elem_data(data_addr_ptr pos, data value) {
	if (pos == NULL) {
		MEM_ERR_CORRUPTED_MEM = true;
	} else {
		dataMem[pos] = value;
	}
}


///////////////////
// TLMDATA - helper functions
///////////////////

bool is_free_elem_tlmdata(tlmdata_addr_ptr pos) {
	return tlmdataMemState[pos] == MEM_FREE;
}

bool is_obj_elem_tlmdata(tlmdata_addr_ptr pos) {
	return tlmdataMemState[pos] == MEM_STATIC_OBJ || tlmdataMemState[pos] == MEM_DYN_OBJ;
}

bool is_static_elem_tlmdata(tlmdata_addr_ptr pos) {
	return tlmdataMemState[pos] == MEM_STATIC_OBJ || tlmdataMemState[pos] == MEM_STATIC_ARR_HEAD || tlmdataMemState[pos] == MEM_STATIC_ARR_TAIL;
}

bool is_dynamic_elem_tlmdata(tlmdata_addr_ptr pos) {
	return tlmdataMemState[pos] == MEM_DYN_OBJ || tlmdataMemState[pos] == MEM_DYN_ARR_HEAD || tlmdataMemState[pos] == MEM_DYN_ARR_TAIL;
}

bool is_arr_head_elem_tlmdata(tlmdata_addr_ptr pos) {
	return tlmdataMemState[pos] == MEM_STATIC_ARR_HEAD || tlmdataMemState[pos] == MEM_DYN_ARR_HEAD;
}

bool is_arr_tail_elem_tlmdata(tlmdata_addr_ptr pos) {
	return tlmdataMemState[pos] == MEM_STATIC_ARR_TAIL || tlmdataMemState[pos] == MEM_DYN_ARR_TAIL;
}

void check_mem_errors_for_delete_tlmdata(tlmdata_addr_ptr pos, bool isStatic, bool shouldBeAnArray) {
	if (pos == NULL) {
		MEM_ERR_CORRUPTED_MEM = true;
	} else if (is_free_elem_tlmdata(pos)) {
		MEM_ERR_DOUBLE_FREE = true;
	} else if (not is_obj_elem_tlmdata(pos) &amp;&amp; not is_arr_head_elem_tlmdata(pos)) {
		// something went completely wrong :(
		// ex: delete somewhere in the middle of an array
		MEM_ERR_CORRUPTED_MEM = true;
	} else {
		if (!isStatic &amp;&amp; is_static_elem_tlmdata(pos)) {
			MEM_ERR_DELETE_ON_STATIC_VAR = true;
		}
		if (shouldBeAnArray) {
			if (not is_arr_head_elem_tlmdata(pos)) {
				MEM_ERR_INVALID_ARR_DELETE = true; // shouldn't have called 'delete []' ?
			}
		} else { // delete normal obj
			if (not is_obj_elem_tlmdata(pos)) {
				MEM_ERR_INVALID_OBJ_DELETE = true;
			}
		}
	}
}

bool addr_is_in_range_tlmdata(int pos) {
	return pos &gt;= 0 &amp;&amp; pos &lt; TLMDATA_MEMSIZE;
}

bool addr_is_valid_tlmdata(int pos) {
	return addr_is_in_range_tlmdata(pos) &amp;&amp; tlmdataMemState[pos] != MEM_FREE;
}

bool is_arr_elem_tlmdata(int head, int index) {
	int i;
	if (!addr_is_in_range_tlmdata(head + index)) {
		return false;
	}
	if (!is_arr_head_elem_tlmdata(head)) {
		return false;
	}
	if (index &lt; 0) { // assuming heap/stack arrays grow leftward
		return false;
	}
	for (i = head + 1; i &lt;= head + index; i++) {
		if (!is_arr_tail_elem_tlmdata(i)) {
			return false;
		}
	}
	return true;
}


///////////////////
// TLMDATA - private
///////////////////

void allocate_and_init_tlmdata(int memState, tlmdata_addr_ptr pos, tlmdata value) {
	if (pos == NULL) {
		MEM_ERR_CORRUPTED_MEM = true;
	} else {
		tlmdataMemState[pos] = memState;
		tlmdataMem[pos] = value;
        if (memState == MEM_FREE) {
            TLMDATA_FREE_MEM++;
        } else {
            TLMDATA_FREE_MEM--;
        }
	}
}

void allocate_tlmdata(int memState, tlmdata_addr_ptr pos) {
	allocate_and_init_tlmdata(memState, pos, DEFAULT_TLMDATA_VALUE);
}

tlmdata_addr_ptr find_free_pos_tlmdata(int memState) {
	tlmdata_addr_ptr pos = NULL;
	if (memState == MEM_STATIC_OBJ) { // stack
		for(pos = 0; pos &lt;= TLMDATA_MEMSIZE - 1; pos++) {
			if (tlmdataMemState[pos] == MEM_FREE) {
				return pos;
			}
		}
	} else if (memState == MEM_DYN_OBJ) { // heap
		for(pos = TLMDATA_MEMSIZE - 1; pos &gt;= 0; pos--) {
			if (tlmdataMemState[pos] == MEM_FREE) {
				return pos;
			}
		}
	}
	return NULL;
}

tlmdata_addr_ptr find_free_pos_and_allocate_and_init_tlmdata(int memState, tlmdata value) {
	tlmdata_addr_ptr pos;
	if (TLMDATA_FREE_MEM == 0) {
		MEM_ERR_NOT_ENOUGH_MEM = true;
		MEM_ERR_NOT_ENOUGH_MEM_TLMDATA = true;
		return NULL;
	}
	pos = find_free_pos_tlmdata(memState);
	if (pos == NULL) {
		MEM_ERR_CORRUPTED_MEM = true;
	} else {
		allocate_and_init_tlmdata(memState, pos, value);
	}
	return pos;
}

tlmdata_addr_ptr find_free_pos_and_allocate_tlmdata(int memState) {
	return find_free_pos_and_allocate_and_init_tlmdata(memState, DEFAULT_TLMDATA_VALUE);
}

void delete_tlmdata(tlmdata_addr_ptr pos, bool isStatic) {
	check_mem_errors_for_delete_tlmdata(pos, isStatic, false);
	allocate_and_init_tlmdata(MEM_FREE, pos, DEFAULT_TLMDATA_VALUE);
}
//////////////////
// TLMDATA - public
//////////////////

tlmdata_addr_ptr allocate_static_tlmdata() {
	return find_free_pos_and_allocate_and_init_tlmdata(MEM_STATIC_OBJ, DEFAULT_TLMDATA_VALUE);
}

tlmdata_addr_ptr allocate_dynamic_tlmdata() {
	return find_free_pos_and_allocate_and_init_tlmdata(MEM_DYN_OBJ, DEFAULT_TLMDATA_VALUE);
}

tlmdata_addr_ptr allocate_static_and_init_tlmdata(tlmdata value) {
	return find_free_pos_and_allocate_and_init_tlmdata(MEM_STATIC_OBJ, value);
}

tlmdata_addr_ptr allocate_dynamic_and_init_tlmdata(tlmdata value) {
	return find_free_pos_and_allocate_and_init_tlmdata(MEM_DYN_OBJ, value);
}

void delete_static_tlmdata(tlmdata_addr_ptr pos) {
	delete_tlmdata(pos, true);
}

void delete_dynamic_tlmdata(tlmdata_addr_ptr pos) {
	delete_tlmdata(pos, false);
}

void empty_stack_tlmdata(tlmdata_addr_ptr pos) {
	if (pos != NULL) {
	    allocate_and_init_tlmdata(MEM_FREE, pos, DEFAULT_TLMDATA_VALUE);
	}
}


/////////////////////////
// TLMDATA ARRAY - private
/////////////////////////

tlmdata_addr_ptr find_free_pos_arr_tlmdata(int memState, int length) {
	int count = 0;
	tlmdata_addr_ptr pos = -1;
	int i = 0;
	if (memState == MEM_STATIC_ARR_HEAD) {
		for (i = 0; i &lt;= TLMDATA_MEMSIZE - 1; i++) {
			if (tlmdataMemState[i] == MEM_FREE) {
				if (count == 0) {
					pos = i;
				}
				count++;
				if (count == length) {
					return pos;
				}
			} else if (is_static_elem_tlmdata(i)) {
				count = 0;
				pos = NULL;
			} else {
				return NULL;
			}
		}
	} else if (memState == MEM_DYN_ARR_HEAD) {
		for(i = TLMDATA_MEMSIZE - 1; i &gt;= 0; i--) {
			if (tlmdataMemState[i] == MEM_FREE) {
				if (count == 0) {
					pos = i;
				}
				count++;
				if (count == length) {
					return pos - length + 1; // return the 'lower' index w.r.t. the memArray; + 1 because count starts at 0
				}
			} else if (is_static_elem_tlmdata(i)) {
				count = 0;
				pos = NULL;
			} else {
				return NULL;
			}
		}
	}
	return NULL;
}

tlmdata_addr_ptr allocate_arr_tlmdata(int memState, int length) {
	int i;
    tlmdata_addr_ptr pos;
    int tailElemStateType;
    if (TLMDATA_FREE_MEM &lt; length) {
		MEM_ERR_NOT_ENOUGH_MEM = true;
		MEM_ERR_NOT_ENOUGH_MEM_TLMDATA = true;
		return NULL;
	}
	pos = find_free_pos_arr_tlmdata(memState, length);
	if (pos == NULL) {
		MEM_ERR_FRAGMENTED_MEM = true;
		MEM_ERR_FRAGMENTED_MEM_TLMDATA = true;
		return NULL;
	}
	if (memState == MEM_STATIC_ARR_HEAD) {
		tailElemStateType = MEM_STATIC_ARR_TAIL;
	} else {
		tailElemStateType = MEM_DYN_ARR_TAIL;
	}
	allocate_tlmdata(memState, pos); // allocate head
	for(i = pos + 1; i &lt; (pos + length); i++) {
		allocate_tlmdata(tailElemStateType, i);
	}
	return pos;
}

void delete_arr_tlmdata(tlmdata_addr_ptr pos, bool isStatic) {
	int i = pos + 1;
	check_mem_errors_for_delete_tlmdata(pos, isStatic, true);
	allocate_and_init_tlmdata(MEM_FREE, pos, DEFAULT_TLMDATA_VALUE);
	while(i &lt; TLMDATA_MEMSIZE &amp;&amp; is_arr_tail_elem_tlmdata(i)) {
		allocate_and_init_tlmdata(MEM_FREE, i, DEFAULT_TLMDATA_VALUE);
		i++;
	}
}

////////////////////////
// TLMDATA ARRAY - public
////////////////////////

tlmdata_addr_ptr allocate_static_arr_tlmdata(int length) {
	return allocate_arr_tlmdata(MEM_STATIC_ARR_HEAD, length);
}

tlmdata_addr_ptr allocate_dynamic_arr_tlmdata(int length) {
	return allocate_arr_tlmdata(MEM_DYN_ARR_HEAD, length);
}

void delete_arr_static_tlmdata(tlmdata_addr_ptr pos) {
	delete_arr_tlmdata(pos, true);
}

void delete_arr_dynamic_tlmdata(tlmdata_addr_ptr pos) {
	delete_arr_tlmdata(pos, false);
}

void empty_stack_arr_tlmdata(tlmdata_addr_ptr pos) {
	int i = pos + 1;
	if (pos != NULL) {
		allocate_and_init_tlmdata(MEM_FREE, pos, DEFAULT_TLMDATA_VALUE);
		while(i &lt; TLMDATA_MEMSIZE &amp;&amp; is_arr_tail_elem_tlmdata(i)) {
			allocate_and_init_tlmdata(MEM_FREE, i, DEFAULT_TLMDATA_VALUE);
			i++;
		}
	}
}

void init_arr_elem_tlmdata(tlmdata_addr_ptr pos, tlmdata value) {
	if (pos == NULL) {
		MEM_ERR_CORRUPTED_MEM = true;
	} else {
		tlmdataMem[pos] = value;
	}
}

void clk$ctor(const int periodparam, int &amp;val, int &amp;_val, int &amp;delta, int &amp;period){
period = periodparam;
val = true;
_val = true;
}
void TLM2_M1$ctor(tlmdata_addr_ptr &amp;d){
}
void AHB_M1$ctor(const unsigned_int id, uint64 &amp;current_Address, unsigned_int &amp;current_Command, unsigned_int &amp;current_DataLength, data_addr_ptr &amp;current_trans, unsigned_int &amp;master_id, bool &amp;m_bus_granted, bool &amp;m_bus_req_pending, unsigned_int &amp;m_data_count, bool &amp;m_data_pending, bool &amp;m_request_pending, bool &amp;m_restart_pending_req, unsigned_int &amp;m_txn_count){
current_DataLength = 0;
current_trans = NULL;
master_id = id;
m_bus_granted = false;
m_bus_req_pending = false;
m_data_count = 0;
m_data_pending = false;
m_request_pending = false;
m_restart_pending_req = false;
m_txn_count = 0;
}
void TLM2_M2$ctor(tlmdata_addr_ptr &amp;d){
}
void AHB_M2$ctor(const unsigned_int id, uint64 &amp;current_Address, unsigned_int &amp;current_Command, unsigned_int &amp;current_DataLength, data_addr_ptr &amp;current_trans, unsigned_int &amp;master_id, bool &amp;m_bus_granted, bool &amp;m_bus_req_pending, unsigned_int &amp;m_data_count, bool &amp;m_data_pending, bool &amp;m_request_pending, bool &amp;m_restart_pending_req, unsigned_int &amp;m_txn_count){
current_DataLength = 0;
current_trans = NULL;
master_id = id;
m_bus_granted = false;
m_bus_req_pending = false;
m_data_count = 0;
m_data_pending = false;
m_request_pending = false;
m_restart_pending_req = false;
m_txn_count = 0;
}
void AHB_S1$ctor(const unsigned_int addr, const unsigned_int tsize, unsigned_int &amp;baseAddr, unsigned_int &amp;counter, data_addr_ptr &amp;current_trans, unsigned_int_addr_ptr &amp;MEM, unsigned_int &amp;mem_size, bool &amp;m_data_pending, bool &amp;m_request_pending, unsigned_int &amp;txn_address, unsigned_int &amp;txn_burst_len){
unsigned_int i;
baseAddr = addr;
counter = 0;
current_trans = NULL;
mem_size = tsize;
m_data_pending = false;
m_request_pending = false;
txn_address = 0;
txn_burst_len = 0;
for(i = 0; i &lt; mem_size; i++){
	unsigned_intMem[MEM + i] = 0;
}
}
void AHB_S2$ctor(const unsigned_int addr, const unsigned_int tsize, unsigned_int &amp;baseAddr, unsigned_int &amp;counter, data_addr_ptr &amp;current_trans, unsigned_int_addr_ptr &amp;MEM, unsigned_int &amp;mem_size, bool &amp;m_data_pending, bool &amp;m_request_pending, unsigned_int &amp;txn_address, unsigned_int &amp;txn_burst_len){
unsigned_int i;
baseAddr = addr;
counter = 0;
current_trans = NULL;
mem_size = tsize;
m_data_pending = false;
m_request_pending = false;
txn_address = 0;
txn_burst_len = 0;
for(i = 0; i &lt; mem_size; i++){
	unsigned_intMem[MEM + i] = 0;
}
}
void AHB_Bus$ctor(data_addr_ptr &amp;outstanding_req, data_addr_ptr &amp;outstanding_data, unsigned_int &amp;outstanding_txn_count, unsigned_int &amp;data_count, unsigned_int &amp;current_req_master, unsigned_int &amp;current_data_master, unsigned_short &amp;m_BusRequest_Register, unsigned_short &amp;m_InService_Register, data_addr_ptr &amp;m_grant_txn, int_addr_ptr &amp;m_grant_phase, int_addr_ptr &amp;m_grant_time, int &amp;m_bus_req_sample_time, int &amp;m_req_sample_time, unsigned_int &amp;m_drop_cycle, unsigned_int_addr_ptr &amp;m_default_size, int &amp;m_outstanding_req_type){
outstanding_req = NULL;
outstanding_data = NULL;
outstanding_txn_count = 0;
data_count = 0;
current_req_master = 0;
current_data_master = 0;
m_BusRequest_Register = 0;
m_InService_Register = 0;
m_drop_cycle = 0;
m_grant_txn = allocate_dynamic_data();
unsigned_intMem[m_default_size] = (32 + 7) / 8;
}
void sc_main(){
clk$ctor(20, clk$val, clk$_val, clk$delta, clk$period);
TLM2_M1$ctor(TLM2_M1$d);
AHB_M1$ctor(1, AHB_M1$current_Address, AHB_M1$current_Command, AHB_M1$current_DataLength, AHB_M1$current_trans, AHB_M1$master_id, AHB_M1$m_bus_granted, AHB_M1$m_bus_req_pending, AHB_M1$m_data_count, AHB_M1$m_data_pending, AHB_M1$m_request_pending, AHB_M1$m_restart_pending_req, AHB_M1$m_txn_count);
TLM2_M2$ctor(TLM2_M2$d);
AHB_M2$ctor(2, AHB_M2$current_Address, AHB_M2$current_Command, AHB_M2$current_DataLength, AHB_M2$current_trans, AHB_M2$master_id, AHB_M2$m_bus_granted, AHB_M2$m_bus_req_pending, AHB_M2$m_data_count, AHB_M2$m_data_pending, AHB_M2$m_request_pending, AHB_M2$m_restart_pending_req, AHB_M2$m_txn_count);
AHB_S1$ctor(0, 3, AHB_S1$baseAddr, AHB_S1$counter, AHB_S1$current_trans, AHB_S1$MEM, AHB_S1$mem_size, AHB_S1$m_data_pending, AHB_S1$m_request_pending, AHB_S1$txn_address, AHB_S1$txn_burst_len);
AHB_S2$ctor(3, 3, AHB_S2$baseAddr, AHB_S2$counter, AHB_S2$current_trans, AHB_S2$MEM, AHB_S2$mem_size, AHB_S2$m_data_pending, AHB_S2$m_request_pending, AHB_S2$txn_address, AHB_S2$txn_burst_len);
AHB_Bus$ctor(AHB_Bus$outstanding_req, AHB_Bus$outstanding_data, AHB_Bus$outstanding_txn_count, AHB_Bus$data_count, AHB_Bus$current_req_master, AHB_Bus$current_data_master, AHB_Bus$m_BusRequest_Register, AHB_Bus$m_InService_Register, AHB_Bus$m_grant_txn, AHB_Bus$m_grant_phase, AHB_Bus$m_grant_time, AHB_Bus$m_bus_req_sample_time, AHB_Bus$m_req_sample_time, AHB_Bus$m_drop_cycle, AHB_Bus$m_default_size, AHB_Bus$m_outstanding_req_type);
}</declaration><template><name>InitializerTemplate</name><parameter /><declaration /><location id="id0" x="0" y="16"><urgent /></location><location id="id1" x="0" y="80"><committed /></location><location id="id2" x="0" y="144" /><init ref="id0" /><transition><source ref="id0" /><target ref="id1" /><label kind="synchronisation" x="8" y="32">deltadelay?</label><label kind="comments" /><nail x="0" y="32" /><nail x="0" y="64" /></transition><transition><source ref="id1" /><target ref="id2" /><label kind="synchronisation" x="8" y="96">initdone!</label><label kind="comments" /><nail x="0" y="96" /><nail x="0" y="128" /></transition></template><template><name>MethodStarterNoInitTemplate</name><parameter>chan &amp;ctrl, broadcast chan &amp;sensitive</parameter><declaration /><location id="id19" x="46" y="16" /><location id="id20" x="102" y="80"><urgent /></location><location id="id21" x="56" y="240"><urgent /></location><location id="id22" x="0" y="176"><urgent /></location><location id="id1096" x="0" y="112"><urgent /></location><init ref="id19" /><transition><source ref="id20" /><target ref="id21" /><label kind="synchronisation" x="120" y="144">activate?</label><label kind="comments" /><nail x="112" y="96" /><nail x="112" y="224" /></transition><transition><source ref="id21" /><target ref="id22" /><label kind="synchronisation" x="8" y="192">ctrl!</label><label kind="comments" /><nail x="0" y="224" /><nail x="0" y="192" /></transition><transition><source ref="id22" /><target ref="id1096" /><label kind="synchronisation" x="8" y="128">ctrl?</label><label kind="assignment" x="8" y="141">readyprocs--</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="0" y="160" /><nail x="0" y="128" /></transition><transition><source ref="id19" /><target ref="id20" /><label kind="synchronisation" x="101" y="32">sensitive?</label><label kind="assignment" x="101" y="45">readyprocs++</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="93" y="32" /><nail x="93" y="64" /></transition><transition><source ref="id1096" /><target ref="id19" /><label kind="synchronisation" x="8" y="48">deactivate!</label><label kind="comments" /><nail x="0" y="96" /><nail x="0" y="32" /></transition></template><template><name>SCEventTemplate</name><parameter>chan &amp;notify_imm, int &amp;notify_t, chan &amp;notify, broadcast chan &amp;wait</parameter><declaration>clock wait_clock;
int ndelay;</declaration><location id="id24" x="1089" y="16"><name x="1113" y="8">initL</name></location><location id="id25" x="1150" y="95"><name x="1174" y="87">notify_requested</name><committed /></location><location id="id26" x="1150" y="383"><name x="1174" y="368">wait_for_delta</name><label kind="invariant" x="1174" y="383">wait_clock &lt;= ndelay</label></location><location id="id27" x="386" y="191"><name x="410" y="183">notify_now</name><committed /></location><location id="id28" x="537" y="319"><name x="561" y="311">advancing_time</name><committed /></location><location id="id922" x="768" y="223"><committed /></location><location id="id923" x="664" y="287"><committed /></location><location id="id924" x="100" y="127"><committed /></location><init ref="id24" /><transition><source ref="id26" /><target ref="id25" /><label kind="synchronisation" x="1097" y="223">notify?</label><label kind="comments" /><nail x="1089" y="367" /><nail x="1089" y="111" /></transition><transition><source ref="id25" /><target ref="id26" /><label kind="guard" x="1158" y="223">wait_clock + notify_t &gt;= ndelay</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="1150" y="111" /><nail x="1150" y="367" /></transition><transition><source ref="id26" /><target ref="id27" /><label kind="guard" x="8" y="263">wait_clock == ndelay  &amp;&amp;
ndelay != 0</label><label kind="synchronisation" x="8" y="291">advancetime!</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="0" y="367" /><nail x="0" y="207" /></transition><transition><source ref="id28" /><target ref="id26" /><label kind="guard" x="394" y="335">wait_clock &lt; ndelay</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="386" y="335" /><nail x="386" y="367" /></transition><transition><source ref="id28" /><target ref="id27" /><label kind="guard" x="394" y="239">wait_clock == ndelay</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="386" y="303" /><nail x="386" y="207" /></transition><transition><source ref="id26" /><target ref="id27" /><label kind="synchronisation" x="198" y="271">notify_imm?</label><label kind="comments" /><nail x="190" y="367" /><nail x="190" y="207" /></transition><transition><source ref="id24" /><target ref="id27" /><label kind="synchronisation" x="8" y="87">notify_imm?</label><label kind="comments" /><nail x="0" y="32" /><nail x="0" y="175" /></transition><transition><source ref="id24" /><target ref="id25" /><label kind="synchronisation" x="1097" y="32">notify?</label><label kind="assignment" x="1097" y="45">ndelay = notify_t,
wait_clock = 0</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="1089" y="32" /><nail x="1089" y="79" /></transition><transition><source ref="id25" /><target ref="id922" /><label kind="guard" x="880" y="143">wait_clock + notify_t &lt; ndelay</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="872" y="111" /><nail x="872" y="207" /></transition><transition><source ref="id922" /><target ref="id923" /><label kind="assignment" x="672" y="239">ndelay = notify_t</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="664" y="239" /><nail x="664" y="271" /></transition><transition><source ref="id923" /><target ref="id26" /><label kind="assignment" x="672" y="319">wait_clock = 0</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="664" y="303" /><nail x="664" y="367" /></transition><transition><source ref="id26" /><target ref="id27" /><label kind="guard" x="298" y="271">ndelay == 0</label><label kind="synchronisation" x="298" y="284">deltadelay?</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="290" y="367" /><nail x="290" y="207" /></transition><transition><source ref="id26" /><target ref="id28" /><label kind="guard" x="545" y="335">ndelay != 0</label><label kind="synchronisation" x="545" y="348">advancetime?</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="537" y="367" /><nail x="537" y="335" /></transition><transition><source ref="id27" /><target ref="id924" /><label kind="assignment" x="108" y="143">wait_clock = 0</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="100" y="175" /><nail x="100" y="143" /></transition><transition><source ref="id924" /><target ref="id24" /><label kind="synchronisation" x="108" y="55">wait!</label><label kind="comments" /><nail x="100" y="111" /><nail x="100" y="32" /></transition></template><template><name>SCMainTemplate</name><parameter /><declaration /><location id="id898" x="0" y="16"><name x="24" y="8">init_location</name><urgent /></location><location id="id905" x="127" y="157"><urgent /></location><location id="id906" x="85" y="189"><urgent /></location><location id="id907" x="0" y="285"><name x="24" y="277">scmain_end</name></location><location id="id1079" x="212" y="253"><urgent /></location><init ref="id898" /><transition><source ref="id898" /><target ref="id905" /><label kind="assignment" x="8" y="32">TLM2_M1$d = allocate_static_tlmdata(),
TLM2_M2$d = allocate_static_tlmdata(),
AHB_S1$MEM = allocate_static_arr_unsigned_int(3),
AHB_S2$MEM = allocate_static_arr_unsigned_int(3),
AHB_Bus$m_grant_phase = allocate_static_int(),
AHB_Bus$m_grant_time = allocate_static_int(),
AHB_Bus$m_default_size = allocate_static_unsigned_int()</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="0" y="32" /><nail x="0" y="141" /></transition><transition><source ref="id906" /><target ref="id907" /><label kind="synchronisation" x="8" y="221">scmodules_initialized!</label><label kind="comments" /><nail x="0" y="205" /><nail x="0" y="269" /></transition><transition><source ref="id905" /><target ref="id1079" /><label kind="guard" x="263" y="189">MEM_ERR_NOT_ENOUGH_MEM == 0</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="255" y="173" /><nail x="255" y="237" /></transition><transition><source ref="id1079" /><target ref="id906" /><label kind="assignment" x="178" y="205">sc_main()</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="170" y="237" /><nail x="170" y="205" /></transition></template><template><name>SchedulerTemplate</name><parameter /><declaration /><location id="id890" x="720" y="16"><name x="744" y="8">init_location</name><urgent /></location><location id="id891" x="840" y="400"><name x="864" y="392">execute</name><urgent /></location><location id="id892" x="840" y="80"><name x="864" y="72">evaluate</name><urgent /></location><location id="id893" x="242" y="240"><name x="266" y="232">update</name><urgent /></location><location id="id894" x="150" y="304"><name x="174" y="296">updating</name><urgent /></location><location id="id895" x="485" y="176"><name x="509" y="168">nextdelta</name><urgent /></location><location id="id896" x="606" y="368"><name x="630" y="360">time_progress</name></location><location id="id897" x="75" y="368"><urgent /></location><location id="id1065" x="0" y="144"><urgent /></location><init ref="id890" /><transition><source ref="id890" /><target ref="id892" /><label kind="synchronisation" x="728" y="32">scmodules_initialized?</label><label kind="comments" /><nail x="720" y="32" /><nail x="720" y="64" /></transition><transition><source ref="id892" /><target ref="id891" /><label kind="guard" x="728" y="224">readyprocs &gt; 0</label><label kind="synchronisation" x="728" y="237">activate!</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="720" y="96" /><nail x="720" y="384" /></transition><transition><source ref="id891" /><target ref="id892" /><label kind="synchronisation" x="848" y="224">deactivate?</label><label kind="comments" /><nail x="840" y="384" /><nail x="840" y="96" /></transition><transition><source ref="id893" /><target ref="id897" /><label kind="guard" x="8" y="288">updaterequests &gt; 0</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="0" y="256" /><nail x="0" y="352" /></transition><transition><source ref="id897" /><target ref="id894" /><label kind="synchronisation" x="158" y="320">updatestart!</label><label kind="comments" /><nail x="150" y="352" /><nail x="150" y="320" /></transition><transition><source ref="id894" /><target ref="id893" /><label kind="synchronisation" x="158" y="256">updateend?</label><label kind="comments" /><nail x="150" y="288" /><nail x="150" y="256" /></transition><transition><source ref="id893" /><target ref="id895" /><label kind="guard" x="250" y="192">updaterequests == 0</label><label kind="synchronisation" x="250" y="205">deltadelay!</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="242" y="224" /><nail x="242" y="192" /></transition><transition><source ref="id895" /><target ref="id896" /><label kind="guard" x="485" y="256">readyprocs == 0</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="477" y="192" /><nail x="477" y="352" /></transition><transition><source ref="id895" /><target ref="id892" /><label kind="guard" x="493" y="112">readyprocs &gt; 0</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="485" y="160" /><nail x="485" y="96" /></transition><transition><source ref="id896" /><target ref="id892" /><label kind="synchronisation" x="614" y="208">advancetime?</label><label kind="comments" /><nail x="606" y="352" /><nail x="606" y="96" /></transition><transition><source ref="id892" /><target ref="id1065" /><label kind="guard" x="8" y="96">readyprocs == 0</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="0" y="96" /><nail x="0" y="128" /></transition><transition><source ref="id1065" /><target ref="id893" /><label kind="assignment" x="8" y="176">deltacount = (deltacount + 1) % 2</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="0" y="160" /><nail x="0" y="224" /></transition></template><template><name>ThreadStarterTemplate</name><parameter>chan &amp;ctrl</parameter><declaration /><location id="id3" x="0" y="16"><urgent /></location><location id="id4" x="98" y="80"><urgent /></location><location id="id5" x="145" y="176" /><location id="id7" x="0" y="208" /><location id="id1104" x="46" y="112"><urgent /></location><init ref="id3" /><transition><source ref="id3" /><target ref="id4" /><label kind="synchronisation" x="8" y="32">activate?</label><label kind="comments" /><nail x="0" y="32" /><nail x="0" y="64" /></transition><transition><source ref="id4" /><target ref="id5" /><label kind="synchronisation" x="205" y="112">ctrl!</label><label kind="comments" /><nail x="197" y="96" /><nail x="197" y="160" /></transition><transition><source ref="id5" /><target ref="id1104" /><label kind="synchronisation" x="101" y="128">ctrl?</label><label kind="assignment" x="101" y="141">readyprocs--</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="93" y="160" /><nail x="93" y="128" /></transition><transition><source ref="id1104" /><target ref="id7" /><label kind="synchronisation" x="8" y="144">deactivate!</label><label kind="comments" /><nail x="0" y="128" /><nail x="0" y="192" /></transition></template><template><name>ahb_simple_bus$arbitrate</name><parameter>unsigned_short &amp;m_InService_Register, unsigned_short &amp;m_BusRequest_Register, unsigned_int &amp;current_req_master, chan &amp;arbitrate$ctrl</parameter><declaration>unsigned_short j;
unsigned_short temp;</declaration><location id="id105" x="108" y="16"><name x="132" y="8">init_location</name></location><location id="id109" x="514" y="80"><urgent /></location><location id="id110" x="108" y="144"><urgent /></location><location id="id111" x="496" y="353"><urgent /></location><location id="id112" x="161" y="240"><urgent /></location><location id="id114" x="561" y="176"><urgent /></location><location id="id116" x="413" y="272"><urgent /></location><location id="id107" x="460" y="385"><urgent /></location><init ref="id105" /><transition><source ref="id105" /><target ref="id109" /><label kind="synchronisation" x="116" y="32">arbitrate$ctrl?</label><label kind="assignment" x="116" y="45">j = 0</label><label kind="comments">Update:
nodeID: 4285, file: ahb_simple_bus.cpp, line: 9</label><nail x="108" y="32" /><nail x="108" y="64" /></transition><transition><source ref="id109" /><target ref="id110" /><label kind="guard" x="116" y="96">j &lt; 2</label><label kind="comments">Guard:
nodeID: 4307, file: ahb_simple_bus.cpp, line: 9</label><nail x="108" y="96" /><nail x="108" y="128" /></transition><transition><source ref="id110" /><target ref="id112" /><label kind="assignment" x="116" y="176">temp = 1 &lt;&lt; j</label><label kind="comments">Update:
nodeID: 4341, file: ahb_simple_bus.cpp, line: 11</label><nail x="108" y="160" /><nail x="108" y="224" /></transition><transition><source ref="id112" /><target ref="id114" /><label kind="guard" x="222" y="192">m_BusRequest_Register &amp; temp</label><label kind="comments">Guard:
nodeID: 4373, file: ahb_simple_bus.cpp, line: 12</label><nail x="214" y="224" /><nail x="214" y="192" /></transition><transition><source ref="id114" /><target ref="id116" /><label kind="guard" x="467" y="208">m_InService_Register == 0</label><label kind="comments">Guard:
nodeID: 4393, file: ahb_simple_bus.cpp, line: 14</label><nail x="459" y="192" /><nail x="459" y="256" /></transition><transition><source ref="id116" /><target ref="id111" /><label kind="assignment" x="376" y="288">m_InService_Register = temp,
current_req_master = j,
m_BusRequest_Register -= temp</label><label kind="comments">Update:
nodeID: 4413, file: ahb_simple_bus.cpp, line: 16,
nodeID: 4431, file: ahb_simple_bus.cpp, line: 17,
nodeID: 4431, file: ahb_simple_bus.cpp, line: 17</label><nail x="368" y="288" /><nail x="368" y="337" /></transition><transition><source ref="id114" /><target ref="id111" /><label kind="guard" x="672" y="248">!(m_InService_Register == 0)</label><label kind="comments">Guard:
nodeID: 4393, file: ahb_simple_bus.cpp, line: 14</label><nail x="664" y="192" /><nail x="664" y="337" /></transition><transition><source ref="id112" /><target ref="id111" /><label kind="guard" x="116" y="280">!(m_BusRequest_Register &amp; temp)</label><label kind="comments">Guard:
nodeID: 4373, file: ahb_simple_bus.cpp, line: 12</label><nail x="108" y="256" /><nail x="108" y="337" /></transition><transition><source ref="id111" /><target ref="id109" /><label kind="assignment" x="892" y="200">j++</label><label kind="comments">Update:
nodeID: 4325, file: ahb_simple_bus.cpp, line: 9</label><nail x="884" y="337" /><nail x="884" y="96" /></transition><transition><source ref="id109" /><target ref="id107" /><label kind="guard" x="929" y="216">!(j &lt; 2)</label><label kind="comments">Guard:
nodeID: 4307, file: ahb_simple_bus.cpp, line: 9</label><nail x="921" y="96" /><nail x="921" y="369" /></transition><transition><source ref="id107" /><target ref="id105" /><label kind="synchronisation" x="8" y="184">arbitrate$ctrl!</label><label kind="comments" /><nail x="0" y="369" /><nail x="0" y="32" /></transition></template><template><name>ahb_simple_bus$bus_grant</name><parameter>int_addr_ptr &amp;m_grant_time, data_addr_ptr &amp;slave_sock1$nb_transport_bw$param$tran, data_addr_ptr &amp;m_grant_txn, chan &amp;slave_sock0$nb_transport_bw$ctrl, tlm_sync_enum &amp;slave_sock0$nb_transport_bw$return, int_addr_ptr &amp;slave_sock0$nb_transport_bw$param$t, int_addr_ptr &amp;m_grant_phase, data_addr_ptr &amp;slave_sock0$nb_transport_bw$param$tran, int_addr_ptr &amp;slave_sock1$nb_transport_bw$param$phase, chan &amp;bus_grant$ctrl, chan &amp;slave_sock1$nb_transport_bw$ctrl, unsigned_int &amp;current_req_master, int_addr_ptr &amp;slave_sock1$nb_transport_bw$param$t, tlm_sync_enum &amp;slave_sock1$nb_transport_bw$return, chan &amp;arbitrate$ctrl, int_addr_ptr &amp;slave_sock0$nb_transport_bw$param$phase</parameter><declaration>tlm_sync_enum retval;</declaration><location id="id142" x="119" y="16"><name x="143" y="8">init_location</name></location><location id="id143" x="572" y="80"><urgent /></location><location id="id145" x="947" y="176"><urgent /></location><location id="id146" x="733" y="272"><urgent /></location><location id="id147" x="599" y="336"><urgent /></location><location id="id148" x="599" y="464"><urgent /></location><location id="id149" x="599" y="400" /><location id="id151" x="831" y="528"><urgent /></location><location id="id154" x="831" y="673" /><location id="id152" x="119" y="528"><urgent /></location><location id="id158" x="119" y="673" /><location id="id144" x="415" y="782"><urgent /></location><location id="id986" x="831" y="609"><urgent /></location><location id="id992" x="119" y="609"><urgent /></location><location id="id1193" x="119" y="144"><name x="143" y="136">mem_access_fail_52</name><urgent /></location><location id="id1194" x="599" y="240"><name x="623" y="232">mem_access_fail_53</name><urgent /></location><init ref="id142" /><transition><source ref="id142" /><target ref="id143" /><label kind="synchronisation" x="127" y="32">bus_grant$ctrl?</label><label kind="comments" /><nail x="119" y="32" /><nail x="119" y="64" /></transition><transition><source ref="id143" /><target ref="id145" /><label kind="guard" x="1034" y="112">addr_is_valid_int(m_grant_time)</label><label kind="assignment" x="1034" y="125">intMem[m_grant_time] = 1</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 4501, file: ahb_simple_bus.cpp, line: 30</label><nail x="1026" y="96" /><nail x="1026" y="160" /></transition><transition><source ref="id145" /><target ref="id146" /><label kind="guard" x="876" y="208">addr_is_valid_int(m_grant_phase)</label><label kind="assignment" x="876" y="221">intMem[m_grant_phase] = 61</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 4535, file: ahb_simple_bus.cpp, line: 31</label><nail x="868" y="192" /><nail x="868" y="256" /></transition><transition><source ref="id146" /><target ref="id147" /><label kind="assignment" x="607" y="288">retval = TLM_ACCEPTED</label><label kind="comments">Update:
nodeID: 4555, file: ahb_simple_bus.cpp, line: 32</label><nail x="599" y="288" /><nail x="599" y="320" /></transition><transition><source ref="id147" /><target ref="id149" /><label kind="synchronisation" x="607" y="352">arbitrate$ctrl!</label><label kind="comments" /><nail x="599" y="352" /><nail x="599" y="384" /></transition><transition><source ref="id149" /><target ref="id148" /><label kind="synchronisation" x="607" y="416">arbitrate$ctrl?</label><label kind="comments" /><nail x="599" y="416" /><nail x="599" y="448" /></transition><transition><source ref="id148" /><target ref="id151" /><label kind="guard" x="839" y="480">current_req_master == 0</label><label kind="comments">Guard:
nodeID: 4673, file: ahb_simple_bus.cpp, line: 38</label><nail x="831" y="480" /><nail x="831" y="512" /></transition><transition><source ref="id148" /><target ref="id152" /><label kind="guard" x="127" y="480">current_req_master == 1</label><label kind="comments">Guard:
nodeID: 4735, file: ahb_simple_bus.cpp, line: 43</label><nail x="119" y="480" /><nail x="119" y="512" /></transition><transition><source ref="id148" /><target ref="id144" /><label kind="guard" x="607" y="606">!(current_req_master == 0)  &amp;&amp;
!(current_req_master == 1)</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="599" y="480" /><nail x="599" y="766" /></transition><transition><source ref="id144" /><target ref="id142" /><label kind="synchronisation" x="8" y="383">bus_grant$ctrl!</label><label kind="comments" /><nail x="0" y="766" /><nail x="0" y="32" /></transition><transition><source ref="id151" /><target ref="id986" /><label kind="assignment" x="839" y="544">slave_sock0$nb_transport_bw$param$tran = m_grant_txn,
slave_sock0$nb_transport_bw$param$phase = m_grant_phase,
slave_sock0$nb_transport_bw$param$t = m_grant_time</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="831" y="544" /><nail x="831" y="593" /></transition><transition><source ref="id986" /><target ref="id154" /><label kind="synchronisation" x="839" y="625">slave_sock0$nb_transport_bw$ctrl!</label><label kind="comments" /><nail x="831" y="625" /><nail x="831" y="657" /></transition><transition><source ref="id154" /><target ref="id144" /><label kind="synchronisation" x="839" y="689">slave_sock0$nb_transport_bw$ctrl?</label><label kind="assignment" x="839" y="702">slave_sock0$nb_transport_bw$param$tran = NULL,
slave_sock0$nb_transport_bw$param$phase = NULL,
slave_sock0$nb_transport_bw$param$t = NULL,
retval = slave_sock0$nb_transport_bw$return</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="831" y="689" /><nail x="831" y="766" /></transition><transition><source ref="id152" /><target ref="id992" /><label kind="assignment" x="127" y="544">slave_sock1$nb_transport_bw$param$tran = m_grant_txn,
slave_sock1$nb_transport_bw$param$phase = m_grant_phase,
slave_sock1$nb_transport_bw$param$t = m_grant_time</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="119" y="544" /><nail x="119" y="593" /></transition><transition><source ref="id992" /><target ref="id158" /><label kind="synchronisation" x="127" y="625">slave_sock1$nb_transport_bw$ctrl!</label><label kind="comments" /><nail x="119" y="625" /><nail x="119" y="657" /></transition><transition><source ref="id158" /><target ref="id144" /><label kind="synchronisation" x="127" y="689">slave_sock1$nb_transport_bw$ctrl?</label><label kind="assignment" x="127" y="702">slave_sock1$nb_transport_bw$param$tran = NULL,
slave_sock1$nb_transport_bw$param$phase = NULL,
slave_sock1$nb_transport_bw$param$t = NULL,
retval = slave_sock1$nb_transport_bw$return</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="119" y="689" /><nail x="119" y="766" /></transition><transition><source ref="id143" /><target ref="id1193" /><label kind="guard" x="127" y="96">!(addr_is_valid_int(m_grant_time))</label><label kind="assignment" x="127" y="109">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="119" y="96" /><nail x="119" y="128" /></transition><transition><source ref="id145" /><target ref="id1194" /><label kind="guard" x="607" y="192">!(addr_is_valid_int(m_grant_phase))</label><label kind="assignment" x="607" y="205">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="599" y="192" /><nail x="599" y="224" /></transition></template><template><name>ahb_simple_bus$bus_ungrant</name><parameter>int_addr_ptr &amp;m_grant_time, data_addr_ptr &amp;slave_sock1$nb_transport_bw$param$tran, data_addr_ptr &amp;m_grant_txn, chan &amp;slave_sock0$nb_transport_bw$ctrl, tlm_sync_enum &amp;slave_sock0$nb_transport_bw$return, int_addr_ptr &amp;slave_sock0$nb_transport_bw$param$t, int_addr_ptr &amp;m_grant_phase, data_addr_ptr &amp;slave_sock0$nb_transport_bw$param$tran, int_addr_ptr &amp;slave_sock1$nb_transport_bw$param$phase, unsigned_short &amp;m_InService_Register, chan &amp;bus_grant_ev$notify_imm, chan &amp;slave_sock1$nb_transport_bw$ctrl, unsigned_int &amp;outstanding_txn_count, chan &amp;bus_ungrant$ctrl, unsigned_short &amp;m_BusRequest_Register, unsigned_int &amp;current_req_master, int_addr_ptr &amp;slave_sock1$nb_transport_bw$param$t, tlm_sync_enum &amp;slave_sock1$nb_transport_bw$return, int_addr_ptr &amp;slave_sock0$nb_transport_bw$param$phase</parameter><declaration>tlm_sync_enum retval;</declaration><location id="id120" x="135" y="16"><name x="159" y="8">init_location</name></location><location id="id121" x="263" y="80"><urgent /></location><location id="id123" x="348" y="176"><urgent /></location><location id="id124" x="562" y="240"><urgent /></location><location id="id126" x="1336" y="306"><urgent /></location><location id="id128" x="2110" y="370"><urgent /></location><location id="id131" x="2110" y="515" /><location id="id127" x="1994" y="624"><urgent /></location><location id="id129" x="655" y="878"><urgent /></location><location id="id135" x="1344" y="733" /><location id="id138" x="1106" y="974"><urgent /></location><location id="id140" x="234" y="910"><urgent /></location><location id="id122" x="167" y="1038"><urgent /></location><location id="id1069" x="2110" y="451"><urgent /></location><location id="id1075" x="981" y="797"><urgent /></location><location id="id1205" x="135" y="144"><name x="159" y="136">mem_access_fail_64</name><urgent /></location><location id="id1206" x="135" y="797"><name x="159" y="789">mem_access_fail_65</name><urgent /></location><init ref="id120" /><transition><source ref="id120" /><target ref="id121" /><label kind="synchronisation" x="143" y="32">bus_ungrant$ctrl?</label><label kind="comments" /><nail x="135" y="32" /><nail x="135" y="64" /></transition><transition><source ref="id121" /><target ref="id123" /><label kind="guard" x="400" y="112">addr_is_valid_int(m_grant_time)</label><label kind="assignment" x="400" y="125">intMem[m_grant_time] = 1</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 5012, file: ahb_simple_bus.cpp, line: 69</label><nail x="392" y="96" /><nail x="392" y="160" /></transition><transition><source ref="id123" /><target ref="id124" /><label kind="guard" x="570" y="192">addr_is_valid_int(m_grant_phase)</label><label kind="assignment" x="570" y="205">intMem[m_grant_phase] = 62</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 5046, file: ahb_simple_bus.cpp, line: 70</label><nail x="562" y="192" /><nail x="562" y="224" /></transition><transition><source ref="id124" /><target ref="id126" /><label kind="assignment" x="570" y="256">m_InService_Register = 0,
retval = TLM_ACCEPTED</label><label kind="comments">Update:
nodeID: 5064, file: ahb_simple_bus.cpp, line: 71,
nodeID: 5084, file: ahb_simple_bus.cpp, line: 72</label><nail x="562" y="256" /><nail x="562" y="290" /></transition><transition><source ref="id126" /><target ref="id128" /><label kind="guard" x="2118" y="322">current_req_master == 0</label><label kind="comments">Guard:
nodeID: 5110, file: ahb_simple_bus.cpp, line: 75</label><nail x="2110" y="322" /><nail x="2110" y="354" /></transition><transition><source ref="id126" /><target ref="id129" /><label kind="guard" x="570" y="576">current_req_master == 1</label><label kind="comments">Guard:
nodeID: 5172, file: ahb_simple_bus.cpp, line: 80</label><nail x="562" y="322" /><nail x="562" y="862" /></transition><transition><source ref="id126" /><target ref="id127" /><label kind="guard" x="1886" y="448">!(current_req_master == 0)  &amp;&amp;
!(current_req_master == 1)</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="1878" y="322" /><nail x="1878" y="608" /></transition><transition><source ref="id127" /><target ref="id138" /><label kind="assignment" x="1886" y="783">outstanding_txn_count = 0</label><label kind="comments">Update:
nodeID: 5323, file: ahb_simple_bus.cpp, line: 94</label><nail x="1878" y="640" /><nail x="1878" y="958" /></transition><transition><source ref="id138" /><target ref="id140" /><label kind="guard" x="342" y="926">m_BusRequest_Register != 0</label><label kind="comments">Guard:
nodeID: 5341, file: ahb_simple_bus.cpp, line: 95</label><nail x="334" y="958" /><nail x="334" y="926" /></transition><transition><source ref="id140" /><target ref="id122" /><label kind="synchronisation" x="143" y="958">bus_grant_ev$notify_imm!</label><label kind="comments" /><nail x="135" y="926" /><nail x="135" y="1022" /></transition><transition><source ref="id138" /><target ref="id122" /><label kind="guard" x="342" y="990">!(m_BusRequest_Register != 0)</label><label kind="comments">Guard:
nodeID: 5341, file: ahb_simple_bus.cpp, line: 95</label><nail x="334" y="990" /><nail x="334" y="1022" /></transition><transition><source ref="id122" /><target ref="id120" /><label kind="synchronisation" x="8" y="511">bus_ungrant$ctrl!</label><label kind="comments" /><nail x="0" y="1022" /><nail x="0" y="32" /></transition><transition><source ref="id128" /><target ref="id1069" /><label kind="assignment" x="2118" y="386">slave_sock0$nb_transport_bw$param$tran = m_grant_txn,
slave_sock0$nb_transport_bw$param$phase = m_grant_phase,
slave_sock0$nb_transport_bw$param$t = m_grant_time</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="2110" y="386" /><nail x="2110" y="435" /></transition><transition><source ref="id1069" /><target ref="id131" /><label kind="synchronisation" x="2118" y="467">slave_sock0$nb_transport_bw$ctrl!</label><label kind="comments" /><nail x="2110" y="467" /><nail x="2110" y="499" /></transition><transition><source ref="id131" /><target ref="id127" /><label kind="synchronisation" x="2118" y="531">slave_sock0$nb_transport_bw$ctrl?</label><label kind="assignment" x="2118" y="544">slave_sock0$nb_transport_bw$param$tran = NULL,
slave_sock0$nb_transport_bw$param$phase = NULL,
slave_sock0$nb_transport_bw$param$t = NULL,
retval = slave_sock0$nb_transport_bw$return</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="2110" y="531" /><nail x="2110" y="608" /></transition><transition><source ref="id129" /><target ref="id1075" /><label kind="assignment" x="757" y="813">slave_sock1$nb_transport_bw$param$tran = m_grant_txn,
slave_sock1$nb_transport_bw$param$phase = m_grant_phase,
slave_sock1$nb_transport_bw$param$t = m_grant_time</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="749" y="862" /><nail x="749" y="813" /></transition><transition><source ref="id1075" /><target ref="id135" /><label kind="synchronisation" x="1221" y="749">slave_sock1$nb_transport_bw$ctrl!</label><label kind="comments" /><nail x="1213" y="781" /><nail x="1213" y="749" /></transition><transition><source ref="id135" /><target ref="id127" /><label kind="synchronisation" x="1483" y="640">slave_sock1$nb_transport_bw$ctrl?</label><label kind="assignment" x="1483" y="653">slave_sock1$nb_transport_bw$param$tran = NULL,
slave_sock1$nb_transport_bw$param$phase = NULL,
slave_sock1$nb_transport_bw$param$t = NULL,
retval = slave_sock1$nb_transport_bw$return</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="1475" y="717" /><nail x="1475" y="640" /></transition><transition><source ref="id121" /><target ref="id1205" /><label kind="guard" x="143" y="96">!(addr_is_valid_int(m_grant_time))</label><label kind="assignment" x="143" y="109">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="135" y="96" /><nail x="135" y="128" /></transition><transition><source ref="id123" /><target ref="id1206" /><label kind="guard" x="143" y="470">!(addr_is_valid_int(m_grant_phase))</label><label kind="assignment" x="143" y="483">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="135" y="192" /><nail x="135" y="781" /></transition></template><template><name>ahb_simple_bus$get_index</name><parameter>chan &amp;get_index$ctrl, uint64 &amp;get_index$param$address, unsigned_int &amp;get_index$return</parameter><declaration>uint64 address;
unsigned_int i;</declaration><location id="id167" x="789" y="16"><name x="813" y="8">init_location</name></location><location id="id171" x="335" y="240"><urgent /></location><location id="id172" x="78" y="304"><urgent /></location><location id="id173" x="239" y="370"><urgent /></location><location id="id175" x="422" y="402"><urgent /></location><location id="id170" x="671" y="176"><urgent /></location><location id="id1139" x="817" y="80"><urgent /></location><location id="id1140" x="671" y="112"><urgent /></location><init ref="id167" /><transition><source ref="id171" /><target ref="id172" /><label kind="guard" x="8" y="256">i &lt; 2 + 0</label><label kind="comments">Guard:
nodeID: 5555, file: ahb_simple_bus.cpp, line: 117</label><nail x="0" y="256" /><nail x="0" y="288" /></transition><transition><source ref="id172" /><target ref="id175" /><label kind="guard" x="8" y="336">address &gt;= i * 3  &amp;&amp;
address &lt; (i + 1) * 3</label><label kind="comments">Guard:
nodeID: 5629, file: ahb_simple_bus.cpp, line: 118</label><nail x="0" y="320" /><nail x="0" y="386" /></transition><transition><source ref="id172" /><target ref="id173" /><label kind="guard" x="164" y="320">!(address &gt;= i * 3  &amp;&amp;
address &lt; (i + 1) * 3)</label><label kind="comments">Guard:
nodeID: 5629, file: ahb_simple_bus.cpp, line: 118</label><nail x="156" y="320" /><nail x="156" y="354" /></transition><transition><source ref="id173" /><target ref="id171" /><label kind="assignment" x="330" y="289">i = i + 1</label><label kind="comments">Update:
nodeID: 5583, file: ahb_simple_bus.cpp, line: 117</label><nail x="322" y="354" /><nail x="322" y="256" /></transition><transition><source ref="id171" /><target ref="id170" /><label kind="guard" x="679" y="192">!(i &lt; 2 + 0)</label><label kind="comments">Guard:
nodeID: 5555, file: ahb_simple_bus.cpp, line: 117</label><nail x="671" y="224" /><nail x="671" y="192" /></transition><transition><source ref="id167" /><target ref="id171" /><label kind="synchronisation" x="397" y="104">get_index$ctrl?</label><label kind="assignment" x="397" y="117">address = get_index$param$address,
i = 0</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: 5533, file: ahb_simple_bus.cpp, line: 117</label><nail x="389" y="32" /><nail x="389" y="224" /></transition><transition><source ref="id175" /><target ref="id1139" /><label kind="assignment" x="853" y="225">get_index$return = i</label><label kind="comments">Update:
nodeID: 5669, file: ahb_simple_bus.cpp, line: 119</label><nail x="845" y="386" /><nail x="845" y="96" /></transition><transition><source ref="id1139" /><target ref="id167" /><label kind="synchronisation" x="797" y="32">get_index$ctrl!</label><label kind="comments" /><nail x="789" y="64" /><nail x="789" y="32" /></transition><transition><source ref="id170" /><target ref="id1140" /><label kind="assignment" x="679" y="128">get_index$return = 0</label><label kind="comments">Update:
nodeID: 5680, file: ahb_simple_bus.cpp, line: 122</label><nail x="671" y="160" /><nail x="671" y="128" /></transition><transition><source ref="id1140" /><target ref="id167" /><label kind="synchronisation" x="679" y="48">get_index$ctrl!</label><label kind="comments" /><nail x="671" y="96" /><nail x="671" y="32" /></transition></template><template><name>ahb_simple_bus$nb_transport_bw</name><parameter>data_addr_ptr &amp;slave_sock1$nb_transport_bw$param$tran, chan &amp;slave_sock0$nb_transport_bw$ctrl, tlm_sync_enum &amp;slave_sock0$nb_transport_bw$return, unsigned_int_addr_ptr &amp;m_default_size, int_addr_ptr &amp;slave_sock0$nb_transport_bw$param$t, int &amp;m_req_sample_time, unsigned_int &amp;m_drop_cycle, data_addr_ptr &amp;slave_sock0$nb_transport_bw$param$tran, int_addr_ptr &amp;slave_sock1$nb_transport_bw$param$phase, int_addr_ptr &amp;nb_transport_bw$param$t, unsigned_int &amp;current_data_master, tlm_sync_enum &amp;nb_transport_bw$return, unsigned_int &amp;data_count, int &amp;end_data_ev$notify_t, chan &amp;nb_transport_bw$ctrl, chan &amp;slave_sock1$nb_transport_bw$ctrl, chan &amp;end_data_ev$notify, int_addr_ptr &amp;slave_sock1$nb_transport_bw$param$t, tlm_sync_enum &amp;slave_sock1$nb_transport_bw$return, int_addr_ptr &amp;nb_transport_bw$param$phase, data_addr_ptr &amp;outstanding_data, data_addr_ptr &amp;nb_transport_bw$param$tran, int_addr_ptr &amp;slave_sock0$nb_transport_bw$param$phase</parameter><declaration>data_addr_ptr tran = NULL;
int_addr_ptr phase = NULL;
int_addr_ptr t = NULL;
unsigned_int_addr_ptr size = NULL;
tlm_sync_enum retval;</declaration><location id="id179" x="166" y="16"><name x="190" y="8">init_location</name></location><location id="id180" x="1817" y="110"><urgent /></location><location id="id183" x="3031" y="684"><urgent /></location><location id="id185" x="2912" y="782"><urgent /></location><location id="id184" x="2700" y="846"><urgent /></location><location id="id187" x="2604" y="750"><urgent /></location><location id="id182" x="2986" y="974"><urgent /></location><location id="id190" x="2256" y="1102"><urgent /></location><location id="id191" x="1792" y="1038"><urgent /></location><location id="id193" x="1800" y="1134"><urgent /></location><location id="id192" x="1687" y="1198"><urgent /></location><location id="id195" x="1082" y="1262"><urgent /></location><location id="id197" x="1090" y="652"><urgent /></location><location id="id196" x="840" y="588"><urgent /></location><location id="id199" x="515" y="524"><urgent /></location><location id="id201" x="395" y="1294"><urgent /></location><location id="id204" x="197" y="1439" /><location id="id200" x="317" y="206"><urgent /></location><location id="id202" x="635" y="460"><urgent /></location><location id="id208" x="635" y="315" /><location id="id1043" x="2604" y="910"><urgent /></location><location id="id1046" x="395" y="1375"><urgent /></location><location id="id1052" x="635" y="379"><urgent /></location><location id="id1056" x="0" y="142"><urgent /></location><location id="id1202" x="2246" y="1006"><name x="2270" y="998">mem_access_fail_61</name><urgent /></location><init ref="id179" /><transition><source ref="id180" /><target ref="id183" /><label kind="guard" x="3043" y="372">intMem[phase] == 43  ||
intMem[phase] == BEGIN_RESP  ||
intMem[phase] == 44</label><label kind="comments">Guard:
nodeID: 5840, file: ahb_simple_bus.cpp, line: 134</label><nail x="3035" y="126" /><nail x="3035" y="668" /></transition><transition><source ref="id183" /><target ref="id185" /><label kind="guard" x="3035" y="716">intMem[phase] == 44  ||
dataMem[tran].response_status != TLM_OK_RESPONSE</label><label kind="comments">Guard:
nodeID: 5876, file: ahb_simple_bus.cpp, line: 135</label><nail x="3027" y="700" /><nail x="3027" y="766" /></transition><transition><source ref="id185" /><target ref="id184" /><label kind="assignment" x="2805" y="798">m_drop_cycle = 1</label><label kind="comments">Update:
nodeID: 5911, file: ahb_simple_bus.cpp, line: 136</label><nail x="2797" y="798" /><nail x="2797" y="830" /></transition><transition><source ref="id183" /><target ref="id187" /><label kind="guard" x="2612" y="700">!(intMem[phase] == 44  ||
dataMem[tran].response_status != TLM_OK_RESPONSE)</label><label kind="comments">Guard:
nodeID: 5876, file: ahb_simple_bus.cpp, line: 135</label><nail x="2604" y="700" /><nail x="2604" y="734" /></transition><transition><source ref="id187" /><target ref="id184" /><label kind="assignment" x="2612" y="782">outstanding_data = NULL</label><label kind="comments">Update:
nodeID: 5931, file: ahb_simple_bus.cpp, line: 138</label><nail x="2604" y="766" /><nail x="2604" y="830" /></transition><transition><source ref="id180" /><target ref="id182" /><label kind="guard" x="3477" y="517">!(intMem[phase] == 43  ||
intMem[phase] == BEGIN_RESP  ||
intMem[phase] == 44)</label><label kind="comments">Guard:
nodeID: 5840, file: ahb_simple_bus.cpp, line: 134</label><nail x="3469" y="126" /><nail x="3469" y="958" /></transition><transition><source ref="id182" /><target ref="id190" /><label kind="assignment" x="2511" y="1022">size = NULL</label><label kind="comments">Update:
nodeID: 5961, file: ahb_simple_bus.cpp, line: 143</label><nail x="2503" y="990" /><nail x="2503" y="1086" /></transition><transition><source ref="id190" /><target ref="id191" /><label kind="guard" x="2018" y="1054">addr_is_valid_data(tran)</label><label kind="assignment" x="2018" y="1067">size = dataMem[tran].burst_size</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 5981, file: ahb_simple_bus.cpp, line: 144</label><nail x="2010" y="1086" /><nail x="2010" y="1054" /></transition><transition><source ref="id191" /><target ref="id193" /><label kind="guard" x="1808" y="1070">unsigned_intMem[size] == 0</label><label kind="comments">Guard:
nodeID: 6007, file: ahb_simple_bus.cpp, line: 145</label><nail x="1800" y="1054" /><nail x="1800" y="1118" /></transition><transition><source ref="id193" /><target ref="id192" /><label kind="assignment" x="1808" y="1150">size = m_default_size</label><label kind="comments">Update:
nodeID: 6027, file: ahb_simple_bus.cpp, line: 146</label><nail x="1800" y="1150" /><nail x="1800" y="1182" /></transition><transition><source ref="id191" /><target ref="id192" /><label kind="guard" x="1583" y="1102">!(unsigned_intMem[size] == 0)</label><label kind="comments">Guard:
nodeID: 6007, file: ahb_simple_bus.cpp, line: 145</label><nail x="1575" y="1054" /><nail x="1575" y="1182" /></transition><transition><source ref="id192" /><target ref="id195" /><label kind="assignment" x="1583" y="1214">data_count++</label><label kind="comments">Update:
nodeID: 6047, file: ahb_simple_bus.cpp, line: 149</label><nail x="1575" y="1214" /><nail x="1575" y="1246" /></transition><transition><source ref="id195" /><target ref="id197" /><label kind="guard" x="1098" y="941">data_count == (dataMem[tran].data_length / unsigned_intMem[size])</label><label kind="comments">Guard:
nodeID: 6059, file: ahb_simple_bus.cpp, line: 150</label><nail x="1090" y="1246" /><nail x="1090" y="668" /></transition><transition><source ref="id197" /><target ref="id196" /><label kind="assignment" x="1098" y="604">data_count = 0</label><label kind="comments">Update:
nodeID: 6104, file: ahb_simple_bus.cpp, line: 152</label><nail x="1090" y="636" /><nail x="1090" y="604" /></transition><transition><source ref="id195" /><target ref="id196" /><label kind="guard" x="598" y="909">!(data_count == (dataMem[tran].data_length / unsigned_intMem[size]))</label><label kind="comments">Guard:
nodeID: 6059, file: ahb_simple_bus.cpp, line: 150</label><nail x="590" y="1246" /><nail x="590" y="604" /></transition><transition><source ref="id196" /><target ref="id199" /><label kind="assignment" x="598" y="540">retval = TLM_ACCEPTED</label><label kind="comments">Update:
nodeID: 6124, file: ahb_simple_bus.cpp, line: 155</label><nail x="590" y="572" /><nail x="590" y="540" /></transition><transition><source ref="id199" /><target ref="id201" /><label kind="guard" x="403" y="893">current_data_master == 0</label><label kind="comments">Guard:
nodeID: 6150, file: ahb_simple_bus.cpp, line: 159</label><nail x="395" y="540" /><nail x="395" y="1278" /></transition><transition><source ref="id199" /><target ref="id202" /><label kind="guard" x="643" y="476">current_data_master == 1</label><label kind="comments">Guard:
nodeID: 6208, file: ahb_simple_bus.cpp, line: 164</label><nail x="635" y="508" /><nail x="635" y="476" /></transition><transition><source ref="id199" /><target ref="id200" /><label kind="guard" x="403" y="348">!(current_data_master == 0)  &amp;&amp;
!(current_data_master == 1)</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="395" y="508" /><nail x="395" y="222" /></transition><transition><source ref="id179" /><target ref="id180" /><label kind="synchronisation" x="174" y="32">nb_transport_bw$ctrl?</label><label kind="assignment" x="174" y="45">tran = nb_transport_bw$param$tran,
phase = nb_transport_bw$param$phase,
t = nb_transport_bw$param$t</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="166" y="32" /><nail x="166" y="94" /></transition><transition><source ref="id184" /><target ref="id1043" /><label kind="assignment" x="2612" y="862">end_data_ev$notify_t = m_req_sample_time</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="2604" y="862" /><nail x="2604" y="894" /></transition><transition><source ref="id1043" /><target ref="id182" /><label kind="synchronisation" x="2612" y="926">end_data_ev$notify!</label><label kind="comments" /><nail x="2604" y="926" /><nail x="2604" y="958" /></transition><transition><source ref="id201" /><target ref="id1046" /><label kind="assignment" x="403" y="1310">slave_sock0$nb_transport_bw$param$tran = tran,
slave_sock0$nb_transport_bw$param$phase = phase,
slave_sock0$nb_transport_bw$param$t = t</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="395" y="1310" /><nail x="395" y="1359" /></transition><transition><source ref="id1046" /><target ref="id204" /><label kind="synchronisation" x="403" y="1391">slave_sock0$nb_transport_bw$ctrl!</label><label kind="comments" /><nail x="395" y="1391" /><nail x="395" y="1423" /></transition><transition><source ref="id204" /><target ref="id200" /><label kind="synchronisation" x="8" y="784">slave_sock0$nb_transport_bw$ctrl?</label><label kind="assignment" x="8" y="797">slave_sock0$nb_transport_bw$param$tran = NULL,
slave_sock0$nb_transport_bw$param$phase = NULL,
slave_sock0$nb_transport_bw$param$t = NULL,
retval = slave_sock0$nb_transport_bw$return</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="0" y="1423" /><nail x="0" y="222" /></transition><transition><source ref="id202" /><target ref="id1052" /><label kind="assignment" x="643" y="395">slave_sock1$nb_transport_bw$param$tran = tran,
slave_sock1$nb_transport_bw$param$phase = phase,
slave_sock1$nb_transport_bw$param$t = t</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="635" y="444" /><nail x="635" y="395" /></transition><transition><source ref="id1052" /><target ref="id208" /><label kind="synchronisation" x="643" y="331">slave_sock1$nb_transport_bw$ctrl!</label><label kind="comments" /><nail x="635" y="363" /><nail x="635" y="331" /></transition><transition><source ref="id208" /><target ref="id200" /><label kind="synchronisation" x="643" y="222">slave_sock1$nb_transport_bw$ctrl?</label><label kind="assignment" x="643" y="235">slave_sock1$nb_transport_bw$param$tran = NULL,
slave_sock1$nb_transport_bw$param$phase = NULL,
slave_sock1$nb_transport_bw$param$t = NULL,
retval = slave_sock1$nb_transport_bw$return</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="635" y="299" /><nail x="635" y="222" /></transition><transition><source ref="id200" /><target ref="id1056" /><label kind="assignment" x="8" y="158">nb_transport_bw$return = retval</label><label kind="comments">Update:
nodeID: 6354, file: ahb_simple_bus.cpp, line: 178</label><nail x="0" y="190" /><nail x="0" y="158" /></transition><transition><source ref="id1056" /><target ref="id179" /><label kind="synchronisation" x="8" y="63">nb_transport_bw$ctrl!</label><label kind="comments" /><nail x="0" y="126" /><nail x="0" y="32" /></transition><transition><source ref="id190" /><target ref="id1202" /><label kind="guard" x="2254" y="1038">!(addr_is_valid_data(tran))</label><label kind="assignment" x="2254" y="1051">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="2246" y="1086" /><nail x="2246" y="1022" /></transition></template><template><name>ahb_simple_bus$nb_transport_fw</name><parameter>chan &amp;get_index$ctrl, tlm_sync_enum &amp;master_sock_ahb1$nb_transport_fw$return, unsigned_int_addr_ptr &amp;m_default_size, int &amp;bus_grant_ev$notify_t, int_addr_ptr &amp;nb_transport_fw$param$t, int_addr_ptr &amp;master_sock_ahb0$nb_transport_fw$param$phase, tlm_sync_enum &amp;nb_transport_fw$return, data_addr_ptr &amp;nb_transport_fw$param$tran, unsigned_int &amp;data_count, chan &amp;master_sock_ahb0$nb_transport_fw$ctrl, chan &amp;nb_transport_bw$ctrl, int &amp;m_outstanding_req_type, chan &amp;bus_ungrant_ev$notify, unsigned_int &amp;outstanding_txn_count, chan &amp;master_sock_ahb1$nb_transport_fw$ctrl, int &amp;m_bus_req_sample_time, data_addr_ptr &amp;outstanding_data, unsigned_int &amp;get_index$return, data_addr_ptr &amp;nb_transport_bw$param$tran, int_addr_ptr &amp;master_sock_ahb0$nb_transport_fw$param$t, chan &amp;bus_grant_ev$notify, chan &amp;nb_transport_fw$ctrl, uint64 &amp;get_index$param$address, int_addr_ptr &amp;nb_transport_bw$param$t, int &amp;bus_ungrant_ev$notify_t, unsigned_int &amp;current_data_master, int_addr_ptr &amp;master_sock_ahb1$nb_transport_fw$param$t, int_addr_ptr &amp;nb_transport_fw$param$phase, data_addr_ptr &amp;outstanding_req, unsigned_short &amp;m_BusRequest_Register, unsigned_int &amp;current_req_master, tlm_sync_enum &amp;master_sock_ahb0$nb_transport_fw$return, int_addr_ptr &amp;nb_transport_bw$param$phase, int_addr_ptr &amp;master_sock_ahb1$nb_transport_fw$param$phase, data_addr_ptr &amp;master_sock_ahb1$nb_transport_fw$param$tran, data_addr_ptr &amp;master_sock_ahb0$nb_transport_fw$param$tran</parameter><declaration>data_addr_ptr tran = NULL;
int_addr_ptr phase = NULL;
int_addr_ptr t = NULL;
unsigned_int index;
int addr;
int slave_index;
unsigned_short temp;
tlm_sync_enum retval;
int_addr_ptr type = NULL;
unsigned_int_addr_ptr size = NULL;</declaration><location id="id211" x="12159" y="16"><name x="12183" y="8">init_location</name></location><location id="id212" x="12287" y="110"><urgent /></location><location id="id214" x="11676" y="2164"><urgent /></location><location id="id215" x="10937" y="2068"><urgent /></location><location id="id217" x="10937" y="1940" /><location id="id220" x="11062" y="430"><urgent /></location><location id="id222" x="11354" y="366"><urgent /></location><location id="id221" x="9943" y="302"><urgent /></location><location id="id225" x="10032" y="462"><urgent /></location><location id="id228" x="10324" y="543"><urgent /></location><location id="id230" x="10221" y="654"><urgent /></location><location id="id231" x="321" y="2132"><urgent /></location><location id="id232" x="10616" y="607"><urgent /></location><location id="id233" x="6530" y="1876"><urgent /></location><location id="id235" x="9441" y="720"><urgent /></location><location id="id239" x="3205" y="1138"><urgent /></location><location id="id241" x="3322" y="1074"><urgent /></location><location id="id242" x="3542" y="1010"><urgent /></location><location id="id243" x="3957" y="946"><urgent /></location><location id="id245" x="4167" y="882"><urgent /></location><location id="id246" x="4377" y="1539"><urgent /></location><location id="id247" x="4600" y="1652"><urgent /></location><location id="id249" x="4613" y="1507"><urgent /></location><location id="id248" x="5176" y="1443"><urgent /></location><location id="id244" x="6086" y="1748"><urgent /></location><location id="id253" x="8315" y="430"><urgent /></location><location id="id254" x="8585" y="366"><urgent /></location><location id="id255" x="8810" y="302"><urgent /></location><location id="id256" x="8003" y="850"><urgent /></location><location id="id257" x="7995" y="786"><urgent /></location><location id="id259" x="6583" y="1411"><urgent /></location><location id="id262" x="6080" y="1170" /><location id="id258" x="7729" y="720"><urgent /></location><location id="id260" x="6741" y="1379"><urgent /></location><location id="id266" x="6522" y="1234" /><location id="id270" x="5999" y="1138"><urgent /></location><location id="id271" x="5771" y="1010"><urgent /></location><location id="id273" x="5932" y="1074"><urgent /></location><location id="id269" x="6693" y="654"><urgent /></location><location id="id276" x="5989" y="946"><urgent /></location><location id="id275" x="5889" y="526"><urgent /></location><location id="id279" x="6391" y="590"><urgent /></location><location id="id282" x="5494" y="914"><urgent /></location><location id="id281" x="5684" y="462"><urgent /></location><location id="id284" x="1879" y="1876"><urgent /></location><location id="id286" x="981" y="1812"><urgent /></location><location id="id287" x="1850" y="1748"><urgent /></location><location id="id289" x="981" y="1684"><urgent /></location><location id="id292" x="1409" y="1441" /><location id="id288" x="2720" y="1234"><urgent /></location><location id="id290" x="1493" y="1652"><urgent /></location><location id="id296" x="1886" y="1507" /><location id="id300" x="1311" y="1409"><urgent /></location><location id="id302" x="1162" y="1264" /><location id="id299" x="1642" y="1170"><urgent /></location><location id="id303" x="643" y="1940"><urgent /></location><location id="id999" x="10937" y="2004"><urgent /></location><location id="id1001" x="5261" y="2068"><urgent /></location><location id="id1002" x="161" y="2036"><urgent /></location><location id="id1003" x="5308" y="2196"><urgent /></location><location id="id1004" x="9526" y="206"><urgent /></location><location id="id1005" x="9196" y="238"><urgent /></location><location id="id1008" x="5305" y="1234"><urgent /></location><location id="id1014" x="5753" y="1298"><urgent /></location><location id="id1018" x="5305" y="850"><urgent /></location><location id="id1019" x="5148" y="270"><urgent /></location><location id="id1022" x="981" y="1505"><urgent /></location><location id="id1028" x="1497" y="1571"><urgent /></location><location id="id1034" x="981" y="1328"><urgent /></location><location id="id1038" x="1062" y="850"><urgent /></location><location id="id1039" x="402" y="2004"><urgent /></location><location id="id1195" x="12159" y="174"><name x="12183" y="166">mem_access_fail_54</name><urgent /></location><location id="id1196" x="11163" y="2100"><name x="11187" y="2092">mem_access_fail_55</name><urgent /></location><location id="id1197" x="11522" y="270"><name x="11546" y="262">mem_access_fail_56</name><urgent /></location><location id="id1198" x="3542" y="1812"><name x="3566" y="1804">mem_access_fail_57</name><urgent /></location><location id="id1199" x="4120" y="1603"><name x="4144" y="1595">mem_access_fail_58</name><urgent /></location><location id="id1200" x="5048" y="1684"><name x="5072" y="1676">mem_access_fail_59</name><urgent /></location><location id="id1201" x="8585" y="786"><name x="8609" y="778">mem_access_fail_60</name><urgent /></location><init ref="id211" /><transition><source ref="id212" /><target ref="id214" /><label kind="guard" x="12424" y="1121">addr_is_valid_data(tran)</label><label kind="assignment" x="12424" y="1134">index = dataMem[tran].amba_id</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 6446, file: ahb_simple_bus.cpp, line: 184</label><nail x="12416" y="126" /><nail x="12416" y="2148" /></transition><transition><source ref="id214" /><target ref="id215" /><label kind="guard" x="10945" y="2100">addr_is_valid_data(tran)</label><label kind="assignment" x="10945" y="2113">addr = dataMem[tran].address</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 6474, file: ahb_simple_bus.cpp, line: 185</label><nail x="10937" y="2148" /><nail x="10937" y="2084" /></transition><transition><source ref="id220" /><target ref="id222" /><label kind="guard" x="11195" y="382">intMem[phase] == BEGIN_REQ</label><label kind="comments">Guard:
nodeID: 6596, file: ahb_simple_bus.cpp, line: 190</label><nail x="11187" y="414" /><nail x="11187" y="382" /></transition><transition><source ref="id222" /><target ref="id221" /><label kind="guard" x="11195" y="318">addr_is_valid_data(tran)</label><label kind="assignment" x="11195" y="331">dataMem[tran].amba_id = current_req_master</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 6623, file: ahb_simple_bus.cpp, line: 192</label><nail x="11187" y="350" /><nail x="11187" y="318" /></transition><transition><source ref="id220" /><target ref="id221" /><label kind="guard" x="10945" y="350">!(intMem[phase] == BEGIN_REQ)</label><label kind="comments">Guard:
nodeID: 6596, file: ahb_simple_bus.cpp, line: 190</label><nail x="10937" y="414" /><nail x="10937" y="318" /></transition><transition><source ref="id221" /><target ref="id225" /><label kind="guard" x="10040" y="366">intMem[phase] == 60</label><label kind="comments">Guard:
nodeID: 6641, file: ahb_simple_bus.cpp, line: 195</label><nail x="10032" y="318" /><nail x="10032" y="446" /></transition><transition><source ref="id225" /><target ref="id228" /><label kind="assignment" x="10040" y="478">temp = 0,
temp = 1 &lt;&lt; index,
m_BusRequest_Register = (m_BusRequest_Register | temp)</label><label kind="comments">Update:
nodeID: 6662, file: ahb_simple_bus.cpp, line: 197,
nodeID: 6680, file: ahb_simple_bus.cpp, line: 198,
nodeID: 6680, file: ahb_simple_bus.cpp, line: 198</label><nail x="10032" y="478" /><nail x="10032" y="527" /></transition><transition><source ref="id228" /><target ref="id230" /><label kind="guard" x="10411" y="582">outstanding_txn_count == 0</label><label kind="comments">Guard:
nodeID: 6752, file: ahb_simple_bus.cpp, line: 202</label><nail x="10403" y="559" /><nail x="10403" y="638" /></transition><transition><source ref="id228" /><target ref="id232" /><label kind="guard" x="10624" y="559">!(outstanding_txn_count == 0)</label><label kind="comments">Guard:
nodeID: 6752, file: ahb_simple_bus.cpp, line: 202</label><nail x="10616" y="559" /><nail x="10616" y="591" /></transition><transition><source ref="id221" /><target ref="id233" /><label kind="guard" x="9863" y="1073">!(intMem[phase] == 60)</label><label kind="comments">Guard:
nodeID: 6641, file: ahb_simple_bus.cpp, line: 195</label><nail x="9855" y="318" /><nail x="9855" y="1860" /></transition><transition><source ref="id233" /><target ref="id235" /><label kind="guard" x="9365" y="1282">intMem[phase] == 63</label><label kind="comments">Guard:
nodeID: 6837, file: ahb_simple_bus.cpp, line: 212</label><nail x="9357" y="1860" /><nail x="9357" y="736" /></transition><transition><source ref="id235" /><target ref="id1004" /><label kind="assignment" x="9534" y="431">temp = 0,
temp = 1 &lt;&lt; index,
m_BusRequest_Register -= temp,
nb_transport_fw$return = TLM_ACCEPTED</label><label kind="comments">Update:
nodeID: 6858, file: ahb_simple_bus.cpp, line: 214,
nodeID: 6876, file: ahb_simple_bus.cpp, line: 215,
nodeID: 6876, file: ahb_simple_bus.cpp, line: 215,
nodeID: 6876, file: ahb_simple_bus.cpp, line: 215</label><nail x="9526" y="704" /><nail x="9526" y="222" /></transition><transition><source ref="id233" /><target ref="id239" /><label kind="guard" x="3213" y="1491">!(intMem[phase] == 63)</label><label kind="comments">Guard:
nodeID: 6837, file: ahb_simple_bus.cpp, line: 212</label><nail x="3205" y="1860" /><nail x="3205" y="1154" /></transition><transition><source ref="id239" /><target ref="id241" /><label kind="guard" x="3213" y="1090">intMem[phase] == BEGIN_REQ</label><label kind="comments">Guard:
nodeID: 6953, file: ahb_simple_bus.cpp, line: 225</label><nail x="3205" y="1122" /><nail x="3205" y="1090" /></transition><transition><source ref="id241" /><target ref="id242" /><label kind="assignment" x="3448" y="1026">type = NULL</label><label kind="comments">Update:
nodeID: 6975, file: ahb_simple_bus.cpp, line: 226</label><nail x="3440" y="1058" /><nail x="3440" y="1026" /></transition><transition><source ref="id242" /><target ref="id243" /><label kind="guard" x="3550" y="962">addr_is_valid_data(tran)</label><label kind="assignment" x="3550" y="975">type = dataMem[tran].trans_type</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 6995, file: ahb_simple_bus.cpp, line: 227</label><nail x="3542" y="994" /><nail x="3542" y="962" /></transition><transition><source ref="id243" /><target ref="id245" /><label kind="guard" x="3965" y="898">intMem[type] == 50</label><label kind="comments">Guard:
nodeID: 7021, file: ahb_simple_bus.cpp, line: 228</label><nail x="3957" y="930" /><nail x="3957" y="898" /></transition><transition><source ref="id245" /><target ref="id246" /><label kind="assignment" x="4385" y="1194">size = NULL</label><label kind="comments">Update:
nodeID: 7042, file: ahb_simple_bus.cpp, line: 230</label><nail x="4377" y="898" /><nail x="4377" y="1523" /></transition><transition><source ref="id246" /><target ref="id247" /><label kind="guard" x="4385" y="1579">addr_is_valid_data(tran)</label><label kind="assignment" x="4385" y="1592">size = dataMem[tran].burst_size</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 7062, file: ahb_simple_bus.cpp, line: 231</label><nail x="4377" y="1555" /><nail x="4377" y="1636" /></transition><transition><source ref="id247" /><target ref="id249" /><label kind="guard" x="4621" y="1563">unsigned_intMem[size] == 0</label><label kind="comments">Guard:
nodeID: 7088, file: ahb_simple_bus.cpp, line: 232</label><nail x="4613" y="1636" /><nail x="4613" y="1523" /></transition><transition><source ref="id249" /><target ref="id248" /><label kind="assignment" x="4621" y="1459">size = m_default_size</label><label kind="comments">Update:
nodeID: 7108, file: ahb_simple_bus.cpp, line: 233</label><nail x="4613" y="1491" /><nail x="4613" y="1459" /></transition><transition><source ref="id247" /><target ref="id248" /><label kind="guard" x="4831" y="1531">!(unsigned_intMem[size] == 0)</label><label kind="comments">Guard:
nodeID: 7088, file: ahb_simple_bus.cpp, line: 232</label><nail x="4823" y="1636" /><nail x="4823" y="1459" /></transition><transition><source ref="id248" /><target ref="id244" /><label kind="guard" x="5313" y="1572">addr_is_valid_data(tran)  &amp;&amp;
addr_is_valid_unsigned_int(size)</label><label kind="assignment" x="5313" y="1600">outstanding_txn_count = dataMem[tran].data_length / unsigned_intMem[size]</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 7130, file: ahb_simple_bus.cpp, line: 235</label><nail x="5305" y="1459" /><nail x="5305" y="1732" /></transition><transition><source ref="id243" /><target ref="id244" /><label kind="guard" x="3965" y="1331">!(intMem[type] == 50)</label><label kind="comments">Guard:
nodeID: 7021, file: ahb_simple_bus.cpp, line: 228</label><nail x="3957" y="962" /><nail x="3957" y="1732" /></transition><transition><source ref="id244" /><target ref="id253" /><label kind="guard" x="8224" y="1073">outstanding_data != NULL</label><label kind="comments">Guard:
nodeID: 7168, file: ahb_simple_bus.cpp, line: 238</label><nail x="8216" y="1732" /><nail x="8216" y="446" /></transition><transition><source ref="id253" /><target ref="id254" /><label kind="assignment" x="8422" y="382">outstanding_req = tran</label><label kind="comments">Update:
nodeID: 7189, file: ahb_simple_bus.cpp, line: 241</label><nail x="8414" y="414" /><nail x="8414" y="382" /></transition><transition><source ref="id254" /><target ref="id255" /><label kind="guard" x="8593" y="318">addr_is_valid_int(type)</label><label kind="assignment" x="8593" y="331">m_outstanding_req_type = intMem[type]</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 7211, file: ahb_simple_bus.cpp, line: 242</label><nail x="8585" y="350" /><nail x="8585" y="318" /></transition><transition><source ref="id244" /><target ref="id256" /><label kind="guard" x="8011" y="1283">!(outstanding_data != NULL)</label><label kind="comments">Guard:
nodeID: 7168, file: ahb_simple_bus.cpp, line: 238</label><nail x="8003" y="1732" /><nail x="8003" y="866" /></transition><transition><source ref="id256" /><target ref="id257" /><label kind="assignment" x="8011" y="802">retval = TLM_ACCEPTED</label><label kind="comments">Update:
nodeID: 7257, file: ahb_simple_bus.cpp, line: 246</label><nail x="8003" y="834" /><nail x="8003" y="802" /></transition><transition><source ref="id257" /><target ref="id259" /><label kind="guard" x="7870" y="1082">slave_index == 0</label><label kind="comments">Guard:
nodeID: 7277, file: ahb_simple_bus.cpp, line: 249</label><nail x="7862" y="802" /><nail x="7862" y="1395" /></transition><transition><source ref="id257" /><target ref="id260" /><label kind="guard" x="7737" y="1066">slave_index == 1</label><label kind="comments">Guard:
nodeID: 7335, file: ahb_simple_bus.cpp, line: 254</label><nail x="7729" y="802" /><nail x="7729" y="1363" /></transition><transition><source ref="id257" /><target ref="id258" /><label kind="guard" x="8003" y="736">!(slave_index == 0)  &amp;&amp;
!(slave_index == 1)</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="7995" y="770" /><nail x="7995" y="736" /></transition><transition><source ref="id258" /><target ref="id270" /><label kind="guard" x="6701" y="912">intMem[type] == 50  ||
intMem[type] == 51</label><label kind="comments">Guard:
nodeID: 7494, file: ahb_simple_bus.cpp, line: 272</label><nail x="6693" y="736" /><nail x="6693" y="1122" /></transition><transition><source ref="id270" /><target ref="id271" /><label kind="assignment" x="5313" y="1058">outstanding_data = tran</label><label kind="comments">Update:
nodeID: 7526, file: ahb_simple_bus.cpp, line: 273</label><nail x="5305" y="1122" /><nail x="5305" y="1026" /></transition><transition><source ref="id271" /><target ref="id273" /><label kind="guard" x="5492" y="1026">data_count == 0</label><label kind="comments">Guard:
nodeID: 7548, file: ahb_simple_bus.cpp, line: 274</label><nail x="5484" y="1026" /><nail x="5484" y="1058" /></transition><transition><source ref="id273" /><target ref="id269" /><label kind="assignment" x="6388" y="848">current_data_master = current_req_master</label><label kind="comments">Update:
nodeID: 7569, file: ahb_simple_bus.cpp, line: 276</label><nail x="6380" y="1058" /><nail x="6380" y="670" /></transition><transition><source ref="id271" /><target ref="id269" /><label kind="guard" x="6245" y="816">!(data_count == 0)</label><label kind="comments">Guard:
nodeID: 7548, file: ahb_simple_bus.cpp, line: 274</label><nail x="6237" y="994" /><nail x="6237" y="670" /></transition><transition><source ref="id258" /><target ref="id269" /><label kind="guard" x="7737" y="670">!(intMem[type] == 50  ||
intMem[type] == 51)</label><label kind="comments">Guard:
nodeID: 7494, file: ahb_simple_bus.cpp, line: 272</label><nail x="7729" y="704" /><nail x="7729" y="670" /></transition><transition><source ref="id269" /><target ref="id276" /><label kind="guard" x="6097" y="784">intMem[type] == 52</label><label kind="comments">Guard:
nodeID: 7591, file: ahb_simple_bus.cpp, line: 279</label><nail x="6089" y="670" /><nail x="6089" y="930" /></transition><transition><source ref="id276" /><target ref="id275" /><label kind="assignment" x="5897" y="719">outstanding_txn_count = 0,
data_count = 0</label><label kind="comments">Update:
nodeID: 7611, file: ahb_simple_bus.cpp, line: 280,
nodeID: 7630, file: ahb_simple_bus.cpp, line: 281</label><nail x="5889" y="930" /><nail x="5889" y="542" /></transition><transition><source ref="id269" /><target ref="id279" /><label kind="guard" x="6701" y="606">!(intMem[type] == 52)</label><label kind="comments">Guard:
nodeID: 7591, file: ahb_simple_bus.cpp, line: 279</label><nail x="6693" y="638" /><nail x="6693" y="606" /></transition><transition><source ref="id279" /><target ref="id275" /><label kind="assignment" x="6097" y="542">outstanding_txn_count--</label><label kind="comments">Update:
nodeID: 7649, file: ahb_simple_bus.cpp, line: 284</label><nail x="6089" y="574" /><nail x="6089" y="542" /></transition><transition><source ref="id275" /><target ref="id282" /><label kind="guard" x="5692" y="704">outstanding_txn_count == 0</label><label kind="comments">Guard:
nodeID: 7661, file: ahb_simple_bus.cpp, line: 286</label><nail x="5684" y="542" /><nail x="5684" y="898" /></transition><transition><source ref="id275" /><target ref="id281" /><label kind="guard" x="5897" y="478">!(outstanding_txn_count == 0)</label><label kind="comments">Guard:
nodeID: 7661, file: ahb_simple_bus.cpp, line: 286</label><nail x="5889" y="510" /><nail x="5889" y="478" /></transition><transition><source ref="id239" /><target ref="id284" /><label kind="guard" x="2963" y="1491">!(intMem[phase] == BEGIN_REQ)</label><label kind="comments">Guard:
nodeID: 6953, file: ahb_simple_bus.cpp, line: 225</label><nail x="2955" y="1154" /><nail x="2955" y="1860" /></transition><transition><source ref="id284" /><target ref="id286" /><label kind="guard" x="989" y="1828">intMem[phase] == 42</label><label kind="comments">Guard:
nodeID: 7713, file: ahb_simple_bus.cpp, line: 294</label><nail x="981" y="1860" /><nail x="981" y="1828" /></transition><transition><source ref="id286" /><target ref="id287" /><label kind="assignment" x="989" y="1764">retval = TLM_ACCEPTED</label><label kind="comments">Update:
nodeID: 7736, file: ahb_simple_bus.cpp, line: 299</label><nail x="981" y="1796" /><nail x="981" y="1764" /></transition><transition><source ref="id287" /><target ref="id289" /><label kind="guard" x="989" y="1700">slave_index == 0</label><label kind="comments">Guard:
nodeID: 7756, file: ahb_simple_bus.cpp, line: 302</label><nail x="981" y="1732" /><nail x="981" y="1700" /></transition><transition><source ref="id287" /><target ref="id290" /><label kind="guard" x="1497" y="1684">slave_index == 1</label><label kind="comments">Guard:
nodeID: 7818, file: ahb_simple_bus.cpp, line: 307</label><nail x="1489" y="1732" /><nail x="1489" y="1668" /></transition><transition><source ref="id287" /><target ref="id288" /><label kind="guard" x="2728" y="1474">!(slave_index == 0)  &amp;&amp;
!(slave_index == 1)</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="2720" y="1732" /><nail x="2720" y="1250" /></transition><transition><source ref="id288" /><target ref="id300" /><label kind="guard" x="1650" y="1305">retval == TLM_UPDATED</label><label kind="comments">Guard:
nodeID: 7976, file: ahb_simple_bus.cpp, line: 326</label><nail x="1642" y="1250" /><nail x="1642" y="1393" /></transition><transition><source ref="id288" /><target ref="id299" /><label kind="guard" x="2728" y="1186">!(retval == TLM_UPDATED)</label><label kind="comments">Guard:
nodeID: 7976, file: ahb_simple_bus.cpp, line: 326</label><nail x="2720" y="1218" /><nail x="2720" y="1186" /></transition><transition><source ref="id284" /><target ref="id303" /><label kind="guard" x="812" y="1892">!(intMem[phase] == 42)</label><label kind="comments">Guard:
nodeID: 7713, file: ahb_simple_bus.cpp, line: 294</label><nail x="804" y="1892" /><nail x="804" y="1924" /></transition><transition><source ref="id211" /><target ref="id212" /><label kind="synchronisation" x="12167" y="32">nb_transport_fw$ctrl?</label><label kind="assignment" x="12167" y="45">tran = nb_transport_fw$param$tran,
phase = nb_transport_fw$param$phase,
t = nb_transport_fw$param$t</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="12159" y="32" /><nail x="12159" y="94" /></transition><transition><source ref="id215" /><target ref="id999" /><label kind="assignment" x="10945" y="2020">get_index$param$address = addr</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="10937" y="2052" /><nail x="10937" y="2020" /></transition><transition><source ref="id999" /><target ref="id217" /><label kind="synchronisation" x="10945" y="1956">get_index$ctrl!</label><label kind="comments" /><nail x="10937" y="1988" /><nail x="10937" y="1956" /></transition><transition><source ref="id217" /><target ref="id220" /><label kind="synchronisation" x="10945" y="1146">get_index$ctrl?</label><label kind="assignment" x="10945" y="1159">get_index$param$address = DEFAULT_UINT64_VALUE,
slave_index = get_index$return,
temp = 0,
retval = TLM_ACCEPTED</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: 6502, file: ahb_simple_bus.cpp, line: 186,
nodeID: 6502, file: ahb_simple_bus.cpp, line: 186,
nodeID: 6502, file: ahb_simple_bus.cpp, line: 186</label><nail x="10937" y="1924" /><nail x="10937" y="446" /></transition><transition><source ref="id230" /><target ref="id1001" /><label kind="assignment" x="10048" y="1345">bus_grant_ev$notify_t = m_bus_req_sample_time</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="10040" y="670" /><nail x="10040" y="2052" /></transition><transition><source ref="id1001" /><target ref="id231" /><label kind="synchronisation" x="490" y="2084">bus_grant_ev$notify!</label><label kind="comments" /><nail x="482" y="2084" /><nail x="482" y="2116" /></transition><transition><source ref="id231" /><target ref="id1002" /><label kind="assignment" x="169" y="2068">nb_transport_fw$return = TLM_ACCEPTED</label><label kind="comments">Update:
nodeID: 6793, file: ahb_simple_bus.cpp, line: 207</label><nail x="161" y="2116" /><nail x="161" y="2052" /></transition><transition><source ref="id1002" /><target ref="id211" /><label kind="synchronisation" x="169" y="1010">nb_transport_fw$ctrl!</label><label kind="comments" /><nail x="161" y="2020" /><nail x="161" y="32" /></transition><transition><source ref="id232" /><target ref="id1003" /><label kind="assignment" x="10624" y="1385">nb_transport_fw$return = TLM_ACCEPTED</label><label kind="comments">Update:
nodeID: 6815, file: ahb_simple_bus.cpp, line: 210</label><nail x="10616" y="623" /><nail x="10616" y="2180" /></transition><transition><source ref="id1003" /><target ref="id211" /><label kind="synchronisation" x="8" y="1090">nb_transport_fw$ctrl!</label><label kind="comments" /><nail x="0" y="2180" /><nail x="0" y="32" /></transition><transition><source ref="id1004" /><target ref="id211" /><label kind="synchronisation" x="9534" y="95">nb_transport_fw$ctrl!</label><label kind="comments" /><nail x="9526" y="190" /><nail x="9526" y="32" /></transition><transition><source ref="id255" /><target ref="id1005" /><label kind="assignment" x="9044" y="254">nb_transport_fw$return = TLM_ACCEPTED</label><label kind="comments">Update:
nodeID: 7234, file: ahb_simple_bus.cpp, line: 244</label><nail x="9036" y="286" /><nail x="9036" y="254" /></transition><transition><source ref="id1005" /><target ref="id211" /><label kind="synchronisation" x="9365" y="111">nb_transport_fw$ctrl!</label><label kind="comments" /><nail x="9357" y="222" /><nail x="9357" y="32" /></transition><transition><source ref="id259" /><target ref="id1008" /><label kind="assignment" x="5313" y="1298">master_sock_ahb0$nb_transport_fw$param$tran = tran,
master_sock_ahb0$nb_transport_fw$param$phase = phase,
master_sock_ahb0$nb_transport_fw$param$t = t</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="5305" y="1395" /><nail x="5305" y="1250" /></transition><transition><source ref="id1008" /><target ref="id262" /><label kind="synchronisation" x="5313" y="1186">master_sock_ahb0$nb_transport_fw$ctrl!</label><label kind="comments" /><nail x="5305" y="1218" /><nail x="5305" y="1186" /></transition><transition><source ref="id262" /><target ref="id258" /><label kind="synchronisation" x="6863" y="906">master_sock_ahb0$nb_transport_fw$ctrl?</label><label kind="assignment" x="6863" y="919">master_sock_ahb0$nb_transport_fw$param$tran = NULL,
master_sock_ahb0$nb_transport_fw$param$phase = NULL,
master_sock_ahb0$nb_transport_fw$param$t = NULL,
retval = master_sock_ahb0$nb_transport_fw$return</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="6855" y="1154" /><nail x="6855" y="736" /></transition><transition><source ref="id260" /><target ref="id1014" /><label kind="assignment" x="5761" y="1314">master_sock_ahb1$nb_transport_fw$param$tran = tran,
master_sock_ahb1$nb_transport_fw$param$phase = phase,
master_sock_ahb1$nb_transport_fw$param$t = t</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="5753" y="1363" /><nail x="5753" y="1314" /></transition><transition><source ref="id1014" /><target ref="id266" /><label kind="synchronisation" x="5761" y="1250">master_sock_ahb1$nb_transport_fw$ctrl!</label><label kind="comments" /><nail x="5753" y="1282" /><nail x="5753" y="1250" /></transition><transition><source ref="id266" /><target ref="id258" /><label kind="synchronisation" x="7300" y="938">master_sock_ahb1$nb_transport_fw$ctrl?</label><label kind="assignment" x="7300" y="951">master_sock_ahb1$nb_transport_fw$param$tran = NULL,
master_sock_ahb1$nb_transport_fw$param$phase = NULL,
master_sock_ahb1$nb_transport_fw$param$t = NULL,
retval = master_sock_ahb1$nb_transport_fw$return</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="7292" y="1218" /><nail x="7292" y="736" /></transition><transition><source ref="id282" /><target ref="id1018" /><label kind="assignment" x="5313" y="866">bus_ungrant_ev$notify_t = m_bus_req_sample_time</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="5305" y="898" /><nail x="5305" y="866" /></transition><transition><source ref="id1018" /><target ref="id281" /><label kind="synchronisation" x="5313" y="640">bus_ungrant_ev$notify!</label><label kind="comments" /><nail x="5305" y="834" /><nail x="5305" y="478" /></transition><transition><source ref="id281" /><target ref="id1019" /><label kind="assignment" x="5692" y="350">nb_transport_fw$return = retval</label><label kind="comments">Update:
nodeID: 7693, file: ahb_simple_bus.cpp, line: 291</label><nail x="5684" y="446" /><nail x="5684" y="286" /></transition><transition><source ref="id1019" /><target ref="id211" /><label kind="synchronisation" x="4621" y="127">nb_transport_fw$ctrl!</label><label kind="comments" /><nail x="4613" y="254" /><nail x="4613" y="32" /></transition><transition><source ref="id289" /><target ref="id1022" /><label kind="assignment" x="989" y="1570">master_sock_ahb0$nb_transport_fw$param$tran = outstanding_data,
master_sock_ahb0$nb_transport_fw$param$phase = phase,
master_sock_ahb0$nb_transport_fw$param$t = t</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="981" y="1668" /><nail x="981" y="1521" /></transition><transition><source ref="id1022" /><target ref="id292" /><label kind="synchronisation" x="989" y="1457">master_sock_ahb0$nb_transport_fw$ctrl!</label><label kind="comments" /><nail x="981" y="1489" /><nail x="981" y="1457" /></transition><transition><source ref="id292" /><target ref="id288" /><label kind="synchronisation" x="1846" y="1299">master_sock_ahb0$nb_transport_fw$ctrl?</label><label kind="assignment" x="1846" y="1312">master_sock_ahb0$nb_transport_fw$param$tran = NULL,
master_sock_ahb0$nb_transport_fw$param$phase = NULL,
master_sock_ahb0$nb_transport_fw$param$t = NULL,
retval = master_sock_ahb0$nb_transport_fw$return</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="1838" y="1425" /><nail x="1838" y="1250" /></transition><transition><source ref="id290" /><target ref="id1028" /><label kind="assignment" x="1505" y="1587">master_sock_ahb1$nb_transport_fw$param$tran = outstanding_data,
master_sock_ahb1$nb_transport_fw$param$phase = phase,
master_sock_ahb1$nb_transport_fw$param$t = t</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="1497" y="1636" /><nail x="1497" y="1587" /></transition><transition><source ref="id1028" /><target ref="id296" /><label kind="synchronisation" x="1505" y="1523">master_sock_ahb1$nb_transport_fw$ctrl!</label><label kind="comments" /><nail x="1497" y="1555" /><nail x="1497" y="1523" /></transition><transition><source ref="id296" /><target ref="id288" /><label kind="synchronisation" x="2283" y="1332">master_sock_ahb1$nb_transport_fw$ctrl?</label><label kind="assignment" x="2283" y="1345">master_sock_ahb1$nb_transport_fw$param$tran = NULL,
master_sock_ahb1$nb_transport_fw$param$phase = NULL,
master_sock_ahb1$nb_transport_fw$param$t = NULL,
retval = master_sock_ahb1$nb_transport_fw$return</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="2275" y="1491" /><nail x="2275" y="1250" /></transition><transition><source ref="id300" /><target ref="id1034" /><label kind="assignment" x="989" y="1344">nb_transport_bw$param$tran = outstanding_data,
nb_transport_bw$param$phase = phase,
nb_transport_bw$param$t = t</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="981" y="1393" /><nail x="981" y="1344" /></transition><transition><source ref="id1034" /><target ref="id302" /><label kind="synchronisation" x="989" y="1280">nb_transport_bw$ctrl!</label><label kind="comments" /><nail x="981" y="1312" /><nail x="981" y="1280" /></transition><transition><source ref="id302" /><target ref="id299" /><label kind="synchronisation" x="1351" y="1186">nb_transport_bw$ctrl?</label><label kind="assignment" x="1351" y="1199">nb_transport_bw$param$tran = NULL,
nb_transport_bw$param$phase = NULL,
nb_transport_bw$param$t = NULL</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="1343" y="1248" /><nail x="1343" y="1186" /></transition><transition><source ref="id299" /><target ref="id1038" /><label kind="assignment" x="1650" y="994">nb_transport_fw$return = TLM_ACCEPTED</label><label kind="comments">Update:
nodeID: 8032, file: ahb_simple_bus.cpp, line: 330</label><nail x="1642" y="1154" /><nail x="1642" y="866" /></transition><transition><source ref="id1038" /><target ref="id211" /><label kind="synchronisation" x="491" y="417">nb_transport_fw$ctrl!</label><label kind="comments" /><nail x="483" y="834" /><nail x="483" y="32" /></transition><transition><source ref="id303" /><target ref="id1039" /><label kind="assignment" x="491" y="1956">nb_transport_fw$return = TLM_ACCEPTED</label><label kind="comments">Update:
nodeID: 8055, file: ahb_simple_bus.cpp, line: 334</label><nail x="483" y="1956" /><nail x="483" y="1988" /></transition><transition><source ref="id1039" /><target ref="id211" /><label kind="synchronisation" x="330" y="994">nb_transport_fw$ctrl!</label><label kind="comments" /><nail x="322" y="1988" /><nail x="322" y="32" /></transition><transition><source ref="id212" /><target ref="id1195" /><label kind="guard" x="12167" y="126">!(addr_is_valid_data(tran))</label><label kind="assignment" x="12167" y="139">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="12159" y="126" /><nail x="12159" y="158" /></transition><transition><source ref="id214" /><target ref="id1196" /><label kind="guard" x="11171" y="2116">!(addr_is_valid_data(tran))</label><label kind="assignment" x="11171" y="2129">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="11163" y="2148" /><nail x="11163" y="2116" /></transition><transition><source ref="id222" /><target ref="id1197" /><label kind="guard" x="11530" y="302">!(addr_is_valid_data(tran))</label><label kind="assignment" x="11530" y="315">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="11522" y="350" /><nail x="11522" y="286" /></transition><transition><source ref="id242" /><target ref="id1198" /><label kind="guard" x="3550" y="1395">!(addr_is_valid_data(tran))</label><label kind="assignment" x="3550" y="1408">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="3542" y="1026" /><nail x="3542" y="1796" /></transition><transition><source ref="id246" /><target ref="id1199" /><label kind="guard" x="4128" y="1555">!(addr_is_valid_data(tran))</label><label kind="assignment" x="4128" y="1568">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="4120" y="1555" /><nail x="4120" y="1587" /></transition><transition><source ref="id248" /><target ref="id1200" /><label kind="guard" x="5056" y="1540">!(addr_is_valid_data(tran)  &amp;&amp;
addr_is_valid_unsigned_int(size))</label><label kind="assignment" x="5056" y="1568">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="5048" y="1459" /><nail x="5048" y="1668" /></transition><transition><source ref="id254" /><target ref="id1201" /><label kind="guard" x="8593" y="560">!(addr_is_valid_int(type))</label><label kind="assignment" x="8593" y="573">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="8585" y="382" /><nail x="8585" y="770" /></transition></template><template><name>ahb_simple_bus$pendingReqProcess</name><parameter>chan &amp;get_index$ctrl, tlm_sync_enum &amp;master_sock_ahb1$nb_transport_fw$return, chan &amp;slave_sock0$nb_transport_bw$ctrl, int_addr_ptr &amp;slave_sock1$nb_transport_bw$param$phase, int_addr_ptr &amp;master_sock_ahb0$nb_transport_fw$param$phase, unsigned_int &amp;data_count, chan &amp;master_sock_ahb0$nb_transport_fw$ctrl, int &amp;m_outstanding_req_type, chan &amp;bus_ungrant_ev$notify, unsigned_int &amp;outstanding_txn_count, chan &amp;pendingReqProcess$ctrl, int_addr_ptr &amp;slave_sock1$nb_transport_bw$param$t, chan &amp;master_sock_ahb1$nb_transport_fw$ctrl, int &amp;m_bus_req_sample_time, data_addr_ptr &amp;outstanding_data, unsigned_int &amp;get_index$return, data_addr_ptr &amp;slave_sock1$nb_transport_bw$param$tran, int_addr_ptr &amp;master_sock_ahb0$nb_transport_fw$param$t, tlm_sync_enum &amp;slave_sock0$nb_transport_bw$return, int_addr_ptr &amp;slave_sock0$nb_transport_bw$param$t, uint64 &amp;get_index$param$address, unsigned_int &amp;m_drop_cycle, data_addr_ptr &amp;slave_sock0$nb_transport_bw$param$tran, int &amp;bus_ungrant_ev$notify_t, unsigned_int &amp;current_data_master, int_addr_ptr &amp;master_sock_ahb1$nb_transport_fw$param$t, chan &amp;slave_sock1$nb_transport_bw$ctrl, data_addr_ptr &amp;outstanding_req, unsigned_int &amp;current_req_master, tlm_sync_enum &amp;master_sock_ahb0$nb_transport_fw$return, tlm_sync_enum &amp;slave_sock1$nb_transport_bw$return, int_addr_ptr &amp;master_sock_ahb1$nb_transport_fw$param$phase, data_addr_ptr &amp;master_sock_ahb1$nb_transport_fw$param$tran, data_addr_ptr &amp;master_sock_ahb0$nb_transport_fw$param$tran, int_addr_ptr &amp;slave_sock0$nb_transport_bw$param$phase</parameter><declaration>int_addr_ptr type_ext = NULL;
unsigned_int addr;
unsigned_int index;
int_addr_ptr ph = NULL;
tlm_sync_enum retval;
int_addr_ptr delay = NULL;</declaration><location id="id304" x="579" y="16"><name x="603" y="8">init_location</name></location><location id="id305" x="3792" y="80"><urgent /></location><location id="id308" x="3599" y="2096"><urgent /></location><location id="id309" x="96" y="2160"><urgent /></location><location id="id310" x="3605" y="1936"><urgent /></location><location id="id312" x="386" y="2000"><urgent /></location><location id="id313" x="289" y="2064"><urgent /></location><location id="id314" x="6393" y="306"><urgent /></location><location id="id316" x="6549" y="242"><urgent /></location><location id="id307" x="3663" y="176"><urgent /></location><location id="id320" x="703" y="338"><urgent /></location><location id="id321" x="925" y="402"><urgent /></location><location id="id322" x="1355" y="466"><urgent /></location><location id="id323" x="3840" y="530"><urgent /></location><location id="id325" x="3936" y="594"><urgent /></location><location id="id324" x="1785" y="660"><urgent /></location><location id="id328" x="2008" y="724"><urgent /></location><location id="id330" x="2008" y="852" /><location id="id331" x="2230" y="931"><urgent /></location><location id="id332" x="2453" y="995"><urgent /></location><location id="id335" x="4237" y="1076"><urgent /></location><location id="id337" x="4562" y="1140"><urgent /></location><location id="id340" x="3094" y="1494" /><location id="id336" x="2992" y="1776"><urgent /></location><location id="id338" x="2586" y="1172"><urgent /></location><location id="id344" x="2586" y="1667" /><location id="id347" x="3703" y="1253"><urgent /></location><location id="id349" x="5598" y="1317"><urgent /></location><location id="id352" x="4573" y="1462" /><location id="id348" x="4421" y="1667"><urgent /></location><location id="id350" x="4107" y="1349"><urgent /></location><location id="id356" x="4107" y="1558" /><location id="id359" x="5254" y="1494"><urgent /></location><location id="id361" x="4511" y="1699"><urgent /></location><location id="id360" x="2873" y="1904"><urgent /></location><location id="id306" x="544" y="112"><urgent /></location><location id="id956" x="2008" y="788"><urgent /></location><location id="id960" x="3098" y="1221"><urgent /></location><location id="id966" x="2586" y="1558"><urgent /></location><location id="id972" x="4971" y="1398"><urgent /></location><location id="id978" x="4107" y="1494"><urgent /></location><location id="id982" x="3875" y="1776"><urgent /></location><location id="id1188" x="703" y="1872"><name x="727" y="1864">mem_access_fail_47</name><urgent /></location><location id="id1189" x="1148" y="1840"><name x="1172" y="1832">mem_access_fail_48</name><urgent /></location><location id="id1190" x="1563" y="1840"><name x="1587" y="1832">mem_access_fail_49</name><urgent /></location><location id="id1191" x="2008" y="1840"><name x="2032" y="1832">mem_access_fail_50</name><urgent /></location><location id="id1192" x="2453" y="1840"><name x="2477" y="1832">mem_access_fail_51</name><urgent /></location><init ref="id304" /><transition><source ref="id304" /><target ref="id305" /><label kind="synchronisation" x="587" y="32">pendingReqProcess$ctrl?</label><label kind="comments" /><nail x="579" y="32" /><nail x="579" y="64" /></transition><transition><source ref="id305" /><target ref="id308" /><label kind="guard" x="7013" y="1072">m_drop_cycle == 1</label><label kind="comments">Guard:
nodeID: 8099, file: ahb_simple_bus.cpp, line: 341</label><nail x="7005" y="96" /><nail x="7005" y="2080" /></transition><transition><source ref="id308" /><target ref="id309" /><label kind="assignment" x="201" y="2112">m_drop_cycle = 2</label><label kind="comments">Update:
nodeID: 8120, file: ahb_simple_bus.cpp, line: 343</label><nail x="193" y="2112" /><nail x="193" y="2144" /></transition><transition><source ref="id309" /><target ref="id304" /><label kind="synchronisation" x="8" y="1072">pendingReqProcess$ctrl!</label><label kind="comments" /><nail x="0" y="2144" /><nail x="0" y="32" /></transition><transition><source ref="id305" /><target ref="id310" /><label kind="guard" x="6833" y="992">!(m_drop_cycle == 1)</label><label kind="comments">Guard:
nodeID: 8099, file: ahb_simple_bus.cpp, line: 341</label><nail x="6825" y="96" /><nail x="6825" y="1920" /></transition><transition><source ref="id310" /><target ref="id312" /><label kind="guard" x="394" y="1952">m_drop_cycle == 2</label><label kind="comments">Guard:
nodeID: 8146, file: ahb_simple_bus.cpp, line: 347</label><nail x="386" y="1952" /><nail x="386" y="1984" /></transition><transition><source ref="id312" /><target ref="id313" /><label kind="assignment" x="394" y="2016">m_drop_cycle = 3</label><label kind="comments">Update:
nodeID: 8167, file: ahb_simple_bus.cpp, line: 349</label><nail x="386" y="2016" /><nail x="386" y="2048" /></transition><transition><source ref="id313" /><target ref="id304" /><label kind="synchronisation" x="201" y="1024">pendingReqProcess$ctrl!</label><label kind="comments" /><nail x="193" y="2048" /><nail x="193" y="32" /></transition><transition><source ref="id310" /><target ref="id314" /><label kind="guard" x="6319" y="1105">!(m_drop_cycle == 2)</label><label kind="comments">Guard:
nodeID: 8146, file: ahb_simple_bus.cpp, line: 347</label><nail x="6311" y="1920" /><nail x="6311" y="322" /></transition><transition><source ref="id314" /><target ref="id316" /><label kind="guard" x="6483" y="258">m_drop_cycle == 3</label><label kind="comments">Guard:
nodeID: 8193, file: ahb_simple_bus.cpp, line: 353</label><nail x="6475" y="290" /><nail x="6475" y="258" /></transition><transition><source ref="id316" /><target ref="id307" /><label kind="assignment" x="6632" y="192">m_drop_cycle = 0,
outstanding_data = NULL</label><label kind="comments">Update:
nodeID: 8213, file: ahb_simple_bus.cpp, line: 354,
nodeID: 8231, file: ahb_simple_bus.cpp, line: 355</label><nail x="6624" y="226" /><nail x="6624" y="192" /></transition><transition><source ref="id314" /><target ref="id307" /><label kind="guard" x="6319" y="225">!(m_drop_cycle == 3)</label><label kind="comments">Guard:
nodeID: 8193, file: ahb_simple_bus.cpp, line: 353</label><nail x="6311" y="290" /><nail x="6311" y="192" /></transition><transition><source ref="id307" /><target ref="id320" /><label kind="guard" x="711" y="241">outstanding_req != NULL</label><label kind="comments">Guard:
nodeID: 8249, file: ahb_simple_bus.cpp, line: 358</label><nail x="703" y="192" /><nail x="703" y="322" /></transition><transition><source ref="id320" /><target ref="id321" /><label kind="assignment" x="711" y="354">type_ext = NULL</label><label kind="comments">Update:
nodeID: 8333, file: ahb_simple_bus.cpp, line: 361</label><nail x="703" y="354" /><nail x="703" y="386" /></transition><transition><source ref="id321" /><target ref="id322" /><label kind="guard" x="1156" y="418">addr_is_valid_data(outstanding_req)</label><label kind="assignment" x="1156" y="431">type_ext = dataMem[outstanding_req].trans_type</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 8353, file: ahb_simple_bus.cpp, line: 362</label><nail x="1148" y="418" /><nail x="1148" y="450" /></transition><transition><source ref="id322" /><target ref="id323" /><label kind="guard" x="1571" y="482">addr_is_valid_int(type_ext)</label><label kind="assignment" x="1571" y="495">intMem[type_ext] = m_outstanding_req_type</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 8379, file: ahb_simple_bus.cpp, line: 363</label><nail x="1563" y="482" /><nail x="1563" y="514" /></transition><transition><source ref="id323" /><target ref="id325" /><label kind="guard" x="6126" y="546">intMem[type_ext] == 52</label><label kind="comments">Guard:
nodeID: 8402, file: ahb_simple_bus.cpp, line: 365</label><nail x="6118" y="546" /><nail x="6118" y="578" /></transition><transition><source ref="id325" /><target ref="id324" /><label kind="assignment" x="1763" y="610">outstanding_txn_count = 1,
data_count = 0</label><label kind="comments">Update:
nodeID: 8422, file: ahb_simple_bus.cpp, line: 367,
nodeID: 8440, file: ahb_simple_bus.cpp, line: 368</label><nail x="1755" y="610" /><nail x="1755" y="644" /></transition><transition><source ref="id323" /><target ref="id324" /><label kind="guard" x="1571" y="579">!(intMem[type_ext] == 52)</label><label kind="comments">Guard:
nodeID: 8402, file: ahb_simple_bus.cpp, line: 365</label><nail x="1563" y="546" /><nail x="1563" y="644" /></transition><transition><source ref="id324" /><target ref="id328" /><label kind="guard" x="2016" y="676">addr_is_valid_data(outstanding_req)</label><label kind="assignment" x="2016" y="689">addr = dataMem[outstanding_req].address</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 8459, file: ahb_simple_bus.cpp, line: 371</label><nail x="2008" y="676" /><nail x="2008" y="708" /></transition><transition><source ref="id331" /><target ref="id332" /><label kind="guard" x="2461" y="947">addr_is_valid_data(outstanding_req)</label><label kind="assignment" x="2461" y="960">dataMem[outstanding_req].amba_id = current_req_master</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 8525, file: ahb_simple_bus.cpp, line: 373</label><nail x="2453" y="947" /><nail x="2453" y="979" /></transition><transition><source ref="id332" /><target ref="id335" /><label kind="assignment" x="2461" y="1011">ph = allocate_static_and_init_int(BEGIN_REQ),
delay = allocate_static_and_init_int(1),
retval = TLM_ACCEPTED</label><label kind="comments">Update:
nodeID: 8543, file: ahb_simple_bus.cpp, line: 375,
nodeID: 8571, file: ahb_simple_bus.cpp, line: 376,
nodeID: 8571, file: ahb_simple_bus.cpp, line: 376</label><nail x="2453" y="1011" /><nail x="2453" y="1060" /></transition><transition><source ref="id335" /><target ref="id337" /><label kind="guard" x="6030" y="1092">index == 0</label><label kind="comments">Guard:
nodeID: 8639, file: ahb_simple_bus.cpp, line: 380</label><nail x="6022" y="1092" /><nail x="6022" y="1124" /></transition><transition><source ref="id335" /><target ref="id338" /><label kind="guard" x="2594" y="1108">index == 1</label><label kind="comments">Guard:
nodeID: 8701, file: ahb_simple_bus.cpp, line: 385</label><nail x="2586" y="1092" /><nail x="2586" y="1156" /></transition><transition><source ref="id335" /><target ref="id336" /><label kind="guard" x="2461" y="1409">!(index == 0)  &amp;&amp;
!(index == 1)</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="2453" y="1092" /><nail x="2453" y="1760" /></transition><transition><source ref="id336" /><target ref="id347" /><label kind="guard" x="3539" y="1498">addr_is_valid_int(ph)</label><label kind="assignment" x="3539" y="1511">intMem[ph] = END_REQ</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 8853, file: ahb_simple_bus.cpp, line: 405</label><nail x="3531" y="1760" /><nail x="3531" y="1269" /></transition><transition><source ref="id347" /><target ref="id349" /><label kind="guard" x="5835" y="1269">current_req_master == 0</label><label kind="comments">Guard:
nodeID: 8937, file: ahb_simple_bus.cpp, line: 409</label><nail x="5827" y="1269" /><nail x="5827" y="1301" /></transition><transition><source ref="id347" /><target ref="id350" /><label kind="guard" x="4115" y="1285">current_req_master == 1</label><label kind="comments">Guard:
nodeID: 8999, file: ahb_simple_bus.cpp, line: 414</label><nail x="4107" y="1269" /><nail x="4107" y="1333" /></transition><transition><source ref="id347" /><target ref="id348" /><label kind="guard" x="3883" y="1443">!(current_req_master == 0)  &amp;&amp;
!(current_req_master == 1)</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="3875" y="1269" /><nail x="3875" y="1651" /></transition><transition><source ref="id348" /><target ref="id359" /><label kind="assignment" x="4976" y="1564">outstanding_txn_count--</label><label kind="comments">Update:
nodeID: 9148, file: ahb_simple_bus.cpp, line: 428</label><nail x="4968" y="1651" /><nail x="4968" y="1510" /></transition><transition><source ref="id359" /><target ref="id361" /><label kind="guard" x="5156" y="1580">outstanding_txn_count == 0</label><label kind="comments">Guard:
nodeID: 9160, file: ahb_simple_bus.cpp, line: 429</label><nail x="5148" y="1510" /><nail x="5148" y="1683" /></transition><transition><source ref="id359" /><target ref="id360" /><label kind="guard" x="5369" y="1683">!(outstanding_txn_count == 0)</label><label kind="comments">Guard:
nodeID: 9160, file: ahb_simple_bus.cpp, line: 429</label><nail x="5361" y="1510" /><nail x="5361" y="1888" /></transition><transition><source ref="id360" /><target ref="id306" /><label kind="assignment" x="394" y="968">outstanding_data = outstanding_req,
current_data_master = current_req_master,
outstanding_req = NULL,
empty_stack_int(delay),
empty_stack_int(ph)</label><label kind="comments">Update:
nodeID: 9192, file: ahb_simple_bus.cpp, line: 433,
nodeID: 9210, file: ahb_simple_bus.cpp, line: 434,
nodeID: 9210, file: ahb_simple_bus.cpp, line: 434,
nodeID: 9210, file: ahb_simple_bus.cpp, line: 434,
nodeID: 9210, file: ahb_simple_bus.cpp, line: 434</label><nail x="386" y="1888" /><nail x="386" y="128" /></transition><transition><source ref="id307" /><target ref="id306" /><label kind="guard" x="711" y="128">!(outstanding_req != NULL)</label><label kind="comments">Guard:
nodeID: 8249, file: ahb_simple_bus.cpp, line: 358</label><nail x="703" y="160" /><nail x="703" y="128" /></transition><transition><source ref="id306" /><target ref="id304" /><label kind="synchronisation" x="394" y="48">pendingReqProcess$ctrl!</label><label kind="comments" /><nail x="386" y="96" /><nail x="386" y="32" /></transition><transition><source ref="id328" /><target ref="id956" /><label kind="assignment" x="2016" y="740">get_index$param$address = addr</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="2008" y="740" /><nail x="2008" y="772" /></transition><transition><source ref="id956" /><target ref="id330" /><label kind="synchronisation" x="2016" y="804">get_index$ctrl!</label><label kind="comments" /><nail x="2008" y="804" /><nail x="2008" y="836" /></transition><transition><source ref="id330" /><target ref="id331" /><label kind="synchronisation" x="2016" y="868">get_index$ctrl?</label><label kind="assignment" x="2016" y="881">get_index$param$address = DEFAULT_UINT64_VALUE,
index = get_index$return</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: 8487, file: ahb_simple_bus.cpp, line: 372</label><nail x="2008" y="868" /><nail x="2008" y="915" /></transition><transition><source ref="id337" /><target ref="id960" /><label kind="assignment" x="3110" y="1156">master_sock_ahb0$nb_transport_fw$param$tran = outstanding_req,
master_sock_ahb0$nb_transport_fw$param$phase = ph,
master_sock_ahb0$nb_transport_fw$param$t = delay</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="3102" y="1156" /><nail x="3102" y="1205" /></transition><transition><source ref="id960" /><target ref="id340" /><label kind="synchronisation" x="3102" y="1341">master_sock_ahb0$nb_transport_fw$ctrl!</label><label kind="comments" /><nail x="3094" y="1237" /><nail x="3094" y="1478" /></transition><transition><source ref="id340" /><target ref="id336" /><label kind="synchronisation" x="3102" y="1596">master_sock_ahb0$nb_transport_fw$ctrl?</label><label kind="assignment" x="3102" y="1609">master_sock_ahb0$nb_transport_fw$param$tran = NULL,
master_sock_ahb0$nb_transport_fw$param$phase = NULL,
master_sock_ahb0$nb_transport_fw$param$t = NULL,
retval = master_sock_ahb0$nb_transport_fw$return</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="3094" y="1510" /><nail x="3094" y="1760" /></transition><transition><source ref="id338" /><target ref="id966" /><label kind="assignment" x="2594" y="1340">master_sock_ahb1$nb_transport_fw$param$tran = outstanding_req,
master_sock_ahb1$nb_transport_fw$param$phase = ph,
master_sock_ahb1$nb_transport_fw$param$t = delay</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="2586" y="1188" /><nail x="2586" y="1542" /></transition><transition><source ref="id966" /><target ref="id344" /><label kind="synchronisation" x="2594" y="1596">master_sock_ahb1$nb_transport_fw$ctrl!</label><label kind="comments" /><nail x="2586" y="1574" /><nail x="2586" y="1651" /></transition><transition><source ref="id344" /><target ref="id336" /><label kind="synchronisation" x="2594" y="1683">master_sock_ahb1$nb_transport_fw$ctrl?</label><label kind="assignment" x="2594" y="1696">master_sock_ahb1$nb_transport_fw$param$tran = NULL,
master_sock_ahb1$nb_transport_fw$param$phase = NULL,
master_sock_ahb1$nb_transport_fw$param$t = NULL,
retval = master_sock_ahb1$nb_transport_fw$return</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="2586" y="1683" /><nail x="2586" y="1760" /></transition><transition><source ref="id349" /><target ref="id972" /><label kind="assignment" x="5377" y="1333">slave_sock0$nb_transport_bw$param$tran = outstanding_req,
slave_sock0$nb_transport_bw$param$phase = ph,
slave_sock0$nb_transport_bw$param$t = delay</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="5369" y="1333" /><nail x="5369" y="1382" /></transition><transition><source ref="id972" /><target ref="id352" /><label kind="synchronisation" x="4581" y="1414">slave_sock0$nb_transport_bw$ctrl!</label><label kind="comments" /><nail x="4573" y="1414" /><nail x="4573" y="1446" /></transition><transition><source ref="id352" /><target ref="id348" /><label kind="synchronisation" x="4581" y="1526">slave_sock0$nb_transport_bw$ctrl?</label><label kind="assignment" x="4581" y="1539">slave_sock0$nb_transport_bw$param$tran = NULL,
slave_sock0$nb_transport_bw$param$phase = NULL,
slave_sock0$nb_transport_bw$param$t = NULL,
retval = slave_sock0$nb_transport_bw$return</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="4573" y="1478" /><nail x="4573" y="1651" /></transition><transition><source ref="id350" /><target ref="id978" /><label kind="assignment" x="4115" y="1397">slave_sock1$nb_transport_bw$param$tran = outstanding_req,
slave_sock1$nb_transport_bw$param$phase = ph,
slave_sock1$nb_transport_bw$param$t = delay</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="4107" y="1365" /><nail x="4107" y="1478" /></transition><transition><source ref="id978" /><target ref="id356" /><label kind="synchronisation" x="4115" y="1510">slave_sock1$nb_transport_bw$ctrl!</label><label kind="comments" /><nail x="4107" y="1510" /><nail x="4107" y="1542" /></transition><transition><source ref="id356" /><target ref="id348" /><label kind="synchronisation" x="4115" y="1574">slave_sock1$nb_transport_bw$ctrl?</label><label kind="assignment" x="4115" y="1587">slave_sock1$nb_transport_bw$param$tran = NULL,
slave_sock1$nb_transport_bw$param$phase = NULL,
slave_sock1$nb_transport_bw$param$t = NULL,
retval = slave_sock1$nb_transport_bw$return</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="4107" y="1574" /><nail x="4107" y="1651" /></transition><transition><source ref="id361" /><target ref="id982" /><label kind="assignment" x="3883" y="1721">bus_ungrant_ev$notify_t = m_bus_req_sample_time</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="3875" y="1715" /><nail x="3875" y="1760" /></transition><transition><source ref="id982" /><target ref="id360" /><label kind="synchronisation" x="3883" y="1824">bus_ungrant_ev$notify!</label><label kind="comments" /><nail x="3875" y="1792" /><nail x="3875" y="1888" /></transition><transition><source ref="id321" /><target ref="id1188" /><label kind="guard" x="711" y="1121">!(addr_is_valid_data(outstanding_req))</label><label kind="assignment" x="711" y="1134">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="703" y="418" /><nail x="703" y="1856" /></transition><transition><source ref="id322" /><target ref="id1189" /><label kind="guard" x="1156" y="1137">!(addr_is_valid_int(type_ext))</label><label kind="assignment" x="1156" y="1150">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="1148" y="482" /><nail x="1148" y="1824" /></transition><transition><source ref="id324" /><target ref="id1190" /><label kind="guard" x="1571" y="1234">!(addr_is_valid_data(outstanding_req))</label><label kind="assignment" x="1571" y="1247">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="1563" y="676" /><nail x="1563" y="1824" /></transition><transition><source ref="id331" /><target ref="id1191" /><label kind="guard" x="2016" y="1369">!(addr_is_valid_data(outstanding_req))</label><label kind="assignment" x="2016" y="1382">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="2008" y="947" /><nail x="2008" y="1824" /></transition><transition><source ref="id336" /><target ref="id1192" /><label kind="guard" x="2461" y="1792">!(addr_is_valid_int(ph))</label><label kind="assignment" x="2461" y="1805">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="2453" y="1792" /><nail x="2453" y="1824" /></transition></template><template><name>ahb_simple_bus$thread0$sensitiveTemp</name><parameter>broadcast chan &amp;bus_ungrant_ev, broadcast chan &amp;sensitive</parameter><declaration /><location id="id369" x="41" y="16" /><location id="id370" x="41" y="80"><committed /></location><init ref="id369" /><transition><source ref="id370" /><target ref="id369" /><label kind="synchronisation" x="8" y="32">sensitive!</label><label kind="comments" /><nail x="0" y="64" /><nail x="0" y="32" /></transition><transition><source ref="id369" /><target ref="id370" /><label kind="synchronisation" x="90" y="32">bus_ungrant_ev?</label><label kind="comments" /><nail x="82" y="32" /><nail x="82" y="64" /></transition></template><template><name>ahb_simple_bus$thread1$sensitiveTemp</name><parameter>broadcast chan &amp;bus_grant_ev, broadcast chan &amp;sensitive</parameter><declaration /><location id="id371" x="41" y="16" /><location id="id372" x="41" y="80"><committed /></location><init ref="id371" /><transition><source ref="id372" /><target ref="id371" /><label kind="synchronisation" x="8" y="32">sensitive!</label><label kind="comments" /><nail x="0" y="64" /><nail x="0" y="32" /></transition><transition><source ref="id371" /><target ref="id372" /><label kind="synchronisation" x="90" y="32">bus_grant_ev?</label><label kind="comments" /><nail x="82" y="32" /><nail x="82" y="64" /></transition></template><template><name>ahb_simple_bus$thread2$sensitiveTemp</name><parameter>broadcast chan &amp;end_data_ev, broadcast chan &amp;sensitive</parameter><declaration /><location id="id373" x="41" y="16" /><location id="id374" x="41" y="80"><committed /></location><init ref="id373" /><transition><source ref="id374" /><target ref="id373" /><label kind="synchronisation" x="8" y="32">sensitive!</label><label kind="comments" /><nail x="0" y="64" /><nail x="0" y="32" /></transition><transition><source ref="id373" /><target ref="id374" /><label kind="synchronisation" x="90" y="32">end_data_ev?</label><label kind="comments" /><nail x="82" y="32" /><nail x="82" y="64" /></transition></template><template><name>ahb_simple_mem$nb_transport_fw</name><parameter>chan &amp;m_peq$notify$ctrl, int &amp;m_peq$peq_element$param$delay, chan &amp;nb_transport_fw$ctrl, int_addr_ptr &amp;nb_transport_fw$param$t, tlm_sync_enum &amp;nb_transport_fw$return, data_addr_ptr &amp;nb_transport_fw$param$tran, int_addr_ptr &amp;nb_transport_fw$param$phase, int_addr_ptr &amp;m_peq$peq_element$param$phase, data_addr_ptr &amp;m_peq$peq_element$param$trans</parameter><declaration>data_addr_ptr tran = NULL;
int_addr_ptr phase = NULL;
int_addr_ptr t = NULL;</declaration><location id="id384" x="322" y="16"><name x="346" y="8">init_location</name></location><location id="id385" x="450" y="110"><urgent /></location><location id="id387" x="820" y="336"><urgent /></location><location id="id388" x="490" y="592"><urgent /></location><location id="id390" x="267" y="528"><urgent /></location><location id="id391" x="161" y="432"><urgent /></location><location id="id392" x="161" y="656"><urgent /></location><location id="id1060" x="450" y="206"><urgent /></location><location id="id1062" x="571" y="272"><urgent /></location><location id="id1063" x="161" y="368"><urgent /></location><location id="id1064" x="80" y="720"><urgent /></location><location id="id1203" x="373" y="464"><name x="397" y="456">mem_access_fail_62</name><urgent /></location><location id="id1204" x="322" y="174"><name x="346" y="166">mem_access_fail_63</name><urgent /></location><init ref="id384" /><transition><source ref="id387" /><target ref="id388" /><label kind="synchronisation" x="828" y="448">m_peq$notify$ctrl?</label><label kind="comments" /><nail x="820" y="352" /><nail x="820" y="576" /></transition><transition><source ref="id388" /><target ref="id390" /><label kind="guard" x="169" y="544">intMem[phase] == BEGIN_REQ</label><label kind="comments">Guard:
nodeID: 9548, file: ahb_simple_mem.cpp, line: 25</label><nail x="161" y="576" /><nail x="161" y="544" /></transition><transition><source ref="id390" /><target ref="id391" /><label kind="guard" x="169" y="464">addr_is_valid_int(phase)</label><label kind="assignment" x="169" y="477">intMem[phase] = END_REQ</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 9570, file: ahb_simple_mem.cpp, line: 26</label><nail x="161" y="512" /><nail x="161" y="448" /></transition><transition><source ref="id388" /><target ref="id392" /><label kind="guard" x="169" y="608">!(intMem[phase] == BEGIN_REQ)</label><label kind="comments">Guard:
nodeID: 9548, file: ahb_simple_mem.cpp, line: 25</label><nail x="161" y="608" /><nail x="161" y="640" /></transition><transition><source ref="id384" /><target ref="id385" /><label kind="synchronisation" x="330" y="32">nb_transport_fw$ctrl?</label><label kind="assignment" x="330" y="45">tran = nb_transport_fw$param$tran,
phase = nb_transport_fw$param$phase,
t = nb_transport_fw$param$t</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="322" y="32" /><nail x="322" y="94" /></transition><transition><source ref="id385" /><target ref="id1060" /><label kind="guard" x="587" y="142">addr_is_valid_int(t)</label><label kind="assignment" x="587" y="155">m_peq$peq_element$param$delay = intMem[t]</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="579" y="126" /><nail x="579" y="190" /></transition><transition><source ref="id1060" /><target ref="id1062" /><label kind="assignment" x="330" y="222">m_peq$peq_element$param$trans = tran,
m_peq$peq_element$param$phase = phase</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="322" y="222" /><nail x="322" y="256" /></transition><transition><source ref="id1062" /><target ref="id387" /><label kind="synchronisation" x="828" y="288">m_peq$notify$ctrl!</label><label kind="comments" /><nail x="820" y="288" /><nail x="820" y="320" /></transition><transition><source ref="id391" /><target ref="id1063" /><label kind="assignment" x="169" y="384">nb_transport_fw$return = TLM_UPDATED</label><label kind="comments">Update:
nodeID: 9582, file: ahb_simple_mem.cpp, line: 27</label><nail x="161" y="416" /><nail x="161" y="384" /></transition><transition><source ref="id1063" /><target ref="id384" /><label kind="synchronisation" x="169" y="176">nb_transport_fw$ctrl!</label><label kind="comments" /><nail x="161" y="352" /><nail x="161" y="32" /></transition><transition><source ref="id392" /><target ref="id1064" /><label kind="assignment" x="169" y="672">nb_transport_fw$return = TLM_ACCEPTED</label><label kind="comments">Update:
nodeID: 9596, file: ahb_simple_mem.cpp, line: 29</label><nail x="161" y="672" /><nail x="161" y="704" /></transition><transition><source ref="id1064" /><target ref="id384" /><label kind="synchronisation" x="8" y="352">nb_transport_fw$ctrl!</label><label kind="comments" /><nail x="0" y="704" /><nail x="0" y="32" /></transition><transition><source ref="id390" /><target ref="id1203" /><label kind="guard" x="381" y="480">!(addr_is_valid_int(phase))</label><label kind="assignment" x="381" y="493">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="373" y="512" /><nail x="373" y="480" /></transition><transition><source ref="id385" /><target ref="id1204" /><label kind="guard" x="330" y="126">!(addr_is_valid_int(t))</label><label kind="assignment" x="330" y="139">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="322" y="126" /><nail x="322" y="158" /></transition></template><template><name>ahb_simple_mem$peq_cb</name><parameter>unsigned_int &amp;txn_address, unsigned_int &amp;counter, int_addr_ptr &amp;peq_cb$param$phase, chan &amp;peq_cb$ctrl, data_addr_ptr &amp;peq_cb$param$tran, bool &amp;m_data_pending, data_addr_ptr &amp;current_trans, unsigned_int &amp;txn_burst_len</parameter><declaration>data_addr_ptr tran = NULL;
int_addr_ptr phase = NULL;
int_addr_ptr type = NULL;
unsigned_int_addr_ptr size = NULL;</declaration><location id="id393" x="2751" y="16"><name x="2775" y="8">init_location</name></location><location id="id397" x="3082" y="125"><urgent /></location><location id="id399" x="1707" y="780"><urgent /></location><location id="id400" x="207" y="189"><urgent /></location><location id="id401" x="546" y="253"><urgent /></location><location id="id402" x="910" y="652"><urgent /></location><location id="id404" x="1313" y="588"><urgent /></location><location id="id405" x="1414" y="492"><urgent /></location><location id="id406" x="1142" y="381"><urgent /></location><location id="id403" x="1107" y="285"><urgent /></location><location id="id409" x="1463" y="349"><urgent /></location><location id="id411" x="2994" y="684"><urgent /></location><location id="id413" x="2736" y="748"><urgent /></location><location id="id395" x="2648" y="157"><urgent /></location><location id="id1228" x="149" y="716"><name x="173" y="708">mem_access_fail_87</name><urgent /></location><location id="id1229" x="414" y="684"><name x="438" y="676">mem_access_fail_88</name><urgent /></location><location id="id1230" x="1485" y="524"><name x="1509" y="516">mem_access_fail_89</name><urgent /></location><location id="id1231" x="1686" y="413"><name x="1710" y="405">mem_access_fail_90</name><urgent /></location><init ref="id393" /><transition><source ref="id397" /><target ref="id399" /><label kind="guard" x="3422" y="436">intMem[phase] == BEGIN_REQ</label><label kind="comments">Guard:
nodeID: 9725, file: ahb_simple_mem.cpp, line: 40</label><nail x="3414" y="141" /><nail x="3414" y="764" /></transition><transition><source ref="id399" /><target ref="id400" /><label kind="assignment" x="8" y="468">current_trans = tran</label><label kind="comments">Update:
nodeID: 9811, file: ahb_simple_mem.cpp, line: 43</label><nail x="0" y="764" /><nail x="0" y="205" /></transition><transition><source ref="id400" /><target ref="id401" /><label kind="guard" x="422" y="205">addr_is_valid_data(current_trans)</label><label kind="assignment" x="422" y="218">type = dataMem[current_trans].trans_type</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 9833, file: ahb_simple_mem.cpp, line: 44</label><nail x="414" y="205" /><nail x="414" y="237" /></transition><transition><source ref="id401" /><target ref="id402" /><label kind="guard" x="687" y="436">addr_is_valid_data(current_trans)</label><label kind="assignment" x="687" y="449">size = dataMem[current_trans].burst_size</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 9855, file: ahb_simple_mem.cpp, line: 45</label><nail x="679" y="269" /><nail x="679" y="636" /></transition><transition><source ref="id402" /><target ref="id404" /><label kind="guard" x="1150" y="604">intMem[type] == 50</label><label kind="comments">Guard:
nodeID: 9881, file: ahb_simple_mem.cpp, line: 47</label><nail x="1142" y="636" /><nail x="1142" y="604" /></transition><transition><source ref="id404" /><target ref="id405" /><label kind="guard" x="1150" y="524">addr_is_valid_data(current_trans)</label><label kind="assignment" x="1150" y="537">txn_address = dataMem[current_trans].address</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 9902, file: ahb_simple_mem.cpp, line: 49</label><nail x="1142" y="572" /><nail x="1142" y="508" /></transition><transition><source ref="id405" /><target ref="id406" /><label kind="guard" x="1150" y="413">addr_is_valid_data(current_trans)  &amp;&amp;
addr_is_valid_unsigned_int(size)</label><label kind="assignment" x="1150" y="441">txn_burst_len = dataMem[current_trans].data_length / unsigned_intMem[size]</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 9924, file: ahb_simple_mem.cpp, line: 50</label><nail x="1142" y="476" /><nail x="1142" y="397" /></transition><transition><source ref="id406" /><target ref="id403" /><label kind="assignment" x="1150" y="317">counter = 0</label><label kind="comments">Update:
nodeID: 9962, file: ahb_simple_mem.cpp, line: 51</label><nail x="1142" y="365" /><nail x="1142" y="301" /></transition><transition><source ref="id402" /><target ref="id403" /><label kind="guard" x="987" y="452">!(intMem[type] == 50)</label><label kind="comments">Guard:
nodeID: 9881, file: ahb_simple_mem.cpp, line: 47</label><nail x="979" y="636" /><nail x="979" y="301" /></transition><transition><source ref="id403" /><target ref="id409" /><label kind="guard" x="1243" y="301">dataMem[current_trans].command == TLM_READ_COMMAND</label><label kind="comments">Guard:
nodeID: 9984, file: ahb_simple_mem.cpp, line: 53</label><nail x="1235" y="301" /><nail x="1235" y="333" /></transition><transition><source ref="id409" /><target ref="id395" /><label kind="assignment" x="1700" y="237">m_data_pending = true</label><label kind="comments">Update:
nodeID: 10006, file: ahb_simple_mem.cpp, line: 54</label><nail x="1692" y="333" /><nail x="1692" y="173" /></transition><transition><source ref="id403" /><target ref="id395" /><label kind="guard" x="995" y="205">!(dataMem[current_trans].command == TLM_READ_COMMAND)</label><label kind="comments">Guard:
nodeID: 9984, file: ahb_simple_mem.cpp, line: 53</label><nail x="987" y="269" /><nail x="987" y="173" /></transition><transition><source ref="id397" /><target ref="id411" /><label kind="guard" x="3172" y="388">!(intMem[phase] == BEGIN_REQ)</label><label kind="comments">Guard:
nodeID: 9725, file: ahb_simple_mem.cpp, line: 40</label><nail x="3164" y="141" /><nail x="3164" y="668" /></transition><transition><source ref="id411" /><target ref="id413" /><label kind="guard" x="2833" y="700">intMem[phase] == 42</label><label kind="comments">Guard:
nodeID: 10026, file: ahb_simple_mem.cpp, line: 57</label><nail x="2825" y="700" /><nail x="2825" y="732" /></transition><transition><source ref="id413" /><target ref="id395" /><label kind="assignment" x="2656" y="436">m_data_pending = true</label><label kind="comments">Update:
nodeID: 10110, file: ahb_simple_mem.cpp, line: 59</label><nail x="2648" y="732" /><nail x="2648" y="173" /></transition><transition><source ref="id411" /><target ref="id395" /><label kind="guard" x="2995" y="404">!(intMem[phase] == 42)</label><label kind="comments">Guard:
nodeID: 10026, file: ahb_simple_mem.cpp, line: 57</label><nail x="2987" y="668" /><nail x="2987" y="173" /></transition><transition><source ref="id395" /><target ref="id393" /><label kind="synchronisation" x="2656" y="70">peq_cb$ctrl!</label><label kind="comments" /><nail x="2648" y="141" /><nail x="2648" y="32" /></transition><transition><source ref="id393" /><target ref="id397" /><label kind="synchronisation" x="2759" y="32">peq_cb$ctrl?</label><label kind="assignment" x="2759" y="45">tran = peq_cb$param$tran,
phase = peq_cb$param$phase,
type = NULL,
size = NULL</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="2751" y="32" /><nail x="2751" y="109" /></transition><transition><source ref="id400" /><target ref="id1228" /><label kind="guard" x="157" y="436">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="157" y="449">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="149" y="205" /><nail x="149" y="700" /></transition><transition><source ref="id401" /><target ref="id1229" /><label kind="guard" x="422" y="452">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="422" y="465">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="414" y="269" /><nail x="414" y="668" /></transition><transition><source ref="id404" /><target ref="id1230" /><label kind="guard" x="1493" y="540">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="1493" y="553">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="1485" y="572" /><nail x="1485" y="540" /></transition><transition><source ref="id405" /><target ref="id1231" /><label kind="guard" x="1694" y="429">!(addr_is_valid_data(current_trans)  &amp;&amp;
addr_is_valid_unsigned_int(size))</label><label kind="assignment" x="1694" y="457">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="1686" y="476" /><nail x="1686" y="429" /></transition></template><template><name>ahb_simple_mem$readData</name><parameter>unsigned_int &amp;txn_address, unsigned_int &amp;counter, chan &amp;readData$ctrl, chan &amp;slave_socket$nb_transport_bw$ctrl, data_addr_ptr &amp;slave_socket$nb_transport_bw$param$tran, int_addr_ptr &amp;slave_socket$nb_transport_bw$param$t, tlm_sync_enum &amp;slave_socket$nb_transport_bw$return, bool &amp;m_data_pending, data_addr_ptr &amp;current_trans, unsigned_int &amp;baseAddr, unsigned_int_addr_ptr &amp;readData$param$burst_size, unsigned_int_addr_ptr &amp;MEM, int_addr_ptr &amp;slave_socket$nb_transport_bw$param$phase</parameter><declaration>unsigned_int_addr_ptr burst_size = NULL;
unsigned_int_addr_ptr data_ptr = NULL;
int t1;
int_addr_ptr ph = NULL;
tlm_sync_enum retval;
int_addr_ptr delay = NULL;</declaration><location id="id415" x="116" y="16"><name x="140" y="8">init_location</name></location><location id="id416" x="1084" y="80"><urgent /></location><location id="id418" x="1084" y="176"><urgent /></location><location id="id419" x="1112" y="272"><urgent /></location><location id="id420" x="960" y="336"><urgent /></location><location id="id421" x="750" y="492"><urgent /></location><location id="id422" x="627" y="588"><urgent /></location><location id="id424" x="495" y="654"><urgent /></location><location id="id425" x="248" y="750"><urgent /></location><location id="id427" x="116" y="895" /><location id="id417" x="58" y="1064"><urgent /></location><location id="id915" x="116" y="831"><urgent /></location><location id="id1144" x="116" y="144"><name x="140" y="136">mem_access_fail_3</name><urgent /></location><location id="id1145" x="116" y="240"><name x="140" y="232">mem_access_fail_4</name><urgent /></location><location id="id1146" x="116" y="460"><name x="140" y="452">mem_access_fail_5</name><urgent /></location><location id="id1147" x="116" y="556"><name x="140" y="548">mem_access_fail_6</name><urgent /></location><location id="id1148" x="116" y="718"><name x="140" y="710">mem_access_fail_7</name><urgent /></location><init ref="id415" /><transition><source ref="id416" /><target ref="id418" /><label kind="guard" x="2060" y="112">addr_is_valid_data(current_trans)</label><label kind="assignment" x="2060" y="125">data_ptr = dataMem[current_trans].data_ptr</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 10246, file: ahb_simple_mem.cpp, line: 72</label><nail x="2052" y="96" /><nail x="2052" y="160" /></transition><transition><source ref="id418" /><target ref="id419" /><label kind="guard" x="427" y="208">addr_is_valid_unsigned_int(burst_size)</label><label kind="assignment" x="427" y="221">t1 = (txn_address - baseAddr) + (unsigned_intMem[burst_size] - 1)</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 10294, file: ahb_simple_mem.cpp, line: 75</label><nail x="419" y="192" /><nail x="419" y="256" /></transition><transition><source ref="id419" /><target ref="id420" /><label kind="assignment" x="1813" y="288">t1 = t1 % 3</label><label kind="comments">Update:
nodeID: 10348, file: ahb_simple_mem.cpp, line: 76</label><nail x="1805" y="288" /><nail x="1805" y="320" /></transition><transition><source ref="id420" /><target ref="id421" /><label kind="guard" x="1393" y="368">addr_is_valid_unsigned_int(MEM)  &amp;&amp;
addr_is_valid_unsigned_int(MEM + t1)  &amp;&amp;
is_arr_elem_unsigned_int(MEM,
t1)  &amp;&amp;
addr_is_valid_unsigned_int(data_ptr)</label><label kind="assignment" x="1393" y="441">unsigned_intMem[data_ptr] = unsigned_intMem[MEM + t1]</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 10378, file: ahb_simple_mem.cpp, line: 77</label><nail x="1385" y="352" /><nail x="1385" y="476" /></transition><transition><source ref="id421" /><target ref="id422" /><label kind="guard" x="389" y="524">addr_is_valid_data(current_trans)</label><label kind="assignment" x="389" y="537">dataMem[current_trans].data_ptr = data_ptr</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 10502, file: ahb_simple_mem.cpp, line: 80</label><nail x="381" y="508" /><nail x="381" y="572" /></transition><transition><source ref="id422" /><target ref="id424" /><label kind="assignment" x="882" y="604">ph = allocate_static_and_init_int(BEGIN_RESP),
delay = allocate_static_and_init_int(0)</label><label kind="comments">Update:
nodeID: 10520, file: ahb_simple_mem.cpp, line: 82,
nodeID: 10548, file: ahb_simple_mem.cpp, line: 83</label><nail x="874" y="604" /><nail x="874" y="638" /></transition><transition><source ref="id424" /><target ref="id425" /><label kind="guard" x="389" y="686">addr_is_valid_data(current_trans)</label><label kind="assignment" x="389" y="699">dataMem[current_trans].response_status = TLM_OK_RESPONSE</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 10654, file: ahb_simple_mem.cpp, line: 85</label><nail x="381" y="670" /><nail x="381" y="734" /></transition><transition><source ref="id417" /><target ref="id415" /><label kind="synchronisation" x="8" y="524">readData$ctrl!</label><label kind="comments" /><nail x="0" y="1048" /><nail x="0" y="32" /></transition><transition><source ref="id415" /><target ref="id416" /><label kind="synchronisation" x="124" y="32">readData$ctrl?</label><label kind="assignment" x="124" y="45">burst_size = readData$param$burst_size</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="116" y="32" /><nail x="116" y="64" /></transition><transition><source ref="id425" /><target ref="id915" /><label kind="assignment" x="124" y="766">slave_socket$nb_transport_bw$param$tran = current_trans,
slave_socket$nb_transport_bw$param$phase = ph,
slave_socket$nb_transport_bw$param$t = delay</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="116" y="766" /><nail x="116" y="815" /></transition><transition><source ref="id915" /><target ref="id427" /><label kind="synchronisation" x="124" y="847">slave_socket$nb_transport_bw$ctrl!</label><label kind="comments" /><nail x="116" y="847" /><nail x="116" y="879" /></transition><transition><source ref="id427" /><target ref="id417" /><label kind="synchronisation" x="124" y="911">slave_socket$nb_transport_bw$ctrl?</label><label kind="assignment" x="124" y="924">slave_socket$nb_transport_bw$param$tran = NULL,
slave_socket$nb_transport_bw$param$phase = NULL,
slave_socket$nb_transport_bw$param$t = NULL,
retval = slave_socket$nb_transport_bw$return,
m_data_pending = false,
counter++,
empty_stack_int(delay),
empty_stack_int(ph)</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="116" y="911" /><nail x="116" y="1048" /></transition><transition><source ref="id416" /><target ref="id1144" /><label kind="guard" x="124" y="96">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="124" y="109">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="116" y="96" /><nail x="116" y="128" /></transition><transition><source ref="id418" /><target ref="id1145" /><label kind="guard" x="124" y="192">!(addr_is_valid_unsigned_int(burst_size))</label><label kind="assignment" x="124" y="205">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="116" y="192" /><nail x="116" y="224" /></transition><transition><source ref="id420" /><target ref="id1146" /><label kind="guard" x="124" y="352">!(addr_is_valid_unsigned_int(MEM)  &amp;&amp;
addr_is_valid_unsigned_int(MEM + t1)  &amp;&amp;
is_arr_elem_unsigned_int(MEM,
t1)  &amp;&amp;
addr_is_valid_unsigned_int(data_ptr))</label><label kind="assignment" x="124" y="425">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="116" y="352" /><nail x="116" y="444" /></transition><transition><source ref="id421" /><target ref="id1147" /><label kind="guard" x="124" y="508">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="124" y="521">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="116" y="508" /><nail x="116" y="540" /></transition><transition><source ref="id424" /><target ref="id1148" /><label kind="guard" x="124" y="670">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="124" y="683">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="116" y="670" /><nail x="116" y="702" /></transition></template><template><name>ahb_simple_mem$responseProcess</name><parameter>chan &amp;writeData$ctrl, unsigned_int &amp;txn_address, unsigned_int_addr_ptr &amp;writeData$param$burst_size, unsigned_int &amp;counter, chan &amp;readData$ctrl, chan &amp;responseProcess$ctrl, bool &amp;m_data_pending, data_addr_ptr &amp;current_trans, unsigned_int &amp;txn_burst_len, unsigned_int_addr_ptr &amp;readData$param$burst_size</parameter><declaration>unsigned_int cmd;
unsigned_int_addr_ptr burst_size = NULL;</declaration><location id="id431" x="173" y="16"><name x="197" y="8">init_location</name></location><location id="id432" x="2616" y="80"><urgent /></location><location id="id435" x="4735" y="208"><urgent /></location><location id="id436" x="4470" y="272"><urgent /></location><location id="id437" x="4211" y="336"><urgent /></location><location id="id439" x="2128" y="112"><urgent /></location><location id="id441" x="467" y="656"><urgent /></location><location id="id443" x="827" y="720"><urgent /></location><location id="id444" x="690" y="816"><urgent /></location><location id="id445" x="1143" y="880" /><location id="id447" x="1851" y="592"><urgent /></location><location id="id449" x="1231" y="944"><urgent /></location><location id="id451" x="3959" y="656"><urgent /></location><location id="id453" x="3461" y="368"><urgent /></location><location id="id455" x="2807" y="432"><urgent /></location><location id="id457" x="2817" y="720"><urgent /></location><location id="id458" x="2661" y="944"><urgent /></location><location id="id459" x="2525" y="880" /><location id="id461" x="2326" y="496"><urgent /></location><location id="id463" x="2142" y="560"><urgent /></location><location id="id433" x="2530" y="1008"><urgent /></location><location id="id1132" x="1280" y="784"><urgent /></location><location id="id1134" x="2525" y="784"><urgent /></location><location id="id1224" x="4603" y="144"><name x="4627" y="136">mem_access_fail_83</name><urgent /></location><location id="id1225" x="4338" y="176"><name x="4362" y="168">mem_access_fail_84</name><urgent /></location><location id="id1226" x="703" y="912"><name x="727" y="904">mem_access_fail_85</name><urgent /></location><location id="id1227" x="2798" y="816"><name x="2822" y="808">mem_access_fail_86</name><urgent /></location><init ref="id431" /><transition><source ref="id431" /><target ref="id432" /><label kind="synchronisation" x="181" y="32">responseProcess$ctrl?</label><label kind="comments" /><nail x="173" y="32" /><nail x="173" y="64" /></transition><transition><source ref="id432" /><target ref="id435" /><label kind="guard" x="4876" y="128">current_trans != NULL</label><label kind="comments">Guard:
nodeID: 10791, file: ahb_simple_mem.cpp, line: 100</label><nail x="4868" y="96" /><nail x="4868" y="192" /></transition><transition><source ref="id435" /><target ref="id436" /><label kind="guard" x="4611" y="224">addr_is_valid_data(current_trans)</label><label kind="assignment" x="4611" y="237">cmd = dataMem[current_trans].command</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 10811, file: ahb_simple_mem.cpp, line: 102</label><nail x="4603" y="224" /><nail x="4603" y="256" /></transition><transition><source ref="id436" /><target ref="id437" /><label kind="guard" x="4346" y="288">addr_is_valid_data(current_trans)</label><label kind="assignment" x="4346" y="301">burst_size = dataMem[current_trans].burst_size</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 10839, file: ahb_simple_mem.cpp, line: 103</label><nail x="4338" y="288" /><nail x="4338" y="320" /></transition><transition><source ref="id437" /><target ref="id439" /><label kind="guard" x="4092" y="208">cmd == TLM_WRITE_COMMAND</label><label kind="comments">Guard:
nodeID: 10871, file: ahb_simple_mem.cpp, line: 105</label><nail x="4084" y="320" /><nail x="4084" y="128" /></transition><transition><source ref="id439" /><target ref="id441" /><label kind="guard" x="382" y="368">m_data_pending == true</label><label kind="comments">Guard:
nodeID: 10893, file: ahb_simple_mem.cpp, line: 107</label><nail x="374" y="128" /><nail x="374" y="640" /></transition><transition><source ref="id441" /><target ref="id443" /><label kind="guard" x="382" y="672">txn_burst_len != counter</label><label kind="comments">Guard:
nodeID: 10913, file: ahb_simple_mem.cpp, line: 109</label><nail x="374" y="672" /><nail x="374" y="704" /></transition><transition><source ref="id444" /><target ref="id433" /><label kind="guard" x="382" y="896">addr_is_valid_unsigned_int(burst_size)</label><label kind="assignment" x="382" y="909">txn_address += unsigned_intMem[burst_size]</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 10951, file: ahb_simple_mem.cpp, line: 112</label><nail x="374" y="832" /><nail x="374" y="992" /></transition><transition><source ref="id441" /><target ref="id447" /><label kind="guard" x="568" y="608">!(txn_burst_len != counter)</label><label kind="comments">Guard:
nodeID: 10913, file: ahb_simple_mem.cpp, line: 109</label><nail x="560" y="640" /><nail x="560" y="608" /></transition><transition><source ref="id447" /><target ref="id449" /><label kind="guard" x="1767" y="752">txn_burst_len == counter</label><label kind="comments">Guard:
nodeID: 10975, file: ahb_simple_mem.cpp, line: 114</label><nail x="1759" y="608" /><nail x="1759" y="928" /></transition><transition><source ref="id449" /><target ref="id433" /><label kind="assignment" x="711" y="960">counter = 0</label><label kind="comments">Update:
nodeID: 10995, file: ahb_simple_mem.cpp, line: 115</label><nail x="703" y="960" /><nail x="703" y="992" /></transition><transition><source ref="id447" /><target ref="id433" /><label kind="guard" x="1951" y="784">!(txn_burst_len == counter)</label><label kind="comments">Guard:
nodeID: 10975, file: ahb_simple_mem.cpp, line: 114</label><nail x="1943" y="608" /><nail x="1943" y="992" /></transition><transition><source ref="id439" /><target ref="id433" /><label kind="guard" x="181" y="544">!(m_data_pending == true)</label><label kind="comments">Guard:
nodeID: 10893, file: ahb_simple_mem.cpp, line: 107</label><nail x="173" y="128" /><nail x="173" y="992" /></transition><transition><source ref="id437" /><target ref="id451" /><label kind="guard" x="4092" y="480">!(cmd == TLM_WRITE_COMMAND)</label><label kind="comments">Guard:
nodeID: 10871, file: ahb_simple_mem.cpp, line: 105</label><nail x="4084" y="352" /><nail x="4084" y="640" /></transition><transition><source ref="id451" /><target ref="id453" /><label kind="guard" x="3842" y="496">cmd == TLM_READ_COMMAND</label><label kind="comments">Guard:
nodeID: 11015, file: ahb_simple_mem.cpp, line: 118</label><nail x="3834" y="640" /><nail x="3834" y="384" /></transition><transition><source ref="id453" /><target ref="id455" /><label kind="guard" x="3297" y="384">m_data_pending == true</label><label kind="comments">Guard:
nodeID: 11037, file: ahb_simple_mem.cpp, line: 120</label><nail x="3289" y="384" /><nail x="3289" y="416" /></transition><transition><source ref="id455" /><target ref="id457" /><label kind="guard" x="3117" y="560">txn_burst_len != counter</label><label kind="comments">Guard:
nodeID: 11057, file: ahb_simple_mem.cpp, line: 122</label><nail x="3109" y="448" /><nail x="3109" y="704" /></transition><transition><source ref="id458" /><target ref="id433" /><label kind="guard" x="2533" y="960">addr_is_valid_unsigned_int(burst_size)</label><label kind="assignment" x="2533" y="973">txn_address += unsigned_intMem[burst_size]</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 11095, file: ahb_simple_mem.cpp, line: 125</label><nail x="2525" y="960" /><nail x="2525" y="992" /></transition><transition><source ref="id455" /><target ref="id461" /><label kind="guard" x="2334" y="448">!(txn_burst_len != counter)</label><label kind="comments">Guard:
nodeID: 11057, file: ahb_simple_mem.cpp, line: 122</label><nail x="2326" y="448" /><nail x="2326" y="480" /></transition><transition><source ref="id461" /><target ref="id463" /><label kind="guard" x="2150" y="512">txn_burst_len == counter</label><label kind="comments">Guard:
nodeID: 11119, file: ahb_simple_mem.cpp, line: 127</label><nail x="2142" y="512" /><nail x="2142" y="544" /></transition><transition><source ref="id463" /><target ref="id433" /><label kind="assignment" x="2150" y="768">counter = 0</label><label kind="comments">Update:
nodeID: 11139, file: ahb_simple_mem.cpp, line: 128</label><nail x="2142" y="576" /><nail x="2142" y="992" /></transition><transition><source ref="id461" /><target ref="id433" /><label kind="guard" x="2334" y="736">!(txn_burst_len == counter)</label><label kind="comments">Guard:
nodeID: 11119, file: ahb_simple_mem.cpp, line: 127</label><nail x="2326" y="512" /><nail x="2326" y="992" /></transition><transition><source ref="id453" /><target ref="id433" /><label kind="guard" x="3641" y="672">!(m_data_pending == true)</label><label kind="comments">Guard:
nodeID: 11037, file: ahb_simple_mem.cpp, line: 120</label><nail x="3633" y="384" /><nail x="3633" y="992" /></transition><transition><source ref="id451" /><target ref="id433" /><label kind="guard" x="3842" y="816">!(cmd == TLM_READ_COMMAND)</label><label kind="comments">Guard:
nodeID: 11015, file: ahb_simple_mem.cpp, line: 118</label><nail x="3834" y="672" /><nail x="3834" y="992" /></transition><transition><source ref="id432" /><target ref="id433" /><label kind="guard" x="5068" y="528">!(current_trans != NULL)</label><label kind="comments">Guard:
nodeID: 10791, file: ahb_simple_mem.cpp, line: 100</label><nail x="5060" y="96" /><nail x="5060" y="992" /></transition><transition><source ref="id433" /><target ref="id431" /><label kind="synchronisation" x="8" y="496">responseProcess$ctrl!</label><label kind="comments" /><nail x="0" y="992" /><nail x="0" y="32" /></transition><transition><source ref="id443" /><target ref="id1132" /><label kind="assignment" x="1288" y="736">writeData$param$burst_size = burst_size</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="1280" y="736" /><nail x="1280" y="768" /></transition><transition><source ref="id1132" /><target ref="id445" /><label kind="synchronisation" x="1288" y="816">writeData$ctrl!</label><label kind="comments" /><nail x="1280" y="800" /><nail x="1280" y="864" /></transition><transition><source ref="id445" /><target ref="id444" /><label kind="synchronisation" x="1014" y="832">writeData$ctrl?</label><label kind="assignment" x="1014" y="845">writeData$param$burst_size = NULL</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="1006" y="864" /><nail x="1006" y="832" /></transition><transition><source ref="id457" /><target ref="id1134" /><label kind="assignment" x="2533" y="736">readData$param$burst_size = burst_size</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="2525" y="736" /><nail x="2525" y="768" /></transition><transition><source ref="id1134" /><target ref="id459" /><label kind="synchronisation" x="2533" y="816">readData$ctrl!</label><label kind="comments" /><nail x="2525" y="800" /><nail x="2525" y="864" /></transition><transition><source ref="id459" /><target ref="id458" /><label kind="synchronisation" x="2533" y="896">readData$ctrl?</label><label kind="assignment" x="2533" y="909">readData$param$burst_size = NULL</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="2525" y="896" /><nail x="2525" y="928" /></transition><transition><source ref="id435" /><target ref="id1224" /><label kind="guard" x="4611" y="160">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="4611" y="173">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="4603" y="192" /><nail x="4603" y="160" /></transition><transition><source ref="id436" /><target ref="id1225" /><label kind="guard" x="4346" y="208">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="4346" y="221">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="4338" y="256" /><nail x="4338" y="192" /></transition><transition><source ref="id444" /><target ref="id1226" /><label kind="guard" x="711" y="848">!(addr_is_valid_unsigned_int(burst_size))</label><label kind="assignment" x="711" y="861">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="703" y="832" /><nail x="703" y="896" /></transition><transition><source ref="id458" /><target ref="id1227" /><label kind="guard" x="2806" y="864">!(addr_is_valid_unsigned_int(burst_size))</label><label kind="assignment" x="2806" y="877">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="2798" y="928" /><nail x="2798" y="832" /></transition></template><template><name>ahb_simple_mem$thread0$sensitiveTemp</name><parameter>broadcast chan &amp;sensitive, broadcast chan &amp;clk</parameter><declaration /><location id="id489" x="41" y="16" /><location id="id490" x="41" y="80"><committed /></location><init ref="id489" /><transition><source ref="id490" /><target ref="id489" /><label kind="synchronisation" x="8" y="32">sensitive!</label><label kind="comments" /><nail x="0" y="64" /><nail x="0" y="32" /></transition><transition><source ref="id489" /><target ref="id490" /><label kind="synchronisation" x="90" y="32">clk?</label><label kind="comments" /><nail x="82" y="32" /><nail x="82" y="64" /></transition></template><template><name>ahb_simple_mem$writeData</name><parameter>chan &amp;writeData$ctrl, unsigned_int &amp;txn_address, unsigned_int_addr_ptr &amp;writeData$param$burst_size, unsigned_int &amp;counter, chan &amp;slave_socket$nb_transport_bw$ctrl, data_addr_ptr &amp;slave_socket$nb_transport_bw$param$tran, int_addr_ptr &amp;slave_socket$nb_transport_bw$param$t, tlm_sync_enum &amp;slave_socket$nb_transport_bw$return, bool &amp;m_data_pending, data_addr_ptr &amp;current_trans, unsigned_int &amp;baseAddr, unsigned_int_addr_ptr &amp;MEM, int_addr_ptr &amp;slave_socket$nb_transport_bw$param$phase</parameter><declaration>unsigned_int_addr_ptr burst_size = NULL;
unsigned_int_addr_ptr data_ptr = NULL;
int t1;
int_addr_ptr ph = NULL;
tlm_sync_enum retval;
int_addr_ptr delay = NULL;</declaration><location id="id468" x="117" y="16"><name x="141" y="8">init_location</name></location><location id="id469" x="767" y="80"><urgent /></location><location id="id471" x="767" y="176"><urgent /></location><location id="id472" x="790" y="272"><urgent /></location><location id="id473" x="639" y="336"><urgent /></location><location id="id474" x="663" y="537"><urgent /></location><location id="id476" x="496" y="603"><urgent /></location><location id="id477" x="249" y="699"><urgent /></location><location id="id479" x="117" y="844" /><location id="id470" x="58" y="1013"><urgent /></location><location id="id1083" x="117" y="780"><urgent /></location><location id="id1207" x="117" y="144"><name x="141" y="136">mem_access_fail_66</name><urgent /></location><location id="id1208" x="117" y="240"><name x="141" y="232">mem_access_fail_67</name><urgent /></location><location id="id1209" x="117" y="505"><name x="141" y="497">mem_access_fail_68</name><urgent /></location><location id="id1210" x="117" y="667"><name x="141" y="659">mem_access_fail_69</name><urgent /></location><init ref="id468" /><transition><source ref="id469" /><target ref="id471" /><label kind="guard" x="1425" y="112">addr_is_valid_data(current_trans)</label><label kind="assignment" x="1425" y="125">data_ptr = dataMem[current_trans].data_ptr</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 11316, file: ahb_simple_mem.cpp, line: 151</label><nail x="1417" y="96" /><nail x="1417" y="160" /></transition><transition><source ref="id471" /><target ref="id472" /><label kind="guard" x="428" y="208">addr_is_valid_unsigned_int(burst_size)</label><label kind="assignment" x="428" y="221">t1 = (txn_address - baseAddr) + (unsigned_intMem[burst_size] - 1)</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 11364, file: ahb_simple_mem.cpp, line: 154</label><nail x="420" y="192" /><nail x="420" y="256" /></transition><transition><source ref="id472" /><target ref="id473" /><label kind="assignment" x="1169" y="288">t1 = t1 % 3</label><label kind="comments">Update:
nodeID: 11418, file: ahb_simple_mem.cpp, line: 155</label><nail x="1161" y="288" /><nail x="1161" y="320" /></transition><transition><source ref="id473" /><target ref="id474" /><label kind="guard" x="460" y="368">addr_is_valid_unsigned_int(data_ptr)  &amp;&amp;
addr_is_valid_unsigned_int(MEM)  &amp;&amp;
addr_is_valid_unsigned_int(MEM + t1)  &amp;&amp;
is_arr_elem_unsigned_int(MEM,
t1)  &amp;&amp;
addr_is_valid_unsigned_int(data_ptr + t1)  &amp;&amp;
is_arr_elem_unsigned_int(data_ptr,
t1)</label><label kind="assignment" x="460" y="486">unsigned_intMem[MEM + t1] = unsigned_intMem[data_ptr + t1]</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 11454, file: ahb_simple_mem.cpp, line: 156</label><nail x="452" y="352" /><nail x="452" y="521" /></transition><transition><source ref="id474" /><target ref="id476" /><label kind="assignment" x="883" y="553">ph = allocate_static_and_init_int(43),
delay = allocate_static_and_init_int(1)</label><label kind="comments">Update:
nodeID: 11574, file: ahb_simple_mem.cpp, line: 159,
nodeID: 11600, file: ahb_simple_mem.cpp, line: 160</label><nail x="875" y="553" /><nail x="875" y="587" /></transition><transition><source ref="id476" /><target ref="id477" /><label kind="guard" x="390" y="635">addr_is_valid_data(current_trans)</label><label kind="assignment" x="390" y="648">dataMem[current_trans].response_status = TLM_OK_RESPONSE</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 11708, file: ahb_simple_mem.cpp, line: 164</label><nail x="382" y="619" /><nail x="382" y="683" /></transition><transition><source ref="id470" /><target ref="id468" /><label kind="synchronisation" x="8" y="498">writeData$ctrl!</label><label kind="comments" /><nail x="0" y="997" /><nail x="0" y="32" /></transition><transition><source ref="id468" /><target ref="id469" /><label kind="synchronisation" x="125" y="32">writeData$ctrl?</label><label kind="assignment" x="125" y="45">burst_size = writeData$param$burst_size</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="117" y="32" /><nail x="117" y="64" /></transition><transition><source ref="id477" /><target ref="id1083" /><label kind="assignment" x="125" y="715">slave_socket$nb_transport_bw$param$tran = current_trans,
slave_socket$nb_transport_bw$param$phase = ph,
slave_socket$nb_transport_bw$param$t = delay</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="117" y="715" /><nail x="117" y="764" /></transition><transition><source ref="id1083" /><target ref="id479" /><label kind="synchronisation" x="125" y="796">slave_socket$nb_transport_bw$ctrl!</label><label kind="comments" /><nail x="117" y="796" /><nail x="117" y="828" /></transition><transition><source ref="id479" /><target ref="id470" /><label kind="synchronisation" x="125" y="860">slave_socket$nb_transport_bw$ctrl?</label><label kind="assignment" x="125" y="873">slave_socket$nb_transport_bw$param$tran = NULL,
slave_socket$nb_transport_bw$param$phase = NULL,
slave_socket$nb_transport_bw$param$t = NULL,
retval = slave_socket$nb_transport_bw$return,
m_data_pending = false,
counter++,
empty_stack_int(delay),
empty_stack_int(ph)</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="117" y="860" /><nail x="117" y="997" /></transition><transition><source ref="id469" /><target ref="id1207" /><label kind="guard" x="125" y="96">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="125" y="109">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="117" y="96" /><nail x="117" y="128" /></transition><transition><source ref="id471" /><target ref="id1208" /><label kind="guard" x="125" y="192">!(addr_is_valid_unsigned_int(burst_size))</label><label kind="assignment" x="125" y="205">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="117" y="192" /><nail x="117" y="224" /></transition><transition><source ref="id473" /><target ref="id1209" /><label kind="guard" x="125" y="352">!(addr_is_valid_unsigned_int(data_ptr)  &amp;&amp;
addr_is_valid_unsigned_int(MEM)  &amp;&amp;
addr_is_valid_unsigned_int(MEM + t1)  &amp;&amp;
is_arr_elem_unsigned_int(MEM,
t1)  &amp;&amp;
addr_is_valid_unsigned_int(data_ptr + t1)  &amp;&amp;
is_arr_elem_unsigned_int(data_ptr,
t1))</label><label kind="assignment" x="125" y="470">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="117" y="352" /><nail x="117" y="489" /></transition><transition><source ref="id476" /><target ref="id1210" /><label kind="guard" x="125" y="619">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="125" y="632">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="117" y="619" /><nail x="117" y="651" /></transition></template><template><name>peq_element$data</name><parameter>data_addr_ptr &amp;peq_cb$param$tran, data_addr_ptr &amp;peq_element$param$trans, chan &amp;peq_fetch$ctrl, int_addr_ptr &amp;peq_cb$param$phase, int_addr_ptr &amp;peq_element$param$phase, int &amp;peq_element$param$delay, bool &amp;peqInUse, chan &amp;peq_element$ctrl</parameter><declaration>int_addr_ptr phase = NULL;
int delay;
clock c;
data_addr_ptr payload = NULL;</declaration><location id="id882" x="135" y="16"><committed /></location><location id="id883" x="66" y="176"><committed /></location><location id="id884" x="353" y="893"><committed /></location><location id="id881" x="1889" y="80"><name x="1913" y="72">init_location</name></location><location id="id885" x="1767" y="528"><label kind="invariant" x="1791" y="520">c &lt;= delay</label></location><location id="id886" x="1728" y="592"><committed /></location><location id="id887" x="1627" y="782"><committed /></location><location id="id888" x="1776" y="718"><urgent /></location><location id="id1112" x="133" y="112"><committed /></location><location id="id1113" x="121" y="240"><committed /></location><location id="id1114" x="897" y="814"><committed /></location><location id="id1115" x="1283" y="336"><committed /></location><location id="id1116" x="1479" y="400"><committed /></location><location id="id1117" x="1479" y="464"><committed /></location><location id="id1120" x="1832" y="624"><urgent /></location><location id="id1218" x="353" y="272"><name x="377" y="264">mem_access_fail_77</name><urgent /></location><location id="id1219" x="706" y="304"><name x="730" y="296">mem_access_fail_78</name><urgent /></location><init ref="id881" /><transition><source ref="id881" /><target ref="id882" /><label kind="synchronisation" x="278" y="32">peq_element$ctrl?</label><label kind="comments" /><nail x="270" y="64" /><nail x="270" y="32" /></transition><transition><source ref="id882" /><target ref="id883" /><label kind="guard" x="8" y="80">payload != NULL</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="0" y="32" /><nail x="0" y="160" /></transition><transition><source ref="id883" /><target ref="id884" /><label kind="guard" x="8" y="518">phase != NULL</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="0" y="192" /><nail x="0" y="877" /></transition><transition><source ref="id886" /><target ref="id885" /><label kind="guard" x="1697" y="544">c &lt; delay</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="1689" y="576" /><nail x="1689" y="544" /></transition><transition><source ref="id886" /><target ref="id887" /><label kind="guard" x="1697" y="671">c == delay</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="1689" y="608" /><nail x="1689" y="766" /></transition><transition><source ref="id885" /><target ref="id887" /><label kind="guard" x="1487" y="631">delay != 0  &amp;&amp;
c == delay</label><label kind="synchronisation" x="1487" y="659">advancetime!</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="1479" y="544" /><nail x="1479" y="766" /></transition><transition><source ref="id887" /><target ref="id888" /><label kind="assignment" x="1784" y="734">readyprocs++</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="1776" y="766" /><nail x="1776" y="734" /></transition><transition><source ref="id888" /><target ref="id1120" /><label kind="synchronisation" x="1784" y="640">activate?</label><label kind="assignment" x="1784" y="653">peq_cb$param$tran = payload,
peq_cb$param$phase = phase,
peqInUse = false</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="1776" y="702" /><nail x="1776" y="640" /></transition><transition><source ref="id882" /><target ref="id1112" /><label kind="guard" x="141" y="48">payload == NULL</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="133" y="32" /><nail x="133" y="96" /></transition><transition><source ref="id1112" /><target ref="id883" /><label kind="assignment" x="141" y="128">payload = allocate_dynamic_data()</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="133" y="128" /><nail x="133" y="160" /></transition><transition><source ref="id883" /><target ref="id1113" /><label kind="guard" x="129" y="192">phase == NULL</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="121" y="192" /><nail x="121" y="224" /></transition><transition><source ref="id1113" /><target ref="id884" /><label kind="assignment" x="129" y="550">phase = allocate_dynamic_int()</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="121" y="256" /><nail x="121" y="877" /></transition><transition><source ref="id884" /><target ref="id1114" /><label kind="guard" x="714" y="830">addr_is_valid_data(payload)  &amp;&amp;
addr_is_valid_data(peq_element$param$trans)</label><label kind="assignment" x="714" y="858">dataMem[payload] = dataMem[peq_element$param$trans]</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="706" y="877" /><nail x="706" y="830" /></transition><transition><source ref="id1114" /><target ref="id1115" /><label kind="guard" x="1096" y="551">addr_is_valid_int(peq_element$param$phase)  &amp;&amp;
addr_is_valid_int(phase)</label><label kind="assignment" x="1096" y="579">intMem[phase] = intMem[peq_element$param$phase]</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="1088" y="798" /><nail x="1088" y="352" /></transition><transition><source ref="id1115" /><target ref="id1116" /><label kind="assignment" x="1487" y="352">delay = peq_element$param$delay</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="1479" y="352" /><nail x="1479" y="384" /></transition><transition><source ref="id1116" /><target ref="id1117" /><label kind="assignment" x="1487" y="416">peqInUse = true</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="1479" y="416" /><nail x="1479" y="448" /></transition><transition><source ref="id1117" /><target ref="id885" /><label kind="assignment" x="1487" y="480">c = 0</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="1479" y="480" /><nail x="1479" y="512" /></transition><transition><source ref="id885" /><target ref="id886" /><label kind="guard" x="1775" y="544">delay != 0</label><label kind="synchronisation" x="1775" y="557">advancetime?</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="1767" y="544" /><nail x="1767" y="576" /></transition><transition><source ref="id885" /><target ref="id887" /><label kind="guard" x="1601" y="639">delay == 0</label><label kind="synchronisation" x="1601" y="652">deltadelay?</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="1593" y="544" /><nail x="1593" y="766" /></transition><transition><source ref="id1120" /><target ref="id881" /><label kind="synchronisation" x="1897" y="336">peq_fetch$ctrl!</label><label kind="comments" /><nail x="1889" y="608" /><nail x="1889" y="96" /></transition><transition><source ref="id884" /><target ref="id1218" /><label kind="guard" x="361" y="559">!(addr_is_valid_data(payload)  &amp;&amp;
addr_is_valid_data(peq_element$param$trans))</label><label kind="assignment" x="361" y="587">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="353" y="877" /><nail x="353" y="288" /></transition><transition><source ref="id1114" /><target ref="id1219" /><label kind="guard" x="714" y="535">!(addr_is_valid_int(peq_element$param$phase)  &amp;&amp;
addr_is_valid_int(phase))</label><label kind="assignment" x="714" y="563">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="706" y="798" /><nail x="706" y="320" /></transition></template><template><name>peq_fetch$data</name><parameter>chan &amp;peq_cb$ctrl, chan &amp;peq_fetch$ctrl</parameter><declaration /><location id="id877" x="93" y="16"><name x="117" y="8">init_location</name></location><location id="id878" x="100" y="80"><urgent /></location><location id="id879" x="53" y="176"><urgent /></location><location id="id1066" x="0" y="112"><urgent /></location><init ref="id877" /><transition><source ref="id877" /><target ref="id878" /><label kind="synchronisation" x="101" y="32">peq_fetch$ctrl?</label><label kind="comments" /><nail x="93" y="32" /><nail x="93" y="64" /></transition><transition><source ref="id878" /><target ref="id879" /><label kind="synchronisation" x="115" y="112">peq_cb$ctrl!</label><label kind="comments" /><nail x="107" y="96" /><nail x="107" y="160" /></transition><transition><source ref="id879" /><target ref="id1066" /><label kind="synchronisation" x="8" y="128">peq_cb$ctrl?</label><label kind="assignment" x="8" y="141">readyprocs--</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="0" y="160" /><nail x="0" y="128" /></transition><transition><source ref="id1066" /><target ref="id877" /><label kind="synchronisation" x="8" y="48">deactivate!</label><label kind="comments" /><nail x="0" y="96" /><nail x="0" y="32" /></transition></template><template><name>peq_notify$data$4</name><parameter>bool &amp;peqInUse[4], chan &amp;peq_notify$ctrl, chan &amp;peq_element$ctrl[4]</parameter><declaration>int[-1, 3] index = -1;
int[-1, 4] i = 0;
int[-1, 3] getIndex(){
	for (i = 0; i &lt; 4; i++) {
		if (!peqInUse[i]) {
			return i;
		}
	}
	return -1;
}</declaration><location id="id873" x="61" y="16" /><location id="id874" x="432" y="80"><name x="456" y="72">invoked</name><urgent /></location><location id="id875" x="277" y="242"><urgent /></location><location id="id876" x="122" y="210" /><location id="id1123" x="61" y="308"><urgent /></location><location id="id1124" x="122" y="146"><urgent /></location><init ref="id873" /><transition><source ref="id874" /><target ref="id875" /><label kind="guard" x="440" y="145">index &gt;= 0</label><label kind="synchronisation" x="440" y="158">peq_element$ctrl[index]!</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="432" y="96" /><nail x="432" y="226" /></transition><transition><source ref="id873" /><target ref="id874" /><label kind="synchronisation" x="130" y="32">peq_notify$ctrl?</label><label kind="assignment" x="130" y="45">index = getIndex()</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="122" y="32" /><nail x="122" y="64" /></transition><transition><source ref="id875" /><target ref="id1123" /><label kind="assignment" x="130" y="258">index = -1,
i = 0</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="122" y="258" /><nail x="122" y="292" /></transition><transition><source ref="id1123" /><target ref="id873" /><label kind="synchronisation" x="8" y="146">peq_notify$ctrl!</label><label kind="comments" /><nail x="0" y="292" /><nail x="0" y="32" /></transition><transition><source ref="id874" /><target ref="id1124" /><label kind="guard" x="130" y="96">index &lt; 0  &amp;&amp;
!PEQ_ERR_OUT_OF_ELEMENTS</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="122" y="96" /><nail x="122" y="130" /></transition><transition><source ref="id1124" /><target ref="id876" /><label kind="assignment" x="130" y="162">PEQ_ERR_OUT_OF_ELEMENTS = true</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="122" y="162" /><nail x="122" y="194" /></transition></template><template><name>sc_clock$run</name><parameter>int &amp;period, chan &amp;edge$notify, chan &amp;change$notify, chan &amp;run$ctrl, int &amp;change$notify_t, broadcast chan &amp;timeoutevent$wait, chan &amp;timeoutevent$notify, int &amp;val, int &amp;edge$notify_t, int &amp;timeoutevent$notify_t</parameter><declaration>int tmp;</declaration><location id="id34" x="71" y="16"><name x="95" y="8">init_location</name></location><location id="id37" x="216" y="80"><committed /></location><location id="id38" x="175" y="880"><committed /></location><location id="id39" x="87" y="1008"><urgent /></location><location id="id41" x="133" y="784"><urgent /></location><location id="id42" x="133" y="400"><committed /></location><location id="id43" x="133" y="656"><committed /></location><location id="id44" x="133" y="464"><urgent /></location><location id="id45" x="133" y="528" /><location id="id46" x="133" y="272"><committed /></location><location id="id47" x="95" y="144"><urgent /></location><location id="id36" x="0" y="112"><urgent /></location><location id="id1088" x="268" y="816"><committed /></location><location id="id1089" x="175" y="944"><committed /></location><location id="id1090" x="133" y="720"><urgent /></location><location id="id1091" x="133" y="592"><committed /></location><location id="id1093" x="133" y="336"><committed /></location><location id="id1094" x="133" y="208"><committed /></location><init ref="id34" /><transition><source ref="id34" /><target ref="id37" /><label kind="synchronisation" x="79" y="32">run$ctrl?</label><label kind="assignment" x="79" y="45">tmp = period / 2</label><label kind="comments">Update:
nodeID: 150, file: sc_clock.cpp, line: 20</label><nail x="71" y="32" /><nail x="71" y="64" /></transition><transition><source ref="id39" /><target ref="id41" /><label kind="guard" x="141" y="880">true</label><label kind="comments">Guard:
nodeID: 204, file: sc_clock.cpp, line: 23</label><nail x="133" y="992" /><nail x="133" y="800" /></transition><transition><source ref="id44" /><target ref="id42" /><label kind="synchronisation" x="141" y="416">activate?</label><label kind="comments" /><nail x="133" y="448" /><nail x="133" y="416" /></transition><transition><source ref="id47" /><target ref="id39" /><label kind="assignment" x="65" y="560">val = !val</label><label kind="comments">Update:
nodeID: 264, file: sc_clock.cpp, line: 27</label><nail x="57" y="160" /><nail x="57" y="992" /></transition><transition><source ref="id39" /><target ref="id36" /><label kind="guard" x="8" y="544">!(true)</label><label kind="comments">Guard:
nodeID: 204, file: sc_clock.cpp, line: 23</label><nail x="0" y="992" /><nail x="0" y="128" /></transition><transition><source ref="id36" /><target ref="id34" /><label kind="synchronisation" x="8" y="48">run$ctrl!</label><label kind="comments" /><nail x="0" y="96" /><nail x="0" y="32" /></transition><transition><source ref="id37" /><target ref="id1088" /><label kind="assignment" x="370" y="432">edge$notify_t = 0</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="362" y="96" /><nail x="362" y="800" /></transition><transition><source ref="id1088" /><target ref="id38" /><label kind="synchronisation" x="183" y="832">edge$notify!</label><label kind="comments" /><nail x="175" y="832" /><nail x="175" y="864" /></transition><transition><source ref="id38" /><target ref="id1089" /><label kind="assignment" x="183" y="896">change$notify_t = 0</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="175" y="896" /><nail x="175" y="928" /></transition><transition><source ref="id1089" /><target ref="id39" /><label kind="synchronisation" x="183" y="960">change$notify!</label><label kind="comments" /><nail x="175" y="960" /><nail x="175" y="992" /></transition><transition><source ref="id41" /><target ref="id1090" /><label kind="assignment" x="141" y="736">readyprocs--</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="133" y="768" /><nail x="133" y="736" /></transition><transition><source ref="id1090" /><target ref="id43" /><label kind="synchronisation" x="141" y="672">deactivate!</label><label kind="comments" /><nail x="133" y="704" /><nail x="133" y="672" /></transition><transition><source ref="id43" /><target ref="id1091" /><label kind="assignment" x="141" y="608">timeoutevent$notify_t = tmp</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="133" y="640" /><nail x="133" y="608" /></transition><transition><source ref="id1091" /><target ref="id45" /><label kind="synchronisation" x="141" y="544">timeoutevent$notify!</label><label kind="comments" /><nail x="133" y="576" /><nail x="133" y="544" /></transition><transition><source ref="id45" /><target ref="id44" /><label kind="synchronisation" x="141" y="480">timeoutevent$wait?</label><label kind="assignment" x="141" y="493">readyprocs++</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="133" y="512" /><nail x="133" y="480" /></transition><transition><source ref="id42" /><target ref="id1093" /><label kind="assignment" x="141" y="352">edge$notify_t = 0</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="133" y="384" /><nail x="133" y="352" /></transition><transition><source ref="id1093" /><target ref="id46" /><label kind="synchronisation" x="141" y="288">edge$notify!</label><label kind="comments" /><nail x="133" y="320" /><nail x="133" y="288" /></transition><transition><source ref="id46" /><target ref="id1094" /><label kind="assignment" x="141" y="224">change$notify_t = 0</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="133" y="256" /><nail x="133" y="224" /></transition><transition><source ref="id1094" /><target ref="id47" /><label kind="synchronisation" x="141" y="160">change$notify!</label><label kind="comments" /><nail x="133" y="192" /><nail x="133" y="160" /></transition></template><template><name>sc_clock$thread0$sensitiveTemp</name><parameter>broadcast chan &amp;sensitive</parameter><declaration /><location id="id67" x="0" y="16" /><location id="id68" x="0" y="80"><committed /></location><init ref="id67" /><transition><source ref="id68" /><target ref="id67" /><label kind="synchronisation" x="8" y="32">sensitive!</label><label kind="comments" /><nail x="0" y="64" /><nail x="0" y="32" /></transition></template><template><name>tlm2_master_to_ahb$b_transport</name><parameter>uint64 &amp;current_Address, unsigned_int &amp;current_DataLength, tlmdata_addr_ptr &amp;b_transport$param$tran, data_addr_ptr &amp;current_trans, unsigned_int &amp;m_txn_count, broadcast chan &amp;b_transport_finished_ev$wait, int_addr_ptr &amp;b_transport$param$t, chan &amp;b_transport$ctrl, unsigned_int &amp;master_id, unsigned_int &amp;current_Command</parameter><declaration>tlmdata_addr_ptr tran = NULL;
int_addr_ptr t = NULL;
unsigned_int cmd;
int addr;
unsigned_int_addr_ptr ptr = NULL;
unsigned_int len;
unsigned_int wid;
int_addr_ptr current_trans_type = NULL;
unsigned_int_addr_ptr current_burst_size = NULL;</declaration><location id="id527" x="258" y="16"><name x="282" y="8">init_location</name></location><location id="id528" x="386" y="95"><urgent /></location><location id="id530" x="386" y="191"><urgent /></location><location id="id531" x="722" y="255"><urgent /></location><location id="id532" x="1137" y="319"><urgent /></location><location id="id533" x="1631" y="383"><urgent /></location><location id="id534" x="1918" y="447"><urgent /></location><location id="id536" x="2349" y="513"><urgent /></location><location id="id537" x="2780" y="577"><urgent /></location><location id="id539" x="2310" y="1934"><urgent /></location><location id="id540" x="1918" y="1998"><urgent /></location><location id="id538" x="3099" y="1742"><urgent /></location><location id="id542" x="3270" y="1409"><urgent /></location><location id="id547" x="5908" y="1313"><urgent /></location><location id="id548" x="6256" y="1249"><urgent /></location><location id="id549" x="9364" y="1185"><urgent /></location><location id="id550" x="9787" y="1121"><urgent /></location><location id="id551" x="10210" y="1057"><urgent /></location><location id="id552" x="10633" y="993"><urgent /></location><location id="id553" x="11056" y="929"><urgent /></location><location id="id554" x="11479" y="865"><urgent /></location><location id="id555" x="11757" y="801"><urgent /></location><location id="id557" x="12186" y="673" /><location id="id558" x="12351" y="609"><urgent /></location><location id="id562" x="12868" y="223"><urgent /></location><location id="id543" x="3378" y="2414"><urgent /></location><location id="id568" x="3654" y="2254"><urgent /></location><location id="id569" x="4236" y="2190"><urgent /></location><location id="id570" x="4659" y="2126"><urgent /></location><location id="id571" x="5082" y="2062"><urgent /></location><location id="id572" x="5534" y="1998"><urgent /></location><location id="id573" x="5957" y="1934"><urgent /></location><location id="id574" x="6380" y="1870"><urgent /></location><location id="id575" x="6803" y="1806"><urgent /></location><location id="id576" x="7081" y="1742"><urgent /></location><location id="id578" x="7510" y="1614" /><location id="id579" x="7671" y="1550"><urgent /></location><location id="id583" x="8184" y="1441"><urgent /></location><location id="id564" x="1537" y="2478"><urgent /></location><location id="id529" x="6563" y="2542"><urgent /></location><location id="id935" x="1023" y="2382"><urgent /></location><location id="id936" x="12088" y="737"><urgent /></location><location id="id938" x="7412" y="1678"><urgent /></location><location id="id941" x="64" y="2608"><urgent /></location><location id="id1150" x="258" y="159"><name x="282" y="151">mem_access_fail_9</name><urgent /></location><location id="id1151" x="258" y="2350"><name x="282" y="2342">mem_access_fail_10</name><urgent /></location><location id="id1152" x="673" y="2318"><name x="697" y="2310">mem_access_fail_11</name><urgent /></location><location id="id1153" x="1088" y="2286"><name x="1112" y="2278">mem_access_fail_12</name><urgent /></location><location id="id1154" x="1503" y="2254"><name x="1527" y="2246">mem_access_fail_13</name><urgent /></location><location id="id1155" x="1918" y="1806"><name x="1942" y="1798">mem_access_fail_14</name><urgent /></location><location id="id1156" x="2446" y="1870"><name x="2470" y="1862">mem_access_fail_15</name><urgent /></location><location id="id1157" x="8313" y="1377"><name x="8337" y="1369">mem_access_fail_16</name><urgent /></location><location id="id1158" x="8744" y="1345"><name x="8768" y="1337">mem_access_fail_17</name><urgent /></location><location id="id1159" x="9364" y="1409"><name x="9388" y="1401">mem_access_fail_18</name><urgent /></location><location id="id1160" x="9787" y="1377"><name x="9811" y="1369">mem_access_fail_19</name><urgent /></location><location id="id1161" x="10210" y="1345"><name x="10234" y="1337">mem_access_fail_20</name><urgent /></location><location id="id1162" x="10633" y="1313"><name x="10657" y="1305">mem_access_fail_21</name><urgent /></location><location id="id1163" x="11056" y="1249"><name x="11080" y="1241">mem_access_fail_22</name><urgent /></location><location id="id1164" x="11479" y="1185"><name x="11503" y="1177">mem_access_fail_23</name><urgent /></location><location id="id1165" x="12740" y="1678"><name x="12764" y="1670">mem_access_fail_24</name><urgent /></location><location id="id1166" x="3805" y="2382"><name x="3829" y="2374">mem_access_fail_25</name><urgent /></location><location id="id1167" x="4236" y="2350"><name x="4260" y="2342">mem_access_fail_26</name><urgent /></location><location id="id1168" x="4659" y="2318"><name x="4683" y="2310">mem_access_fail_27</name><urgent /></location><location id="id1169" x="5082" y="2286"><name x="5106" y="2278">mem_access_fail_28</name><urgent /></location><location id="id1170" x="5534" y="2254"><name x="5558" y="2246">mem_access_fail_29</name><urgent /></location><location id="id1171" x="5957" y="2190"><name x="5981" y="2182">mem_access_fail_30</name><urgent /></location><location id="id1172" x="6380" y="2126"><name x="6404" y="2118">mem_access_fail_31</name><urgent /></location><location id="id1173" x="6803" y="2062"><name x="6827" y="2054">mem_access_fail_32</name><urgent /></location><location id="id1174" x="8056" y="2446"><name x="8080" y="2438">mem_access_fail_33</name><urgent /></location><location id="id1175" x="129" y="2414"><name x="153" y="2406">mem_access_fail_34</name><urgent /></location><init ref="id527" /><transition><source ref="id528" /><target ref="id530" /><label kind="guard" x="523" y="127">addr_is_valid_tlmdata(tran)</label><label kind="assignment" x="523" y="140">cmd = tlmdataMem[tran].command</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 13257, file: tlm2_master_to_ahb.cpp, line: 69</label><nail x="515" y="111" /><nail x="515" y="175" /></transition><transition><source ref="id530" /><target ref="id531" /><label kind="guard" x="523" y="207">addr_is_valid_tlmdata(tran)</label><label kind="assignment" x="523" y="220">addr = tlmdataMem[tran].address</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 13285, file: tlm2_master_to_ahb.cpp, line: 70</label><nail x="515" y="207" /><nail x="515" y="239" /></transition><transition><source ref="id531" /><target ref="id532" /><label kind="guard" x="938" y="271">addr_is_valid_tlmdata(tran)</label><label kind="assignment" x="938" y="284">ptr = tlmdataMem[tran].data_ptr</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 13313, file: tlm2_master_to_ahb.cpp, line: 71</label><nail x="930" y="271" /><nail x="930" y="303" /></transition><transition><source ref="id532" /><target ref="id533" /><label kind="guard" x="1353" y="335">addr_is_valid_tlmdata(tran)</label><label kind="assignment" x="1353" y="348">len = tlmdataMem[tran].data_length</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 13345, file: tlm2_master_to_ahb.cpp, line: 72</label><nail x="1345" y="335" /><nail x="1345" y="367" /></transition><transition><source ref="id533" /><target ref="id534" /><label kind="guard" x="1926" y="399">addr_is_valid_tlmdata(tran)</label><label kind="assignment" x="1926" y="412">wid = tlmdataMem[tran].streaming_width</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 13373, file: tlm2_master_to_ahb.cpp, line: 73</label><nail x="1918" y="399" /><nail x="1918" y="431" /></transition><transition><source ref="id534" /><target ref="id536" /><label kind="assignment" x="1926" y="463">current_trans_type = allocate_static_and_init_int(51),
current_burst_size = allocate_static_and_init_unsigned_int(1)</label><label kind="comments">Update:
nodeID: 13401, file: tlm2_master_to_ahb.cpp, line: 74,
nodeID: 13425, file: tlm2_master_to_ahb.cpp, line: 75</label><nail x="1918" y="463" /><nail x="1918" y="497" /></transition><transition><source ref="id536" /><target ref="id537" /><label kind="guard" x="2788" y="529">addr_is_valid_tlmdata(tran)</label><label kind="assignment" x="2788" y="542">tlmdataMem[tran].response_status = TLM_INCOMPLETE_RESPONSE</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 13453, file: tlm2_master_to_ahb.cpp, line: 77</label><nail x="2780" y="529" /><nail x="2780" y="561" /></transition><transition><source ref="id537" /><target ref="id539" /><label kind="guard" x="2711" y="1239">wid &lt; len</label><label kind="comments">Guard:
nodeID: 13478, file: tlm2_master_to_ahb.cpp, line: 83</label><nail x="2703" y="593" /><nail x="2703" y="1918" /></transition><transition><source ref="id539" /><target ref="id540" /><label kind="guard" x="1926" y="1950">addr_is_valid_tlmdata(tran)</label><label kind="assignment" x="1926" y="1963">tlmdataMem[tran].response_status = TLM_BURST_ERROR_RESPONSE</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 13502, file: tlm2_master_to_ahb.cpp, line: 85</label><nail x="1918" y="1950" /><nail x="1918" y="1982" /></transition><transition><source ref="id537" /><target ref="id538" /><label kind="guard" x="2954" y="1143">!(wid &lt; len)</label><label kind="comments">Guard:
nodeID: 13478, file: tlm2_master_to_ahb.cpp, line: 83</label><nail x="2946" y="593" /><nail x="2946" y="1726" /></transition><transition><source ref="id538" /><target ref="id542" /><label kind="guard" x="3046" y="1559">cmd == TLM_WRITE_COMMAND</label><label kind="comments">Guard:
nodeID: 13542, file: tlm2_master_to_ahb.cpp, line: 93</label><nail x="3038" y="1726" /><nail x="3038" y="1425" /></transition><transition><source ref="id542" /><target ref="id547" /><label kind="assignment" x="3511" y="1329">current_Address = addr,
current_DataLength = len,
current_Command = cmd,
current_trans = allocate_dynamic_data()</label><label kind="comments">Update:
nodeID: 13564, file: tlm2_master_to_ahb.cpp, line: 94,
nodeID: 13582, file: tlm2_master_to_ahb.cpp, line: 95,
nodeID: 13582, file: tlm2_master_to_ahb.cpp, line: 95,
nodeID: 13582, file: tlm2_master_to_ahb.cpp, line: 95</label><nail x="3503" y="1393" /><nail x="3503" y="1329" /></transition><transition><source ref="id547" /><target ref="id548" /><label kind="guard" x="3511" y="1265">addr_is_valid_data(current_trans)</label><label kind="assignment" x="3511" y="1278">dataMem[current_trans].address = addr</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 13651, file: tlm2_master_to_ahb.cpp, line: 100</label><nail x="3503" y="1297" /><nail x="3503" y="1265" /></transition><transition><source ref="id548" /><target ref="id549" /><label kind="guard" x="9017" y="1201">addr_is_valid_data(current_trans)</label><label kind="assignment" x="9017" y="1214">dataMem[current_trans].amba_id = master_id - 1</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 13673, file: tlm2_master_to_ahb.cpp, line: 101</label><nail x="9009" y="1233" /><nail x="9009" y="1201" /></transition><transition><source ref="id549" /><target ref="id550" /><label kind="guard" x="9372" y="1137">addr_is_valid_data(current_trans)</label><label kind="assignment" x="9372" y="1150">dataMem[current_trans].data_length = len</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 13704, file: tlm2_master_to_ahb.cpp, line: 102</label><nail x="9364" y="1169" /><nail x="9364" y="1137" /></transition><transition><source ref="id550" /><target ref="id551" /><label kind="guard" x="9795" y="1073">addr_is_valid_data(current_trans)</label><label kind="assignment" x="9795" y="1086">dataMem[current_trans].streaming_width = wid</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 13726, file: tlm2_master_to_ahb.cpp, line: 103</label><nail x="9787" y="1105" /><nail x="9787" y="1073" /></transition><transition><source ref="id551" /><target ref="id552" /><label kind="guard" x="10218" y="1009">addr_is_valid_data(current_trans)</label><label kind="assignment" x="10218" y="1022">dataMem[current_trans].command = cmd</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 13748, file: tlm2_master_to_ahb.cpp, line: 104</label><nail x="10210" y="1041" /><nail x="10210" y="1009" /></transition><transition><source ref="id552" /><target ref="id553" /><label kind="guard" x="10641" y="945">addr_is_valid_data(current_trans)</label><label kind="assignment" x="10641" y="958">dataMem[current_trans].data_ptr = ptr</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 13770, file: tlm2_master_to_ahb.cpp, line: 105</label><nail x="10633" y="977" /><nail x="10633" y="945" /></transition><transition><source ref="id553" /><target ref="id554" /><label kind="guard" x="11064" y="881">addr_is_valid_data(current_trans)</label><label kind="assignment" x="11064" y="894">dataMem[current_trans].trans_type = current_trans_type</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 13792, file: tlm2_master_to_ahb.cpp, line: 106</label><nail x="11056" y="913" /><nail x="11056" y="881" /></transition><transition><source ref="id554" /><target ref="id555" /><label kind="guard" x="11487" y="817">addr_is_valid_data(current_trans)</label><label kind="assignment" x="11487" y="830">dataMem[current_trans].burst_size = current_burst_size</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 13818, file: tlm2_master_to_ahb.cpp, line: 107</label><nail x="11479" y="849" /><nail x="11479" y="817" /></transition><transition><source ref="id558" /><target ref="id562" /><label kind="synchronisation" x="12478" y="377">activate?</label><label kind="assignment" x="12478" y="390">delete_dynamic_data(current_trans),
current_trans = NULL,
current_DataLength = 0,
m_txn_count = 0</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: 13943, file: tlm2_master_to_ahb.cpp, line: 116,
nodeID: 13943, file: tlm2_master_to_ahb.cpp, line: 116,
nodeID: 13943, file: tlm2_master_to_ahb.cpp, line: 116</label><nail x="12470" y="593" /><nail x="12470" y="239" /></transition><transition><source ref="id562" /><target ref="id529" /><label kind="guard" x="13005" y="1366">addr_is_valid_tlmdata(tran)</label><label kind="assignment" x="13005" y="1379">tlmdataMem[tran].response_status = TLM_OK_RESPONSE</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 14003, file: tlm2_master_to_ahb.cpp, line: 123</label><nail x="12997" y="239" /><nail x="12997" y="2526" /></transition><transition><source ref="id538" /><target ref="id543" /><label kind="guard" x="3261" y="2062">cmd == TLM_READ_COMMAND</label><label kind="comments">Guard:
nodeID: 14017, file: tlm2_master_to_ahb.cpp, line: 126</label><nail x="3253" y="1758" /><nail x="3253" y="2398" /></transition><transition><source ref="id543" /><target ref="id568" /><label kind="assignment" x="3511" y="2302">current_Address = addr,
current_DataLength = len,
current_Command = cmd,
current_trans = allocate_dynamic_data()</label><label kind="comments">Update:
nodeID: 14039, file: tlm2_master_to_ahb.cpp, line: 127,
nodeID: 14057, file: tlm2_master_to_ahb.cpp, line: 128,
nodeID: 14057, file: tlm2_master_to_ahb.cpp, line: 128,
nodeID: 14057, file: tlm2_master_to_ahb.cpp, line: 128</label><nail x="3503" y="2398" /><nail x="3503" y="2270" /></transition><transition><source ref="id568" /><target ref="id569" /><label kind="guard" x="3511" y="2206">addr_is_valid_data(current_trans)</label><label kind="assignment" x="3511" y="2219">dataMem[current_trans].address = current_Address</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 14127, file: tlm2_master_to_ahb.cpp, line: 134</label><nail x="3503" y="2238" /><nail x="3503" y="2206" /></transition><transition><source ref="id569" /><target ref="id570" /><label kind="guard" x="4244" y="2142">addr_is_valid_data(current_trans)</label><label kind="assignment" x="4244" y="2155">dataMem[current_trans].amba_id = master_id - 1</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 14149, file: tlm2_master_to_ahb.cpp, line: 135</label><nail x="4236" y="2174" /><nail x="4236" y="2142" /></transition><transition><source ref="id570" /><target ref="id571" /><label kind="guard" x="4667" y="2078">addr_is_valid_data(current_trans)</label><label kind="assignment" x="4667" y="2091">dataMem[current_trans].data_length = current_DataLength</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 14180, file: tlm2_master_to_ahb.cpp, line: 136</label><nail x="4659" y="2110" /><nail x="4659" y="2078" /></transition><transition><source ref="id571" /><target ref="id572" /><label kind="guard" x="5090" y="2014">addr_is_valid_data(current_trans)</label><label kind="assignment" x="5090" y="2027">dataMem[current_trans].streaming_width = current_DataLength</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 14202, file: tlm2_master_to_ahb.cpp, line: 137</label><nail x="5082" y="2046" /><nail x="5082" y="2014" /></transition><transition><source ref="id572" /><target ref="id573" /><label kind="guard" x="5542" y="1950">addr_is_valid_data(current_trans)</label><label kind="assignment" x="5542" y="1963">dataMem[current_trans].command = current_Command</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 14224, file: tlm2_master_to_ahb.cpp, line: 138</label><nail x="5534" y="1982" /><nail x="5534" y="1950" /></transition><transition><source ref="id573" /><target ref="id574" /><label kind="guard" x="5965" y="1886">addr_is_valid_data(current_trans)</label><label kind="assignment" x="5965" y="1899">dataMem[current_trans].data_ptr = ptr</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 14246, file: tlm2_master_to_ahb.cpp, line: 139</label><nail x="5957" y="1918" /><nail x="5957" y="1886" /></transition><transition><source ref="id574" /><target ref="id575" /><label kind="guard" x="6388" y="1822">addr_is_valid_data(current_trans)</label><label kind="assignment" x="6388" y="1835">dataMem[current_trans].trans_type = current_trans_type</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 14268, file: tlm2_master_to_ahb.cpp, line: 140</label><nail x="6380" y="1854" /><nail x="6380" y="1822" /></transition><transition><source ref="id575" /><target ref="id576" /><label kind="guard" x="6811" y="1758">addr_is_valid_data(current_trans)</label><label kind="assignment" x="6811" y="1771">dataMem[current_trans].burst_size = current_burst_size</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 14294, file: tlm2_master_to_ahb.cpp, line: 141</label><nail x="6803" y="1790" /><nail x="6803" y="1758" /></transition><transition><source ref="id579" /><target ref="id583" /><label kind="synchronisation" x="7794" y="1457">activate?</label><label kind="assignment" x="7794" y="1470">delete_dynamic_data(current_trans),
current_trans = NULL,
current_DataLength = 0,
m_txn_count = 0</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: 14475, file: tlm2_master_to_ahb.cpp, line: 150,
nodeID: 14475, file: tlm2_master_to_ahb.cpp, line: 150,
nodeID: 14475, file: tlm2_master_to_ahb.cpp, line: 150</label><nail x="7786" y="1534" /><nail x="7786" y="1457" /></transition><transition><source ref="id583" /><target ref="id529" /><label kind="guard" x="8321" y="1975">addr_is_valid_tlmdata(tran)</label><label kind="assignment" x="8321" y="1988">tlmdataMem[tran].response_status = TLM_OK_RESPONSE</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 14534, file: tlm2_master_to_ahb.cpp, line: 156</label><nail x="8313" y="1457" /><nail x="8313" y="2526" /></transition><transition><source ref="id538" /><target ref="id564" /><label kind="guard" x="2954" y="2093">!(cmd == TLM_WRITE_COMMAND)  &amp;&amp;
!(cmd == TLM_READ_COMMAND)</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="2946" y="1758" /><nail x="2946" y="2462" /></transition><transition><source ref="id564" /><target ref="id529" /><label kind="guard" x="137" y="2494">addr_is_valid_tlmdata(tran)</label><label kind="assignment" x="137" y="2507">tlmdataMem[tran].response_status = TLM_GENERIC_ERROR_RESPONSE</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 14564, file: tlm2_master_to_ahb.cpp, line: 160</label><nail x="129" y="2494" /><nail x="129" y="2526" /></transition><transition><source ref="id527" /><target ref="id528" /><label kind="synchronisation" x="266" y="32">b_transport$ctrl?</label><label kind="assignment" x="266" y="45">tran = b_transport$param$tran,
t = b_transport$param$t</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="258" y="32" /><nail x="258" y="79" /></transition><transition><source ref="id540" /><target ref="id935" /><label kind="assignment" x="1926" y="2173">empty_stack_int(current_trans_type),
empty_stack_unsigned_int(current_burst_size)</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="1918" y="2014" /><nail x="1918" y="2366" /></transition><transition><source ref="id935" /><target ref="id527" /><label kind="synchronisation" x="137" y="1183">b_transport$ctrl!</label><label kind="comments" /><nail x="129" y="2366" /><nail x="129" y="32" /></transition><transition><source ref="id555" /><target ref="id936" /><label kind="assignment" x="12044" y="753">readyprocs--</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="12036" y="785" /><nail x="12036" y="753" /></transition><transition><source ref="id936" /><target ref="id557" /><label kind="synchronisation" x="12148" y="689">deactivate!</label><label kind="comments" /><nail x="12140" y="721" /><nail x="12140" y="689" /></transition><transition><source ref="id557" /><target ref="id558" /><label kind="synchronisation" x="12241" y="625">b_transport_finished_ev$wait?</label><label kind="assignment" x="12241" y="638">readyprocs++</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="12233" y="657" /><nail x="12233" y="625" /></transition><transition><source ref="id576" /><target ref="id938" /><label kind="assignment" x="7368" y="1694">readyprocs--</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="7360" y="1726" /><nail x="7360" y="1694" /></transition><transition><source ref="id938" /><target ref="id578" /><label kind="synchronisation" x="7472" y="1630">deactivate!</label><label kind="comments" /><nail x="7464" y="1662" /><nail x="7464" y="1630" /></transition><transition><source ref="id578" /><target ref="id579" /><label kind="synchronisation" x="7565" y="1566">b_transport_finished_ev$wait?</label><label kind="assignment" x="7565" y="1579">readyprocs++</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="7557" y="1598" /><nail x="7557" y="1566" /></transition><transition><source ref="id529" /><target ref="id941" /><label kind="assignment" x="137" y="2558">empty_stack_int(current_trans_type),
empty_stack_unsigned_int(current_burst_size)</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="129" y="2558" /><nail x="129" y="2592" /></transition><transition><source ref="id941" /><target ref="id527" /><label kind="synchronisation" x="8" y="1296">b_transport$ctrl!</label><label kind="comments" /><nail x="0" y="2592" /><nail x="0" y="32" /></transition><transition><source ref="id528" /><target ref="id1150" /><label kind="guard" x="266" y="111">!(addr_is_valid_tlmdata(tran))</label><label kind="assignment" x="266" y="124">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="258" y="111" /><nail x="258" y="143" /></transition><transition><source ref="id530" /><target ref="id1151" /><label kind="guard" x="266" y="1254">!(addr_is_valid_tlmdata(tran))</label><label kind="assignment" x="266" y="1267">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="258" y="207" /><nail x="258" y="2334" /></transition><transition><source ref="id531" /><target ref="id1152" /><label kind="guard" x="681" y="1270">!(addr_is_valid_tlmdata(tran))</label><label kind="assignment" x="681" y="1283">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="673" y="271" /><nail x="673" y="2302" /></transition><transition><source ref="id532" /><target ref="id1153" /><label kind="guard" x="1096" y="1286">!(addr_is_valid_tlmdata(tran))</label><label kind="assignment" x="1096" y="1299">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="1088" y="335" /><nail x="1088" y="2270" /></transition><transition><source ref="id533" /><target ref="id1154" /><label kind="guard" x="1511" y="1302">!(addr_is_valid_tlmdata(tran))</label><label kind="assignment" x="1511" y="1315">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="1503" y="399" /><nail x="1503" y="2238" /></transition><transition><source ref="id536" /><target ref="id1155" /><label kind="guard" x="1926" y="1143">!(addr_is_valid_tlmdata(tran))</label><label kind="assignment" x="1926" y="1156">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="1918" y="529" /><nail x="1918" y="1790" /></transition><transition><source ref="id539" /><target ref="id1156" /><label kind="guard" x="2454" y="1886">!(addr_is_valid_tlmdata(tran))</label><label kind="assignment" x="2454" y="1899">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="2446" y="1918" /><nail x="2446" y="1886" /></transition><transition><source ref="id547" /><target ref="id1157" /><label kind="guard" x="8321" y="1329">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="8321" y="1342">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="8313" y="1329" /><nail x="8313" y="1361" /></transition><transition><source ref="id548" /><target ref="id1158" /><label kind="guard" x="8752" y="1281">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="8752" y="1294">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="8744" y="1265" /><nail x="8744" y="1329" /></transition><transition><source ref="id549" /><target ref="id1159" /><label kind="guard" x="9372" y="1281">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="9372" y="1294">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="9364" y="1201" /><nail x="9364" y="1393" /></transition><transition><source ref="id550" /><target ref="id1160" /><label kind="guard" x="9795" y="1233">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="9795" y="1246">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="9787" y="1137" /><nail x="9787" y="1361" /></transition><transition><source ref="id551" /><target ref="id1161" /><label kind="guard" x="10218" y="1185">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="10218" y="1198">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="10210" y="1073" /><nail x="10210" y="1329" /></transition><transition><source ref="id552" /><target ref="id1162" /><label kind="guard" x="10641" y="1137">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="10641" y="1150">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="10633" y="1009" /><nail x="10633" y="1297" /></transition><transition><source ref="id553" /><target ref="id1163" /><label kind="guard" x="11064" y="1073">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="11064" y="1086">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="11056" y="945" /><nail x="11056" y="1233" /></transition><transition><source ref="id554" /><target ref="id1164" /><label kind="guard" x="11487" y="1009">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="11487" y="1022">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="11479" y="881" /><nail x="11479" y="1169" /></transition><transition><source ref="id562" /><target ref="id1165" /><label kind="guard" x="12748" y="934">!(addr_is_valid_tlmdata(tran))</label><label kind="assignment" x="12748" y="947">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="12740" y="239" /><nail x="12740" y="1662" /></transition><transition><source ref="id568" /><target ref="id1166" /><label kind="guard" x="3813" y="2302">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="3813" y="2315">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="3805" y="2270" /><nail x="3805" y="2366" /></transition><transition><source ref="id569" /><target ref="id1167" /><label kind="guard" x="4244" y="2254">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="4244" y="2267">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="4236" y="2206" /><nail x="4236" y="2334" /></transition><transition><source ref="id570" /><target ref="id1168" /><label kind="guard" x="4667" y="2206">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="4667" y="2219">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="4659" y="2142" /><nail x="4659" y="2302" /></transition><transition><source ref="id571" /><target ref="id1169" /><label kind="guard" x="5090" y="2158">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="5090" y="2171">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="5082" y="2078" /><nail x="5082" y="2270" /></transition><transition><source ref="id572" /><target ref="id1170" /><label kind="guard" x="5542" y="2110">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="5542" y="2123">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="5534" y="2014" /><nail x="5534" y="2238" /></transition><transition><source ref="id573" /><target ref="id1171" /><label kind="guard" x="5965" y="2046">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="5965" y="2059">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="5957" y="1950" /><nail x="5957" y="2174" /></transition><transition><source ref="id574" /><target ref="id1172" /><label kind="guard" x="6388" y="1982">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="6388" y="1995">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="6380" y="1886" /><nail x="6380" y="2110" /></transition><transition><source ref="id575" /><target ref="id1173" /><label kind="guard" x="6811" y="1918">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="6811" y="1931">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="6803" y="1822" /><nail x="6803" y="2046" /></transition><transition><source ref="id583" /><target ref="id1174" /><label kind="guard" x="8064" y="1927">!(addr_is_valid_tlmdata(tran))</label><label kind="assignment" x="8064" y="1940">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="8056" y="1457" /><nail x="8056" y="2430" /></transition><transition><source ref="id564" /><target ref="id1175" /><label kind="guard" x="137" y="2430">!(addr_is_valid_tlmdata(tran))</label><label kind="assignment" x="137" y="2443">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="129" y="2462" /><nail x="129" y="2430" /></transition></template><template><name>tlm2_master_to_ahb$busGranted</name><parameter>chan &amp;startRequest$ctrl, chan &amp;busGranted$ctrl, data_addr_ptr &amp;current_trans, chan &amp;resumeRequest$ctrl, unsigned_int &amp;m_txn_count</parameter><declaration /><location id="id491" x="131" y="16"><name x="155" y="8">init_location</name></location><location id="id492" x="550" y="80"><urgent /></location><location id="id495" x="900" y="336"><urgent /></location><location id="id497" x="760" y="272" /><location id="id498" x="484" y="240"><urgent /></location><location id="id500" x="295" y="176"><urgent /></location><location id="id502" x="213" y="112" /><location id="id493" x="344" y="368"><urgent /></location><init ref="id491" /><transition><source ref="id491" /><target ref="id492" /><label kind="synchronisation" x="139" y="32">busGranted$ctrl?</label><label kind="comments" /><nail x="131" y="32" /><nail x="131" y="64" /></transition><transition><source ref="id492" /><target ref="id495" /><label kind="guard" x="977" y="192">m_txn_count == 0</label><label kind="comments">Guard:
nodeID: 12515, file: tlm2_master_to_ahb.cpp, line: 7</label><nail x="969" y="96" /><nail x="969" y="320" /></transition><transition><source ref="id495" /><target ref="id497" /><label kind="synchronisation" x="839" y="288">startRequest$ctrl!</label><label kind="comments" /><nail x="831" y="320" /><nail x="831" y="288" /></transition><transition><source ref="id497" /><target ref="id493" /><label kind="synchronisation" x="697" y="304">startRequest$ctrl?</label><label kind="comments" /><nail x="689" y="288" /><nail x="689" y="352" /></transition><transition><source ref="id492" /><target ref="id498" /><label kind="guard" x="682" y="144">!(m_txn_count == 0)</label><label kind="comments">Guard:
nodeID: 12515, file: tlm2_master_to_ahb.cpp, line: 7</label><nail x="674" y="96" /><nail x="674" y="224" /></transition><transition><source ref="id498" /><target ref="id500" /><label kind="guard" x="303" y="192">m_txn_count &lt; (dataMem[current_trans].data_length)</label><label kind="comments">Guard:
nodeID: 12547, file: tlm2_master_to_ahb.cpp, line: 9</label><nail x="295" y="224" /><nail x="295" y="192" /></transition><transition><source ref="id500" /><target ref="id502" /><label kind="synchronisation" x="303" y="128">resumeRequest$ctrl!</label><label kind="comments" /><nail x="295" y="160" /><nail x="295" y="128" /></transition><transition><source ref="id502" /><target ref="id493" /><label kind="synchronisation" x="139" y="224">resumeRequest$ctrl?</label><label kind="comments" /><nail x="131" y="128" /><nail x="131" y="352" /></transition><transition><source ref="id498" /><target ref="id493" /><label kind="guard" x="303" y="288">!(m_txn_count &lt; (dataMem[current_trans].data_length))</label><label kind="comments">Guard:
nodeID: 12547, file: tlm2_master_to_ahb.cpp, line: 9</label><nail x="295" y="256" /><nail x="295" y="352" /></transition><transition><source ref="id493" /><target ref="id491" /><label kind="synchronisation" x="8" y="176">busGranted$ctrl!</label><label kind="comments" /><nail x="0" y="352" /><nail x="0" y="32" /></transition></template><template><name>tlm2_master_to_ahb$busNotGranted</name><parameter>int_addr_ptr &amp;master_socket$nb_transport_fw$param$phase, data_addr_ptr &amp;master_socket$nb_transport_fw$param$tran, chan &amp;master_socket$nb_transport_fw$ctrl, int_addr_ptr &amp;master_socket$nb_transport_fw$param$t, chan &amp;busNotGranted$ctrl, tlm_sync_enum &amp;master_socket$nb_transport_fw$return, data_addr_ptr &amp;current_trans, bool &amp;m_bus_req_pending, bool &amp;m_bus_granted</parameter><declaration>int_addr_ptr ph = NULL;
tlm_sync_enum retval;
int_addr_ptr delay = NULL;</declaration><location id="id503" x="155" y="16"><name x="179" y="8">init_location</name></location><location id="id506" x="871" y="80"><urgent /></location><location id="id508" x="1116" y="240"><urgent /></location><location id="id511" x="1116" y="400" /><location id="id512" x="1018" y="509"><urgent /></location><location id="id514" x="712" y="208"><urgent /></location><location id="id517" x="444" y="144"><urgent /></location><location id="id520" x="561" y="400"><urgent /></location><location id="id522" x="386" y="573"><urgent /></location><location id="id513" x="548" y="637"><urgent /></location><location id="id515" x="712" y="573"><urgent /></location><location id="id507" x="793" y="701"><urgent /></location><location id="id505" x="0" y="112"><urgent /></location><location id="id1100" x="1116" y="336"><urgent /></location><init ref="id503" /><transition><source ref="id503" /><target ref="id506" /><label kind="synchronisation" x="163" y="32">busNotGranted$ctrl?</label><label kind="assignment" x="163" y="45">delay = allocate_static_and_init_int(0)</label><label kind="comments">Update:
nodeID: 12620, file: tlm2_master_to_ahb.cpp, line: 18</label><nail x="155" y="32" /><nail x="155" y="64" /></transition><transition><source ref="id506" /><target ref="id508" /><label kind="guard" x="1124" y="144">m_bus_req_pending == false</label><label kind="comments">Guard:
nodeID: 12661, file: tlm2_master_to_ahb.cpp, line: 21</label><nail x="1116" y="96" /><nail x="1116" y="224" /></transition><transition><source ref="id508" /><target ref="id1100" /><label kind="assignment" x="1124" y="256">ph = allocate_static_and_init_int(60),
master_socket$nb_transport_fw$param$tran = current_trans,
master_socket$nb_transport_fw$param$phase = ph,
master_socket$nb_transport_fw$param$t = delay</label><label kind="comments">Update:
nodeID: 12747, file: tlm2_master_to_ahb.cpp, line: 28,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="1116" y="256" /><nail x="1116" y="320" /></transition><transition><source ref="id512" /><target ref="id514" /><label kind="guard" x="928" y="342">retval == TLM_UPDATED</label><label kind="comments">Guard:
nodeID: 12827, file: tlm2_master_to_ahb.cpp, line: 32</label><nail x="920" y="493" /><nail x="920" y="224" /></transition><transition><source ref="id514" /><target ref="id517" /><label kind="guard" x="720" y="160">intMem[ph] == 61</label><label kind="comments">Guard:
nodeID: 12853, file: tlm2_master_to_ahb.cpp, line: 34</label><nail x="712" y="192" /><nail x="712" y="160" /></transition><transition><source ref="id517" /><target ref="id513" /><label kind="assignment" x="184" y="373">m_bus_granted = true,
m_bus_req_pending = false</label><label kind="comments">Update:
nodeID: 12873, file: tlm2_master_to_ahb.cpp, line: 36,
nodeID: 12891, file: tlm2_master_to_ahb.cpp, line: 37</label><nail x="176" y="160" /><nail x="176" y="621" /></transition><transition><source ref="id514" /><target ref="id520" /><label kind="guard" x="569" y="288">!(intMem[ph] == 61)</label><label kind="comments">Guard:
nodeID: 12853, file: tlm2_master_to_ahb.cpp, line: 34</label><nail x="561" y="224" /><nail x="561" y="384" /></transition><transition><source ref="id520" /><target ref="id522" /><label kind="guard" x="394" y="470">intMem[ph] == 62</label><label kind="comments">Guard:
nodeID: 12975, file: tlm2_master_to_ahb.cpp, line: 40</label><nail x="386" y="416" /><nail x="386" y="557" /></transition><transition><source ref="id522" /><target ref="id513" /><label kind="assignment" x="394" y="589">m_bus_granted = false</label><label kind="comments">Update:
nodeID: 12995, file: tlm2_master_to_ahb.cpp, line: 42</label><nail x="386" y="589" /><nail x="386" y="621" /></transition><transition><source ref="id520" /><target ref="id513" /><label kind="guard" x="569" y="502">!(intMem[ph] == 62)</label><label kind="comments">Guard:
nodeID: 12975, file: tlm2_master_to_ahb.cpp, line: 40</label><nail x="561" y="416" /><nail x="561" y="621" /></transition><transition><source ref="id512" /><target ref="id515" /><label kind="guard" x="720" y="525">retval == TLM_ACCEPTED</label><label kind="comments">Guard:
nodeID: 13071, file: tlm2_master_to_ahb.cpp, line: 47</label><nail x="712" y="525" /><nail x="712" y="557" /></transition><transition><source ref="id515" /><target ref="id513" /><label kind="assignment" x="720" y="589">m_bus_req_pending = true</label><label kind="comments">Update:
nodeID: 13098, file: tlm2_master_to_ahb.cpp, line: 50</label><nail x="712" y="589" /><nail x="712" y="621" /></transition><transition><source ref="id512" /><target ref="id513" /><label kind="guard" x="928" y="556">!(retval == TLM_UPDATED)  &amp;&amp;
!(retval == TLM_ACCEPTED)</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="920" y="525" /><nail x="920" y="621" /></transition><transition><source ref="id513" /><target ref="id507" /><label kind="assignment" x="184" y="653">empty_stack_int(ph)</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="176" y="653" /><nail x="176" y="685" /></transition><transition><source ref="id506" /><target ref="id507" /><label kind="guard" x="1595" y="374">!(m_bus_req_pending == false)</label><label kind="comments">Guard:
nodeID: 12661, file: tlm2_master_to_ahb.cpp, line: 21</label><nail x="1587" y="96" /><nail x="1587" y="685" /></transition><transition><source ref="id507" /><target ref="id505" /><label kind="assignment" x="8" y="390">empty_stack_int(delay)</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="0" y="685" /><nail x="0" y="128" /></transition><transition><source ref="id505" /><target ref="id503" /><label kind="synchronisation" x="8" y="48">busNotGranted$ctrl!</label><label kind="comments" /><nail x="0" y="96" /><nail x="0" y="32" /></transition><transition><source ref="id1100" /><target ref="id511" /><label kind="synchronisation" x="1124" y="352">master_socket$nb_transport_fw$ctrl!</label><label kind="comments" /><nail x="1116" y="352" /><nail x="1116" y="384" /></transition><transition><source ref="id511" /><target ref="id512" /><label kind="synchronisation" x="1124" y="416">master_socket$nb_transport_fw$ctrl?</label><label kind="assignment" x="1124" y="429">master_socket$nb_transport_fw$param$tran = NULL,
master_socket$nb_transport_fw$param$phase = NULL,
master_socket$nb_transport_fw$param$t = NULL,
retval = master_socket$nb_transport_fw$return</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="1116" y="416" /><nail x="1116" y="493" /></transition></template><template><name>tlm2_master_to_ahb$clock_tick</name><parameter>chan &amp;requestProcess$ctrl, chan &amp;clock_tick$ctrl, chan &amp;dataProcess$ctrl</parameter><declaration /><location id="id587" x="119" y="16"><name x="143" y="8">init_location</name></location><location id="id588" x="149" y="80"><urgent /></location><location id="id590" x="0" y="240"><urgent /></location><location id="id591" x="90" y="304" /><location id="id593" x="0" y="176" /><location id="id589" x="0" y="112"><urgent /></location><init ref="id587" /><transition><source ref="id587" /><target ref="id588" /><label kind="synchronisation" x="127" y="32">clock_tick$ctrl?</label><label kind="comments" /><nail x="119" y="32" /><nail x="119" y="64" /></transition><transition><source ref="id588" /><target ref="id591" /><label kind="synchronisation" x="188" y="176">dataProcess$ctrl!</label><label kind="comments" /><nail x="180" y="96" /><nail x="180" y="288" /></transition><transition><source ref="id591" /><target ref="id590" /><label kind="synchronisation" x="8" y="256">dataProcess$ctrl?</label><label kind="comments" /><nail x="0" y="288" /><nail x="0" y="256" /></transition><transition><source ref="id590" /><target ref="id593" /><label kind="synchronisation" x="8" y="192">requestProcess$ctrl!</label><label kind="comments" /><nail x="0" y="224" /><nail x="0" y="192" /></transition><transition><source ref="id593" /><target ref="id589" /><label kind="synchronisation" x="8" y="128">requestProcess$ctrl?</label><label kind="comments" /><nail x="0" y="160" /><nail x="0" y="128" /></transition><transition><source ref="id589" /><target ref="id587" /><label kind="synchronisation" x="8" y="48">clock_tick$ctrl!</label><label kind="comments" /><nail x="0" y="96" /><nail x="0" y="32" /></transition></template><template><name>tlm2_master_to_ahb$dataProcess</name><parameter>unsigned_int &amp;current_DataLength, chan &amp;sendData$ctrl, chan &amp;dataProcess$ctrl, bool &amp;m_restart_pending_req, bool &amp;m_request_pending, bool &amp;m_data_pending, data_addr_ptr &amp;current_trans, unsigned_int &amp;m_txn_count, unsigned_int &amp;m_data_count</parameter><declaration>unsigned_int burst_count;
bool first_req_accepted;
bool sec_req_available;</declaration><location id="id594" x="417" y="16"><name x="441" y="8">init_location</name></location><location id="id595" x="1319" y="80"><urgent /></location><location id="id598" x="1111" y="850"><urgent /></location><location id="id597" x="1099" y="754"><urgent /></location><location id="id600" x="208" y="818"><urgent /></location><location id="id599" x="369" y="690"><urgent /></location><location id="id602" x="783" y="626"><urgent /></location><location id="id604" x="1286" y="562"><urgent /></location><location id="id605" x="1105" y="466"><urgent /></location><location id="id607" x="1189" y="370"><urgent /></location><location id="id609" x="1350" y="304"><urgent /></location><location id="id611" x="1427" y="240"><urgent /></location><location id="id613" x="1427" y="176" /><location id="id596" x="852" y="112"><urgent /></location><location id="id1141" x="1467" y="498"><name x="1491" y="490">mem_access_fail_0</name><urgent /></location><init ref="id594" /><transition><source ref="id594" /><target ref="id595" /><label kind="synchronisation" x="425" y="32">dataProcess$ctrl?</label><label kind="comments" /><nail x="417" y="32" /><nail x="417" y="64" /></transition><transition><source ref="id595" /><target ref="id598" /><label kind="guard" x="2230" y="449">m_data_count == current_DataLength</label><label kind="comments">Guard:
nodeID: 14657, file: tlm2_master_to_ahb.cpp, line: 176</label><nail x="2222" y="96" /><nail x="2222" y="834" /></transition><transition><source ref="id598" /><target ref="id594" /><label kind="synchronisation" x="8" y="417">dataProcess$ctrl!</label><label kind="comments" /><nail x="0" y="834" /><nail x="0" y="32" /></transition><transition><source ref="id595" /><target ref="id597" /><label kind="guard" x="1929" y="401">!(m_data_count == current_DataLength)</label><label kind="comments">Guard:
nodeID: 14657, file: tlm2_master_to_ahb.cpp, line: 176</label><nail x="1921" y="96" /><nail x="1921" y="738" /></transition><transition><source ref="id597" /><target ref="id600" /><label kind="guard" x="286" y="770">m_restart_pending_req</label><label kind="comments">Guard:
nodeID: 14688, file: tlm2_master_to_ahb.cpp, line: 181</label><nail x="278" y="770" /><nail x="278" y="802" /></transition><transition><source ref="id600" /><target ref="id594" /><label kind="synchronisation" x="147" y="401">dataProcess$ctrl!</label><label kind="comments" /><nail x="139" y="802" /><nail x="139" y="32" /></transition><transition><source ref="id597" /><target ref="id599" /><label kind="guard" x="286" y="706">!(m_restart_pending_req)</label><label kind="comments">Guard:
nodeID: 14688, file: tlm2_master_to_ahb.cpp, line: 181</label><nail x="278" y="738" /><nail x="278" y="706" /></transition><transition><source ref="id599" /><target ref="id602" /><label kind="guard" x="469" y="642">current_trans != NULL</label><label kind="comments">Guard:
nodeID: 14715, file: tlm2_master_to_ahb.cpp, line: 186</label><nail x="461" y="674" /><nail x="461" y="642" /></transition><transition><source ref="id602" /><target ref="id604" /><label kind="guard" x="1113" y="578">dataMem[current_trans].command == TLM_WRITE_COMMAND</label><label kind="comments">Guard:
nodeID: 14740, file: tlm2_master_to_ahb.cpp, line: 188</label><nail x="1105" y="610" /><nail x="1105" y="578" /></transition><transition><source ref="id604" /><target ref="id605" /><label kind="guard" x="1113" y="498">addr_is_valid_data(current_trans)</label><label kind="assignment" x="1113" y="511">burst_count = dataMem[current_trans].data_length</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 14770, file: tlm2_master_to_ahb.cpp, line: 191</label><nail x="1105" y="546" /><nail x="1105" y="482" /></transition><transition><source ref="id605" /><target ref="id607" /><label kind="assignment" x="1113" y="386">first_req_accepted = (m_txn_count == 1  &amp;&amp;
(m_request_pending == false)),
sec_req_available = (m_txn_count &gt; 1  &amp;&amp;
m_data_count &lt; burst_count)</label><label kind="comments">Update:
nodeID: 14799, file: tlm2_master_to_ahb.cpp, line: 193,
nodeID: 14855, file: tlm2_master_to_ahb.cpp, line: 194</label><nail x="1105" y="450" /><nail x="1105" y="386" /></transition><transition><source ref="id607" /><target ref="id609" /><label kind="guard" x="1281" y="320">sec_req_available  ||
first_req_accepted</label><label kind="comments">Guard:
nodeID: 14908, file: tlm2_master_to_ahb.cpp, line: 196</label><nail x="1273" y="354" /><nail x="1273" y="320" /></transition><transition><source ref="id609" /><target ref="id611" /><label kind="guard" x="1435" y="256">!m_data_pending</label><label kind="comments">Guard:
nodeID: 14922, file: tlm2_master_to_ahb.cpp, line: 198</label><nail x="1427" y="288" /><nail x="1427" y="256" /></transition><transition><source ref="id611" /><target ref="id613" /><label kind="synchronisation" x="1435" y="192">sendData$ctrl!</label><label kind="comments" /><nail x="1427" y="224" /><nail x="1427" y="192" /></transition><transition><source ref="id613" /><target ref="id596" /><label kind="synchronisation" x="1435" y="128">sendData$ctrl?</label><label kind="comments" /><nail x="1427" y="160" /><nail x="1427" y="128" /></transition><transition><source ref="id609" /><target ref="id596" /><label kind="guard" x="1281" y="192">!(!m_data_pending)</label><label kind="comments">Guard:
nodeID: 14922, file: tlm2_master_to_ahb.cpp, line: 198</label><nail x="1273" y="288" /><nail x="1273" y="128" /></transition><transition><source ref="id607" /><target ref="id596" /><label kind="guard" x="1113" y="224">!(sec_req_available  ||
first_req_accepted)</label><label kind="comments">Guard:
nodeID: 14908, file: tlm2_master_to_ahb.cpp, line: 196</label><nail x="1105" y="354" /><nail x="1105" y="128" /></transition><transition><source ref="id602" /><target ref="id596" /><label kind="guard" x="637" y="353">!(dataMem[current_trans].command == TLM_WRITE_COMMAND)</label><label kind="comments">Guard:
nodeID: 14740, file: tlm2_master_to_ahb.cpp, line: 188</label><nail x="629" y="610" /><nail x="629" y="128" /></transition><transition><source ref="id599" /><target ref="id596" /><label kind="guard" x="286" y="385">!(current_trans != NULL)</label><label kind="comments">Guard:
nodeID: 14715, file: tlm2_master_to_ahb.cpp, line: 186</label><nail x="278" y="674" /><nail x="278" y="128" /></transition><transition><source ref="id596" /><target ref="id594" /><label kind="synchronisation" x="286" y="48">dataProcess$ctrl!</label><label kind="comments" /><nail x="278" y="96" /><nail x="278" y="32" /></transition><transition><source ref="id604" /><target ref="id1141" /><label kind="guard" x="1475" y="514">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="1475" y="527">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="1467" y="546" /><nail x="1467" y="514" /></transition></template><template><name>tlm2_master_to_ahb$nb_transport_bw</name><parameter>chan &amp;m_peq$notify$ctrl, int &amp;m_peq$peq_element$param$delay, int_addr_ptr &amp;nb_transport_bw$param$t, tlm_sync_enum &amp;nb_transport_bw$return, chan &amp;nb_transport_bw$ctrl, int_addr_ptr &amp;m_peq$peq_element$param$phase, int_addr_ptr &amp;nb_transport_bw$param$phase, data_addr_ptr &amp;m_peq$peq_element$param$trans, data_addr_ptr &amp;nb_transport_bw$param$tran</parameter><declaration>data_addr_ptr tran = NULL;
int_addr_ptr phase = NULL;
int_addr_ptr t = NULL;</declaration><location id="id620" x="166" y="16"><name x="190" y="8">init_location</name></location><location id="id621" x="294" y="110"><urgent /></location><location id="id623" x="166" y="336"><urgent /></location><location id="id928" x="294" y="206"><urgent /></location><location id="id930" x="166" y="272"><urgent /></location><location id="id931" x="83" y="400"><urgent /></location><location id="id1149" x="166" y="174"><name x="190" y="166">mem_access_fail_8</name><urgent /></location><init ref="id620" /><transition><source ref="id623" /><target ref="id931" /><label kind="synchronisation" x="174" y="352">m_peq$notify$ctrl?</label><label kind="assignment" x="174" y="365">nb_transport_bw$return = TLM_ACCEPTED</label><label kind="comments">Update:
nodeID: 15157, file: tlm2_master_to_ahb.cpp, line: 224</label><nail x="166" y="352" /><nail x="166" y="384" /></transition><transition><source ref="id620" /><target ref="id621" /><label kind="synchronisation" x="174" y="32">nb_transport_bw$ctrl?</label><label kind="assignment" x="174" y="45">tran = nb_transport_bw$param$tran,
phase = nb_transport_bw$param$phase,
t = nb_transport_bw$param$t</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="166" y="32" /><nail x="166" y="94" /></transition><transition><source ref="id621" /><target ref="id928" /><label kind="guard" x="431" y="142">addr_is_valid_int(t)</label><label kind="assignment" x="431" y="155">m_peq$peq_element$param$delay = intMem[t]</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="423" y="126" /><nail x="423" y="190" /></transition><transition><source ref="id928" /><target ref="id930" /><label kind="assignment" x="174" y="222">m_peq$peq_element$param$trans = tran,
m_peq$peq_element$param$phase = phase</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="166" y="222" /><nail x="166" y="256" /></transition><transition><source ref="id930" /><target ref="id623" /><label kind="synchronisation" x="174" y="288">m_peq$notify$ctrl!</label><label kind="comments" /><nail x="166" y="288" /><nail x="166" y="320" /></transition><transition><source ref="id931" /><target ref="id620" /><label kind="synchronisation" x="8" y="192">nb_transport_bw$ctrl!</label><label kind="comments" /><nail x="0" y="384" /><nail x="0" y="32" /></transition><transition><source ref="id621" /><target ref="id1149" /><label kind="guard" x="174" y="126">!(addr_is_valid_int(t))</label><label kind="assignment" x="174" y="139">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="166" y="126" /><nail x="166" y="158" /></transition></template><template><name>tlm2_master_to_ahb$peq_cb</name><parameter>chan &amp;requestProcess$ctrl, chan &amp;b_transport_finished_ev$notify_imm, int_addr_ptr &amp;peq_cb$param$phase, chan &amp;dataProcess$ctrl, bool &amp;m_restart_pending_req, bool &amp;m_request_pending, chan &amp;peq_cb$ctrl, chan &amp;receiveData$ctrl, data_addr_ptr &amp;peq_cb$param$tran, bool &amp;m_data_pending, data_addr_ptr &amp;current_trans, unsigned_int &amp;m_txn_count, bool &amp;m_bus_req_pending, bool &amp;m_bus_granted, unsigned_int &amp;m_data_count, data_addr_ptr &amp;receiveData$param$tran</parameter><declaration>data_addr_ptr tran = NULL;
int_addr_ptr phase = NULL;
unsigned_int_addr_ptr size = NULL;
unsigned_int burst_len;</declaration><location id="id628" x="206" y="16"><name x="230" y="8">init_location</name></location><location id="id632" x="2187" y="125"><urgent /></location><location id="id634" x="605" y="189"><urgent /></location><location id="id635" x="103" y="157"><urgent /></location><location id="id636" x="226" y="972" /><location id="id637" x="2443" y="221"><urgent /></location><location id="id639" x="718" y="285"><urgent /></location><location id="id641" x="3067" y="317"><urgent /></location><location id="id643" x="2404" y="381"><urgent /></location><location id="id644" x="2201" y="541"><urgent /></location><location id="id645" x="1657" y="620"><urgent /></location><location id="id646" x="1244" y="684"><urgent /></location><location id="id648" x="923" y="748"><urgent /></location><location id="id650" x="1270" y="780"><urgent /></location><location id="id652" x="1195" y="844" /><location id="id653" x="3364" y="477"><urgent /></location><location id="id655" x="2876" y="541"><urgent /></location><location id="id657" x="2689" y="607"><urgent /></location><location id="id659" x="2607" y="671" /><location id="id660" x="3279" y="748"><urgent /></location><location id="id662" x="3368" y="812"><urgent /></location><location id="id666" x="3257" y="908"><urgent /></location><location id="id668" x="3356" y="972"><urgent /></location><location id="id630" x="1678" y="1038"><urgent /></location><location id="id910" x="417" y="908"><urgent /></location><location id="id1142" x="2607" y="445"><name x="2631" y="437">mem_access_fail_1</name><urgent /></location><location id="id1143" x="2201" y="684"><name x="2225" y="676">mem_access_fail_2</name><urgent /></location><init ref="id628" /><transition><source ref="id632" /><target ref="id634" /><label kind="guard" x="734" y="141">intMem[phase] == BEGIN_RESP</label><label kind="comments">Guard:
nodeID: 15370, file: tlm2_master_to_ahb.cpp, line: 243</label><nail x="726" y="141" /><nail x="726" y="173" /></transition><transition><source ref="id635" /><target ref="id628" /><label kind="synchronisation" x="111" y="70">peq_cb$ctrl!</label><label kind="comments" /><nail x="103" y="141" /><nail x="103" y="32" /></transition><transition><source ref="id632" /><target ref="id637" /><label kind="guard" x="4177" y="157">!(intMem[phase] == BEGIN_RESP)</label><label kind="comments">Guard:
nodeID: 15370, file: tlm2_master_to_ahb.cpp, line: 243</label><nail x="4169" y="141" /><nail x="4169" y="205" /></transition><transition><source ref="id637" /><target ref="id639" /><label kind="guard" x="726" y="237">intMem[phase] == END_REQ</label><label kind="comments">Guard:
nodeID: 15424, file: tlm2_master_to_ahb.cpp, line: 249</label><nail x="718" y="237" /><nail x="718" y="269" /></transition><transition><source ref="id639" /><target ref="id630" /><label kind="assignment" x="726" y="645">m_request_pending = false</label><label kind="comments">Update:
nodeID: 15510, file: tlm2_master_to_ahb.cpp, line: 252</label><nail x="718" y="301" /><nail x="718" y="1022" /></transition><transition><source ref="id637" /><target ref="id641" /><label kind="guard" x="3941" y="253">!(intMem[phase] == END_REQ)</label><label kind="comments">Guard:
nodeID: 15424, file: tlm2_master_to_ahb.cpp, line: 249</label><nail x="3933" y="237" /><nail x="3933" y="301" /></transition><transition><source ref="id641" /><target ref="id643" /><label kind="guard" x="2209" y="333">intMem[phase] == 43</label><label kind="comments">Guard:
nodeID: 15530, file: tlm2_master_to_ahb.cpp, line: 255</label><nail x="2201" y="333" /><nail x="2201" y="365" /></transition><transition><source ref="id643" /><target ref="id644" /><label kind="guard" x="2209" y="445">addr_is_valid_data(tran)</label><label kind="assignment" x="2209" y="458">size = dataMem[tran].burst_size</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 15615, file: tlm2_master_to_ahb.cpp, line: 259</label><nail x="2201" y="397" /><nail x="2201" y="525" /></transition><transition><source ref="id644" /><target ref="id645" /><label kind="guard" x="1757" y="557">addr_is_valid_data(tran)  &amp;&amp;
addr_is_valid_unsigned_int(size)</label><label kind="assignment" x="1757" y="585">burst_len = dataMem[tran].data_length / unsigned_intMem[size]</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 15637, file: tlm2_master_to_ahb.cpp, line: 260</label><nail x="1749" y="557" /><nail x="1749" y="604" /></transition><transition><source ref="id645" /><target ref="id646" /><label kind="assignment" x="1573" y="636">m_data_pending = false</label><label kind="comments">Update:
nodeID: 15675, file: tlm2_master_to_ahb.cpp, line: 262</label><nail x="1565" y="636" /><nail x="1565" y="668" /></transition><transition><source ref="id646" /><target ref="id648" /><label kind="guard" x="931" y="700">m_data_count == burst_len</label><label kind="comments">Guard:
nodeID: 15775, file: tlm2_master_to_ahb.cpp, line: 265</label><nail x="923" y="700" /><nail x="923" y="732" /></transition><transition><source ref="id648" /><target ref="id630" /><label kind="synchronisation" x="931" y="877">b_transport_finished_ev$notify_imm!</label><label kind="comments" /><nail x="923" y="764" /><nail x="923" y="1022" /></transition><transition><source ref="id646" /><target ref="id650" /><label kind="guard" x="1354" y="716">!(m_data_count == burst_len)</label><label kind="comments">Guard:
nodeID: 15775, file: tlm2_master_to_ahb.cpp, line: 265</label><nail x="1346" y="700" /><nail x="1346" y="764" /></transition><transition><source ref="id650" /><target ref="id652" /><label kind="synchronisation" x="1203" y="796">dataProcess$ctrl!</label><label kind="comments" /><nail x="1195" y="796" /><nail x="1195" y="828" /></transition><transition><source ref="id652" /><target ref="id630" /><label kind="synchronisation" x="1203" y="925">dataProcess$ctrl?</label><label kind="comments" /><nail x="1195" y="860" /><nail x="1195" y="1022" /></transition><transition><source ref="id641" /><target ref="id653" /><label kind="guard" x="3756" y="381">!(intMem[phase] == 43)</label><label kind="comments">Guard:
nodeID: 15530, file: tlm2_master_to_ahb.cpp, line: 255</label><nail x="3748" y="333" /><nail x="3748" y="461" /></transition><transition><source ref="id653" /><target ref="id655" /><label kind="guard" x="2989" y="493">intMem[phase] == 61</label><label kind="comments">Guard:
nodeID: 15813, file: tlm2_master_to_ahb.cpp, line: 274</label><nail x="2981" y="493" /><nail x="2981" y="525" /></transition><transition><source ref="id655" /><target ref="id657" /><label kind="assignment" x="2779" y="557">m_bus_granted = true,
m_bus_req_pending = false</label><label kind="comments">Update:
nodeID: 15897, file: tlm2_master_to_ahb.cpp, line: 277,
nodeID: 15915, file: tlm2_master_to_ahb.cpp, line: 278</label><nail x="2771" y="557" /><nail x="2771" y="591" /></transition><transition><source ref="id657" /><target ref="id659" /><label kind="synchronisation" x="2615" y="623">requestProcess$ctrl!</label><label kind="comments" /><nail x="2607" y="623" /><nail x="2607" y="655" /></transition><transition><source ref="id659" /><target ref="id630" /><label kind="synchronisation" x="2615" y="838">requestProcess$ctrl?</label><label kind="comments" /><nail x="2607" y="687" /><nail x="2607" y="1022" /></transition><transition><source ref="id653" /><target ref="id660" /><label kind="guard" x="3151" y="596">!(intMem[phase] == 61)</label><label kind="comments">Guard:
nodeID: 15813, file: tlm2_master_to_ahb.cpp, line: 274</label><nail x="3143" y="493" /><nail x="3143" y="732" /></transition><transition><source ref="id660" /><target ref="id662" /><label kind="guard" x="3586" y="764">intMem[phase] == 62</label><label kind="comments">Guard:
nodeID: 15945, file: tlm2_master_to_ahb.cpp, line: 282</label><nail x="3578" y="764" /><nail x="3578" y="796" /></transition><transition><source ref="id662" /><target ref="id666" /><label kind="assignment" x="3166" y="828">m_bus_granted = false,
m_bus_req_pending = false,
m_data_pending = false,
m_request_pending = false</label><label kind="comments">Update:
nodeID: 16030, file: tlm2_master_to_ahb.cpp, line: 286,
nodeID: 16048, file: tlm2_master_to_ahb.cpp, line: 287,
nodeID: 16048, file: tlm2_master_to_ahb.cpp, line: 287,
nodeID: 16048, file: tlm2_master_to_ahb.cpp, line: 287</label><nail x="3158" y="828" /><nail x="3158" y="892" /></transition><transition><source ref="id666" /><target ref="id668" /><label kind="guard" x="3364" y="924">m_txn_count &lt; burst_len</label><label kind="comments">Guard:
nodeID: 16102, file: tlm2_master_to_ahb.cpp, line: 291</label><nail x="3356" y="924" /><nail x="3356" y="956" /></transition><transition><source ref="id668" /><target ref="id630" /><label kind="assignment" x="3364" y="988">current_trans = tran,
m_restart_pending_req = true</label><label kind="comments">Update:
nodeID: 16123, file: tlm2_master_to_ahb.cpp, line: 293,
nodeID: 16146, file: tlm2_master_to_ahb.cpp, line: 295</label><nail x="3356" y="988" /><nail x="3356" y="1022" /></transition><transition><source ref="id666" /><target ref="id630" /><label kind="guard" x="3166" y="957">!(m_txn_count &lt; burst_len)</label><label kind="comments">Guard:
nodeID: 16102, file: tlm2_master_to_ahb.cpp, line: 291</label><nail x="3158" y="924" /><nail x="3158" y="1022" /></transition><transition><source ref="id660" /><target ref="id630" /><label kind="guard" x="2989" y="877">!(intMem[phase] == 62)</label><label kind="comments">Guard:
nodeID: 15945, file: tlm2_master_to_ahb.cpp, line: 282</label><nail x="2981" y="764" /><nail x="2981" y="1022" /></transition><transition><source ref="id630" /><target ref="id628" /><label kind="synchronisation" x="8" y="511">peq_cb$ctrl!</label><label kind="comments" /><nail x="0" y="1022" /><nail x="0" y="32" /></transition><transition><source ref="id628" /><target ref="id632" /><label kind="synchronisation" x="214" y="32">peq_cb$ctrl?</label><label kind="assignment" x="214" y="45">tran = peq_cb$param$tran,
phase = peq_cb$param$phase,
size = NULL,
burst_len = 0</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="206" y="32" /><nail x="206" y="109" /></transition><transition><source ref="id634" /><target ref="id910" /><label kind="assignment" x="493" y="532">receiveData$param$tran = tran</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="485" y="205" /><nail x="485" y="892" /></transition><transition><source ref="id910" /><target ref="id636" /><label kind="synchronisation" x="358" y="924">receiveData$ctrl!</label><label kind="comments" /><nail x="350" y="924" /><nail x="350" y="956" /></transition><transition><source ref="id636" /><target ref="id635" /><label kind="synchronisation" x="111" y="548">receiveData$ctrl?</label><label kind="assignment" x="111" y="561">receiveData$param$tran = NULL</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="103" y="956" /><nail x="103" y="173" /></transition><transition><source ref="id643" /><target ref="id1142" /><label kind="guard" x="2615" y="397">!(addr_is_valid_data(tran))</label><label kind="assignment" x="2615" y="410">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="2607" y="397" /><nail x="2607" y="429" /></transition><transition><source ref="id644" /><target ref="id1143" /><label kind="guard" x="2209" y="589">!(addr_is_valid_data(tran)  &amp;&amp;
addr_is_valid_unsigned_int(size))</label><label kind="assignment" x="2209" y="617">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="2201" y="557" /><nail x="2201" y="668" /></transition></template><template><name>tlm2_master_to_ahb$receiveData</name><parameter>chan &amp;b_transport_finished_ev$notify_imm, chan &amp;receiveData$ctrl, bool &amp;m_data_pending, unsigned_int &amp;m_data_count, data_addr_ptr &amp;receiveData$param$tran</parameter><declaration>data_addr_ptr tran = NULL;
unsigned_int_addr_ptr size = NULL;
unsigned_int burst_len;
unsigned_int_addr_ptr data_ptr = NULL;</declaration><location id="id671" x="135" y="16"><name x="159" y="8">init_location</name></location><location id="id676" x="778" y="125"><urgent /></location><location id="id677" x="778" y="221"><urgent /></location><location id="id678" x="473" y="332"><urgent /></location><location id="id679" x="275" y="428"><urgent /></location><location id="id681" x="135" y="524"><urgent /></location><location id="id682" x="135" y="588"><urgent /></location><location id="id684" x="415" y="492"><urgent /></location><location id="id673" x="207" y="652"><urgent /></location><location id="id1211" x="135" y="189"><name x="159" y="181">mem_access_fail_70</name><urgent /></location><location id="id1212" x="135" y="300"><name x="159" y="292">mem_access_fail_71</name><urgent /></location><location id="id1213" x="135" y="396"><name x="159" y="388">mem_access_fail_72</name><urgent /></location><init ref="id671" /><transition><source ref="id676" /><target ref="id677" /><label kind="guard" x="1429" y="157">addr_is_valid_data(tran)</label><label kind="assignment" x="1429" y="170">size = dataMem[tran].burst_size</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 16412, file: tlm2_master_to_ahb.cpp, line: 317</label><nail x="1421" y="141" /><nail x="1421" y="205" /></transition><transition><source ref="id677" /><target ref="id678" /><label kind="guard" x="819" y="253">addr_is_valid_data(tran)  &amp;&amp;
addr_is_valid_unsigned_int(size)</label><label kind="assignment" x="819" y="281">burst_len = dataMem[tran].data_length / unsigned_intMem[size]</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 16434, file: tlm2_master_to_ahb.cpp, line: 318</label><nail x="811" y="237" /><nail x="811" y="316" /></transition><transition><source ref="id678" /><target ref="id679" /><label kind="guard" x="400" y="364">addr_is_valid_data(tran)</label><label kind="assignment" x="400" y="377">data_ptr = dataMem[tran].data_ptr</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 16472, file: tlm2_master_to_ahb.cpp, line: 319</label><nail x="392" y="348" /><nail x="392" y="412" /></transition><transition><source ref="id679" /><target ref="id681" /><label kind="guard" x="143" y="460">m_data_count == burst_len</label><label kind="comments">Guard:
nodeID: 16606, file: tlm2_master_to_ahb.cpp, line: 323</label><nail x="135" y="444" /><nail x="135" y="508" /></transition><transition><source ref="id681" /><target ref="id682" /><label kind="synchronisation" x="143" y="540">b_transport_finished_ev$notify_imm!</label><label kind="comments" /><nail x="135" y="540" /><nail x="135" y="572" /></transition><transition><source ref="id682" /><target ref="id673" /><label kind="assignment" x="143" y="604">m_data_pending = false</label><label kind="comments">Update:
nodeID: 16630, file: tlm2_master_to_ahb.cpp, line: 325</label><nail x="135" y="604" /><nail x="135" y="636" /></transition><transition><source ref="id679" /><target ref="id684" /><label kind="guard" x="423" y="444">!(m_data_count == burst_len)</label><label kind="comments">Guard:
nodeID: 16606, file: tlm2_master_to_ahb.cpp, line: 323</label><nail x="415" y="444" /><nail x="415" y="476" /></transition><transition><source ref="id684" /><target ref="id673" /><label kind="assignment" x="423" y="556">m_data_pending = true</label><label kind="comments">Update:
nodeID: 16651, file: tlm2_master_to_ahb.cpp, line: 327</label><nail x="415" y="508" /><nail x="415" y="636" /></transition><transition><source ref="id673" /><target ref="id671" /><label kind="synchronisation" x="8" y="318">receiveData$ctrl!</label><label kind="comments" /><nail x="0" y="636" /><nail x="0" y="32" /></transition><transition><source ref="id671" /><target ref="id676" /><label kind="synchronisation" x="143" y="32">receiveData$ctrl?</label><label kind="assignment" x="143" y="45">tran = receiveData$param$tran,
size = NULL,
burst_len = 0,
m_data_count++</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: 16224, file: tlm2_master_to_ahb.cpp, line: 310,
nodeID: 16224, file: tlm2_master_to_ahb.cpp, line: 310,
nodeID: 16224, file: tlm2_master_to_ahb.cpp, line: 310</label><nail x="135" y="32" /><nail x="135" y="109" /></transition><transition><source ref="id676" /><target ref="id1211" /><label kind="guard" x="143" y="141">!(addr_is_valid_data(tran))</label><label kind="assignment" x="143" y="154">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="135" y="141" /><nail x="135" y="173" /></transition><transition><source ref="id677" /><target ref="id1212" /><label kind="guard" x="143" y="237">!(addr_is_valid_data(tran)  &amp;&amp;
addr_is_valid_unsigned_int(size))</label><label kind="assignment" x="143" y="265">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="135" y="237" /><nail x="135" y="284" /></transition><transition><source ref="id678" /><target ref="id1213" /><label kind="guard" x="143" y="348">!(addr_is_valid_data(tran))</label><label kind="assignment" x="143" y="361">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="135" y="348" /><nail x="135" y="380" /></transition></template><template><name>tlm2_master_to_ahb$requestProcess</name><parameter>chan &amp;requestProcess$ctrl, unsigned_int &amp;current_DataLength, chan &amp;busNotGranted$ctrl, chan &amp;busGranted$ctrl, data_addr_ptr &amp;current_trans, unsigned_int &amp;m_txn_count, bool &amp;m_bus_granted</parameter><declaration /><location id="id716" x="324" y="16"><name x="348" y="8">init_location</name></location><location id="id717" x="215" y="432"><urgent /></location><location id="id720" x="164" y="112"><urgent /></location><location id="id719" x="570" y="336"><urgent /></location><location id="id722" x="797" y="400"><urgent /></location><location id="id721" x="883" y="272"><urgent /></location><location id="id725" x="1242" y="368"><urgent /></location><location id="id727" x="1525" y="304" /><location id="id728" x="1176" y="208"><urgent /></location><location id="id730" x="1539" y="144" /><location id="id718" x="1034" y="80"><urgent /></location><init ref="id716" /><transition><source ref="id716" /><target ref="id717" /><label kind="synchronisation" x="8" y="208">requestProcess$ctrl?</label><label kind="comments" /><nail x="0" y="32" /><nail x="0" y="416" /></transition><transition><source ref="id717" /><target ref="id720" /><label kind="guard" x="172" y="256">m_txn_count == current_DataLength</label><label kind="comments">Guard:
nodeID: 18403, file: tlm2_master_to_ahb.cpp, line: 398</label><nail x="164" y="416" /><nail x="164" y="128" /></transition><transition><source ref="id720" /><target ref="id716" /><label kind="synchronisation" x="172" y="48">requestProcess$ctrl!</label><label kind="comments" /><nail x="164" y="96" /><nail x="164" y="32" /></transition><transition><source ref="id717" /><target ref="id719" /><label kind="guard" x="438" y="368">!(m_txn_count == current_DataLength)</label><label kind="comments">Guard:
nodeID: 18403, file: tlm2_master_to_ahb.cpp, line: 398</label><nail x="430" y="416" /><nail x="430" y="352" /></transition><transition><source ref="id719" /><target ref="id722" /><label kind="guard" x="719" y="352">current_trans == NULL</label><label kind="comments">Guard:
nodeID: 18436, file: tlm2_master_to_ahb.cpp, line: 403</label><nail x="711" y="352" /><nail x="711" y="384" /></transition><transition><source ref="id722" /><target ref="id721" /><label kind="assignment" x="891" y="320">current_trans = allocate_dynamic_data()</label><label kind="comments">Update:
nodeID: 18458, file: tlm2_master_to_ahb.cpp, line: 407</label><nail x="883" y="384" /><nail x="883" y="288" /></transition><transition><source ref="id719" /><target ref="id721" /><label kind="guard" x="438" y="288">!(current_trans == NULL)</label><label kind="comments">Guard:
nodeID: 18436, file: tlm2_master_to_ahb.cpp, line: 403</label><nail x="430" y="320" /><nail x="430" y="288" /></transition><transition><source ref="id721" /><target ref="id725" /><label kind="guard" x="1185" y="304">!m_bus_granted</label><label kind="comments">Guard:
nodeID: 18480, file: tlm2_master_to_ahb.cpp, line: 410</label><nail x="1177" y="288" /><nail x="1177" y="352" /></transition><transition><source ref="id725" /><target ref="id727" /><label kind="synchronisation" x="1315" y="320">busNotGranted$ctrl!</label><label kind="comments" /><nail x="1307" y="352" /><nail x="1307" y="320" /></transition><transition><source ref="id727" /><target ref="id718" /><label kind="synchronisation" x="1752" y="176">busNotGranted$ctrl?</label><label kind="comments" /><nail x="1744" y="288" /><nail x="1744" y="96" /></transition><transition><source ref="id721" /><target ref="id728" /><label kind="guard" x="891" y="224">!(!m_bus_granted)</label><label kind="comments">Guard:
nodeID: 18480, file: tlm2_master_to_ahb.cpp, line: 410</label><nail x="883" y="256" /><nail x="883" y="224" /></transition><transition><source ref="id728" /><target ref="id730" /><label kind="synchronisation" x="1478" y="160">busGranted$ctrl!</label><label kind="comments" /><nail x="1470" y="192" /><nail x="1470" y="160" /></transition><transition><source ref="id730" /><target ref="id718" /><label kind="synchronisation" x="1617" y="96">busGranted$ctrl?</label><label kind="comments" /><nail x="1609" y="128" /><nail x="1609" y="96" /></transition><transition><source ref="id718" /><target ref="id716" /><label kind="synchronisation" x="332" y="32">requestProcess$ctrl!</label><label kind="comments" /><nail x="324" y="64" /><nail x="324" y="32" /></transition></template><template><name>tlm2_master_to_ahb$resumeRequest</name><parameter>int_addr_ptr &amp;master_socket$nb_transport_fw$param$phase, data_addr_ptr &amp;master_socket$nb_transport_fw$param$tran, chan &amp;master_socket$nb_transport_fw$ctrl, int_addr_ptr &amp;master_socket$nb_transport_fw$param$t, bool &amp;m_restart_pending_req, bool &amp;m_request_pending, bool &amp;m_data_pending, tlm_sync_enum &amp;master_socket$nb_transport_fw$return, data_addr_ptr &amp;current_trans, chan &amp;resumeRequest$ctrl, unsigned_int &amp;m_txn_count</parameter><declaration>int_addr_ptr m_trans_type = NULL;
int_addr_ptr ph = NULL;
tlm_sync_enum retval;
int_addr_ptr delay = NULL;</declaration><location id="id686" x="160" y="16"><name x="184" y="8">init_location</name></location><location id="id689" x="2066" y="80"><urgent /></location><location id="id691" x="3233" y="240"><urgent /></location><location id="id692" x="2702" y="304"><urgent /></location><location id="id694" x="3042" y="368"><urgent /></location><location id="id695" x="3382" y="432"><urgent /></location><location id="id696" x="2748" y="560"><urgent /></location><location id="id693" x="1867" y="624"><urgent /></location><location id="id698" x="2192" y="432"><urgent /></location><location id="id699" x="1876" y="496"><urgent /></location><location id="id704" x="1619" y="799" /><location id="id706" x="1390" y="923"><urgent /></location><location id="id708" x="1073" y="208"><urgent /></location><location id="id707" x="751" y="987"><urgent /></location><location id="id711" x="789" y="176"><urgent /></location><location id="id710" x="474" y="112"><urgent /></location><location id="id688" x="1986" y="1019"><urgent /></location><location id="id1107" x="1619" y="735"><urgent /></location><location id="id1214" x="2702" y="528"><name x="2726" y="520">mem_access_fail_73</name><urgent /></location><location id="id1215" x="3125" y="496"><name x="3149" y="488">mem_access_fail_74</name><urgent /></location><location id="id1216" x="2243" y="368"><name x="2267" y="360">mem_access_fail_75</name><urgent /></location><location id="id1217" x="1619" y="560"><name x="1643" y="552">mem_access_fail_76</name><urgent /></location><init ref="id686" /><transition><source ref="id686" /><target ref="id689" /><label kind="synchronisation" x="168" y="32">resumeRequest$ctrl?</label><label kind="assignment" x="168" y="45">m_trans_type = NULL</label><label kind="comments">Update:
nodeID: 16702, file: tlm2_master_to_ahb.cpp, line: 336</label><nail x="160" y="32" /><nail x="160" y="64" /></transition><transition><source ref="id689" /><target ref="id691" /><label kind="guard" x="3773" y="144">!m_request_pending</label><label kind="comments">Guard:
nodeID: 16716, file: tlm2_master_to_ahb.cpp, line: 338</label><nail x="3765" y="96" /><nail x="3765" y="224" /></transition><transition><source ref="id691" /><target ref="id692" /><label kind="assignment" x="2710" y="256">m_txn_count++</label><label kind="comments">Update:
nodeID: 16736, file: tlm2_master_to_ahb.cpp, line: 340</label><nail x="2702" y="256" /><nail x="2702" y="288" /></transition><transition><source ref="id692" /><target ref="id694" /><label kind="guard" x="2710" y="320">m_restart_pending_req</label><label kind="comments">Guard:
nodeID: 16868, file: tlm2_master_to_ahb.cpp, line: 344</label><nail x="2702" y="320" /><nail x="2702" y="352" /></transition><transition><source ref="id694" /><target ref="id695" /><label kind="guard" x="3390" y="384">addr_is_valid_data(current_trans)</label><label kind="assignment" x="3390" y="397">m_trans_type = dataMem[current_trans].trans_type</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 16883, file: tlm2_master_to_ahb.cpp, line: 346</label><nail x="3382" y="384" /><nail x="3382" y="416" /></transition><transition><source ref="id695" /><target ref="id696" /><label kind="guard" x="3390" y="480">addr_is_valid_int(m_trans_type)</label><label kind="assignment" x="3390" y="493">intMem[m_trans_type] = 50</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 16909, file: tlm2_master_to_ahb.cpp, line: 347</label><nail x="3382" y="448" /><nail x="3382" y="544" /></transition><transition><source ref="id696" /><target ref="id693" /><label kind="assignment" x="2123" y="576">m_restart_pending_req = false</label><label kind="comments">Update:
nodeID: 16927, file: tlm2_master_to_ahb.cpp, line: 348</label><nail x="2115" y="576" /><nail x="2115" y="608" /></transition><transition><source ref="id692" /><target ref="id698" /><label kind="guard" x="2516" y="352">!(m_restart_pending_req)</label><label kind="comments">Guard:
nodeID: 16868, file: tlm2_master_to_ahb.cpp, line: 344</label><nail x="2508" y="320" /><nail x="2508" y="416" /></transition><transition><source ref="id698" /><target ref="id699" /><label kind="guard" x="1884" y="448">addr_is_valid_data(current_trans)</label><label kind="assignment" x="1884" y="461">m_trans_type = dataMem[current_trans].trans_type</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 16957, file: tlm2_master_to_ahb.cpp, line: 353</label><nail x="1876" y="448" /><nail x="1876" y="480" /></transition><transition><source ref="id699" /><target ref="id693" /><label kind="guard" x="1884" y="544">addr_is_valid_int(m_trans_type)</label><label kind="assignment" x="1884" y="557">intMem[m_trans_type] = 51</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 16983, file: tlm2_master_to_ahb.cpp, line: 354</label><nail x="1876" y="512" /><nail x="1876" y="608" /></transition><transition><source ref="id693" /><target ref="id1107" /><label kind="assignment" x="1627" y="640">delay = allocate_static_and_init_int(1),
ph = allocate_static_and_init_int(BEGIN_REQ),
master_socket$nb_transport_fw$param$tran = current_trans,
master_socket$nb_transport_fw$param$phase = ph,
master_socket$nb_transport_fw$param$t = delay</label><label kind="comments">Update:
nodeID: 17019, file: tlm2_master_to_ahb.cpp, line: 359,
nodeID: 17059, file: tlm2_master_to_ahb.cpp, line: 360,
nodeID: 17059, file: tlm2_master_to_ahb.cpp, line: 360,
nodeID: 17059, file: tlm2_master_to_ahb.cpp, line: 360,
nodeID: 17059, file: tlm2_master_to_ahb.cpp, line: 360</label><nail x="1619" y="640" /><nail x="1619" y="719" /></transition><transition><source ref="id706" /><target ref="id708" /><label kind="guard" x="1170" y="549">dataMem[current_trans].command == TLM_READ_COMMAND</label><label kind="comments">Guard:
nodeID: 17527, file: tlm2_master_to_ahb.cpp, line: 366</label><nail x="1162" y="907" /><nail x="1162" y="224" /></transition><transition><source ref="id708" /><target ref="id707" /><label kind="assignment" x="993" y="581">m_data_pending = true</label><label kind="comments">Update:
nodeID: 17549, file: tlm2_master_to_ahb.cpp, line: 367</label><nail x="985" y="224" /><nail x="985" y="971" /></transition><transition><source ref="id706" /><target ref="id707" /><label kind="guard" x="1170" y="939">!(dataMem[current_trans].command == TLM_READ_COMMAND)</label><label kind="comments">Guard:
nodeID: 17527, file: tlm2_master_to_ahb.cpp, line: 366</label><nail x="1162" y="939" /><nail x="1162" y="971" /></transition><transition><source ref="id707" /><target ref="id711" /><label kind="guard" x="797" y="565">retval == TLM_UPDATED</label><label kind="comments">Guard:
nodeID: 17567, file: tlm2_master_to_ahb.cpp, line: 372</label><nail x="789" y="971" /><nail x="789" y="192" /></transition><transition><source ref="id711" /><target ref="id710" /><label kind="assignment" x="797" y="128">m_request_pending = false</label><label kind="comments">Update:
nodeID: 17958, file: tlm2_master_to_ahb.cpp, line: 376</label><nail x="789" y="160" /><nail x="789" y="128" /></transition><transition><source ref="id707" /><target ref="id710" /><label kind="guard" x="348" y="533">retval == TLM_ACCEPTED</label><label kind="comments">Guard:
nodeID: 17970, file: tlm2_master_to_ahb.cpp, line: 379</label><nail x="340" y="971" /><nail x="340" y="128" /></transition><transition><source ref="id707" /><target ref="id710" /><label kind="guard" x="556" y="532">!(retval == TLM_UPDATED)  &amp;&amp;
!(retval == TLM_ACCEPTED)</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="548" y="971" /><nail x="548" y="128" /></transition><transition><source ref="id689" /><target ref="id688" /><label kind="guard" x="3981" y="533">!(!m_request_pending)</label><label kind="comments">Guard:
nodeID: 16716, file: tlm2_master_to_ahb.cpp, line: 338</label><nail x="3973" y="96" /><nail x="3973" y="1003" /></transition><transition><source ref="id688" /><target ref="id686" /><label kind="synchronisation" x="8" y="501">resumeRequest$ctrl!</label><label kind="comments" /><nail x="0" y="1003" /><nail x="0" y="32" /></transition><transition><source ref="id1107" /><target ref="id704" /><label kind="synchronisation" x="1627" y="751">master_socket$nb_transport_fw$ctrl!</label><label kind="comments" /><nail x="1619" y="751" /><nail x="1619" y="783" /></transition><transition><source ref="id704" /><target ref="id706" /><label kind="synchronisation" x="1627" y="815">master_socket$nb_transport_fw$ctrl?</label><label kind="assignment" x="1627" y="828">master_socket$nb_transport_fw$param$tran = NULL,
master_socket$nb_transport_fw$param$phase = NULL,
master_socket$nb_transport_fw$param$t = NULL,
retval = master_socket$nb_transport_fw$return,
m_request_pending = true</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="1619" y="815" /><nail x="1619" y="907" /></transition><transition><source ref="id710" /><target ref="id688" /><label kind="assignment" x="168" y="548">empty_stack_int(delay),
empty_stack_int(ph)</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="160" y="128" /><nail x="160" y="1003" /></transition><transition><source ref="id694" /><target ref="id1214" /><label kind="guard" x="2710" y="432">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="2710" y="445">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="2702" y="384" /><nail x="2702" y="512" /></transition><transition><source ref="id695" /><target ref="id1215" /><label kind="guard" x="3133" y="448">!(addr_is_valid_int(m_trans_type))</label><label kind="assignment" x="3133" y="461">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="3125" y="448" /><nail x="3125" y="480" /></transition><transition><source ref="id698" /><target ref="id1216" /><label kind="guard" x="2251" y="384">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="2251" y="397">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="2243" y="416" /><nail x="2243" y="384" /></transition><transition><source ref="id699" /><target ref="id1217" /><label kind="guard" x="1627" y="512">!(addr_is_valid_int(m_trans_type))</label><label kind="assignment" x="1627" y="525">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="1619" y="512" /><nail x="1619" y="544" /></transition></template><template><name>tlm2_master_to_ahb$sendData</name><parameter>int_addr_ptr &amp;master_socket$nb_transport_fw$param$phase, chan &amp;b_transport_finished_ev$notify_imm, data_addr_ptr &amp;master_socket$nb_transport_fw$param$tran, chan &amp;sendData$ctrl, chan &amp;master_socket$nb_transport_fw$ctrl, int_addr_ptr &amp;master_socket$nb_transport_fw$param$t, bool &amp;m_data_pending, tlm_sync_enum &amp;master_socket$nb_transport_fw$return, data_addr_ptr &amp;current_trans, unsigned_int &amp;m_data_count</parameter><declaration>unsigned_int_addr_ptr size = NULL;
unsigned_int burst_len;
int_addr_ptr ph = NULL;
tlm_sync_enum retval;
int_addr_ptr delay = NULL;</declaration><location id="id731" x="118" y="16"><name x="142" y="8">init_location</name></location><location id="id735" x="651" y="95"><urgent /></location><location id="id736" x="1184" y="191"><urgent /></location><location id="id738" x="1316" y="255"><urgent /></location><location id="id737" x="1060" y="366"><urgent /></location><location id="id740" x="805" y="255"><urgent /></location><location id="id745" x="805" y="541" /><location id="id747" x="553" y="665"><urgent /></location><location id="id749" x="499" y="223"><urgent /></location><location id="id752" x="118" y="477"><urgent /></location><location id="id751" x="254" y="541"><urgent /></location><location id="id748" x="314" y="731"><urgent /></location><location id="id733" x="59" y="797"><urgent /></location><location id="id951" x="805" y="477"><urgent /></location><location id="id1186" x="118" y="159"><name x="142" y="151">mem_access_fail_45</name><urgent /></location><location id="id1187" x="1026" y="334"><name x="1050" y="326">mem_access_fail_46</name><urgent /></location><init ref="id731" /><transition><source ref="id731" /><target ref="id735" /><label kind="synchronisation" x="126" y="32">sendData$ctrl?</label><label kind="assignment" x="126" y="45">m_data_count++,
size = NULL</label><label kind="comments">Update:
nodeID: 18557, file: tlm2_master_to_ahb.cpp, line: 426,
nodeID: 18639, file: tlm2_master_to_ahb.cpp, line: 429</label><nail x="118" y="32" /><nail x="118" y="79" /></transition><transition><source ref="id735" /><target ref="id736" /><label kind="guard" x="1192" y="127">addr_is_valid_data(current_trans)</label><label kind="assignment" x="1192" y="140">size = dataMem[current_trans].burst_size</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 18659, file: tlm2_master_to_ahb.cpp, line: 430</label><nail x="1184" y="111" /><nail x="1184" y="175" /></transition><transition><source ref="id736" /><target ref="id738" /><label kind="guard" x="1324" y="207">unsigned_intMem[size] != 0</label><label kind="comments">Guard:
nodeID: 18702, file: tlm2_master_to_ahb.cpp, line: 435</label><nail x="1316" y="207" /><nail x="1316" y="239" /></transition><transition><source ref="id738" /><target ref="id737" /><label kind="guard" x="1324" y="287">addr_is_valid_data(current_trans)  &amp;&amp;
addr_is_valid_unsigned_int(size)</label><label kind="assignment" x="1324" y="315">burst_len = dataMem[current_trans].data_length / unsigned_intMem[size]</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 18722, file: tlm2_master_to_ahb.cpp, line: 437</label><nail x="1316" y="271" /><nail x="1316" y="350" /></transition><transition><source ref="id736" /><target ref="id740" /><label kind="guard" x="813" y="207">!(unsigned_intMem[size] != 0)</label><label kind="comments">Guard:
nodeID: 18702, file: tlm2_master_to_ahb.cpp, line: 435</label><nail x="805" y="207" /><nail x="805" y="239" /></transition><transition><source ref="id740" /><target ref="id737" /><label kind="assignment" x="813" y="294">burst_len = 1</label><label kind="comments">Update:
nodeID: 18758, file: tlm2_master_to_ahb.cpp, line: 442</label><nail x="805" y="271" /><nail x="805" y="350" /></transition><transition><source ref="id737" /><target ref="id951" /><label kind="assignment" x="813" y="382">delay = allocate_static_and_init_int(1),
ph = allocate_static_and_init_int(42),
master_socket$nb_transport_fw$param$tran = current_trans,
master_socket$nb_transport_fw$param$phase = ph,
master_socket$nb_transport_fw$param$t = delay</label><label kind="comments">Update:
nodeID: 18842, file: tlm2_master_to_ahb.cpp, line: 447,
nodeID: 18882, file: tlm2_master_to_ahb.cpp, line: 448,
nodeID: 18882, file: tlm2_master_to_ahb.cpp, line: 448,
nodeID: 18882, file: tlm2_master_to_ahb.cpp, line: 448,
nodeID: 18882, file: tlm2_master_to_ahb.cpp, line: 448</label><nail x="805" y="382" /><nail x="805" y="461" /></transition><transition><source ref="id747" /><target ref="id749" /><label kind="guard" x="617" y="428">retval == TLM_UPDATED</label><label kind="comments">Guard:
nodeID: 18980, file: tlm2_master_to_ahb.cpp, line: 454</label><nail x="609" y="649" /><nail x="609" y="239" /></transition><transition><source ref="id749" /><target ref="id752" /><label kind="guard" x="126" y="334">m_data_count == burst_len</label><label kind="comments">Guard:
nodeID: 19071, file: tlm2_master_to_ahb.cpp, line: 458</label><nail x="118" y="239" /><nail x="118" y="461" /></transition><transition><source ref="id752" /><target ref="id751" /><label kind="synchronisation" x="126" y="493">b_transport_finished_ev$notify_imm!</label><label kind="comments" /><nail x="118" y="493" /><nail x="118" y="525" /></transition><transition><source ref="id749" /><target ref="id751" /><label kind="guard" x="398" y="366">!(m_data_count == burst_len)</label><label kind="comments">Guard:
nodeID: 19071, file: tlm2_master_to_ahb.cpp, line: 458</label><nail x="390" y="239" /><nail x="390" y="525" /></transition><transition><source ref="id751" /><target ref="id748" /><label kind="assignment" x="126" y="620">m_data_pending = false</label><label kind="comments">Update:
nodeID: 19095, file: tlm2_master_to_ahb.cpp, line: 462</label><nail x="118" y="557" /><nail x="118" y="715" /></transition><transition><source ref="id747" /><target ref="id748" /><label kind="guard" x="310" y="682">retval == TLM_ACCEPTED</label><label kind="comments">Guard:
nodeID: 19107, file: tlm2_master_to_ahb.cpp, line: 466</label><nail x="302" y="681" /><nail x="302" y="715" /></transition><transition><source ref="id747" /><target ref="id748" /><label kind="guard" x="518" y="681">!(retval == TLM_UPDATED)  &amp;&amp;
!(retval == TLM_ACCEPTED)</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="510" y="681" /><nail x="510" y="715" /></transition><transition><source ref="id733" /><target ref="id731" /><label kind="synchronisation" x="8" y="390">sendData$ctrl!</label><label kind="comments" /><nail x="0" y="781" /><nail x="0" y="32" /></transition><transition><source ref="id951" /><target ref="id745" /><label kind="synchronisation" x="813" y="493">master_socket$nb_transport_fw$ctrl!</label><label kind="comments" /><nail x="805" y="493" /><nail x="805" y="525" /></transition><transition><source ref="id745" /><target ref="id747" /><label kind="synchronisation" x="813" y="557">master_socket$nb_transport_fw$ctrl?</label><label kind="assignment" x="813" y="570">master_socket$nb_transport_fw$param$tran = NULL,
master_socket$nb_transport_fw$param$phase = NULL,
master_socket$nb_transport_fw$param$t = NULL,
retval = master_socket$nb_transport_fw$return,
m_data_pending = true</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="805" y="557" /><nail x="805" y="649" /></transition><transition><source ref="id748" /><target ref="id733" /><label kind="assignment" x="126" y="747">empty_stack_int(delay),
empty_stack_int(ph)</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="118" y="747" /><nail x="118" y="781" /></transition><transition><source ref="id735" /><target ref="id1186" /><label kind="guard" x="126" y="111">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="126" y="124">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="118" y="111" /><nail x="118" y="143" /></transition><transition><source ref="id738" /><target ref="id1187" /><label kind="guard" x="1034" y="271">!(addr_is_valid_data(current_trans)  &amp;&amp;
addr_is_valid_unsigned_int(size))</label><label kind="assignment" x="1034" y="299">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="1026" y="271" /><nail x="1026" y="318" /></transition></template><template><name>tlm2_master_to_ahb$startRequest</name><parameter>int_addr_ptr &amp;master_socket$nb_transport_fw$param$phase, data_addr_ptr &amp;master_socket$nb_transport_fw$param$tran, chan &amp;master_socket$nb_transport_fw$ctrl, chan &amp;startRequest$ctrl, int_addr_ptr &amp;master_socket$nb_transport_fw$param$t, bool &amp;m_request_pending, tlm_sync_enum &amp;master_socket$nb_transport_fw$return, data_addr_ptr &amp;current_trans, unsigned_int &amp;m_txn_count, unsigned_int &amp;m_data_count</parameter><declaration>int_addr_ptr m_trans_type = NULL;
unsigned_int_addr_ptr m_burst_size = NULL;
int_addr_ptr ph = NULL;
tlm_sync_enum retval;
int_addr_ptr delay = NULL;</declaration><location id="id757" x="138" y="16"><name x="162" y="8">init_location</name></location><location id="id762" x="270" y="110"><urgent /></location><location id="id763" x="270" y="206"><urgent /></location><location id="id764" x="606" y="270"><urgent /></location><location id="id765" x="1138" y="334"><urgent /></location><location id="id766" x="1459" y="398"><urgent /></location><location id="id771" x="1467" y="588" /><location id="id772" x="1009" y="697"><urgent /></location><location id="id774" x="344" y="620"><urgent /></location><location id="id773" x="344" y="825"><urgent /></location><location id="id775" x="343" y="761"><urgent /></location><location id="id759" x="69" y="891"><urgent /></location><location id="id1127" x="1463" y="524"><urgent /></location><location id="id1220" x="138" y="174"><name x="162" y="166">mem_access_fail_79</name><urgent /></location><location id="id1221" x="138" y="524"><name x="162" y="516">mem_access_fail_80</name><urgent /></location><location id="id1222" x="553" y="462"><name x="577" y="454">mem_access_fail_81</name><urgent /></location><location id="id1223" x="976" y="430"><name x="1000" y="422">mem_access_fail_82</name><urgent /></location><init ref="id757" /><transition><source ref="id757" /><target ref="id762" /><label kind="synchronisation" x="146" y="32">startRequest$ctrl?</label><label kind="assignment" x="146" y="45">delay = allocate_static_and_init_int(1),
m_trans_type = 1,
m_burst_size = NULL</label><label kind="comments">Update:
nodeID: 19243, file: tlm2_master_to_ahb.cpp, line: 484,
nodeID: 19284, file: tlm2_master_to_ahb.cpp, line: 486,
nodeID: 19284, file: tlm2_master_to_ahb.cpp, line: 486</label><nail x="138" y="32" /><nail x="138" y="94" /></transition><transition><source ref="id762" /><target ref="id763" /><label kind="guard" x="411" y="142">addr_is_valid_data(current_trans)</label><label kind="assignment" x="411" y="155">m_trans_type = dataMem[current_trans].trans_type</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 19325, file: tlm2_master_to_ahb.cpp, line: 490</label><nail x="403" y="126" /><nail x="403" y="190" /></transition><transition><source ref="id763" /><target ref="id764" /><label kind="guard" x="403" y="222">addr_is_valid_int(m_trans_type)</label><label kind="assignment" x="403" y="235">intMem[m_trans_type] = 50</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 19351, file: tlm2_master_to_ahb.cpp, line: 491</label><nail x="395" y="222" /><nail x="395" y="254" /></transition><transition><source ref="id764" /><target ref="id765" /><label kind="guard" x="826" y="286">addr_is_valid_data(current_trans)</label><label kind="assignment" x="826" y="299">m_burst_size = dataMem[current_trans].burst_size</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 19370, file: tlm2_master_to_ahb.cpp, line: 494</label><nail x="818" y="286" /><nail x="818" y="318" /></transition><transition><source ref="id765" /><target ref="id766" /><label kind="guard" x="1467" y="350">addr_is_valid_unsigned_int(m_burst_size)</label><label kind="assignment" x="1467" y="363">unsigned_intMem[m_burst_size] = 1</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 19396, file: tlm2_master_to_ahb.cpp, line: 495</label><nail x="1459" y="350" /><nail x="1459" y="382" /></transition><transition><source ref="id766" /><target ref="id1127" /><label kind="assignment" x="1467" y="414">ph = allocate_static_and_init_int(BEGIN_REQ),
m_txn_count++,
m_data_count = 0,
master_socket$nb_transport_fw$param$tran = current_trans,
master_socket$nb_transport_fw$param$phase = ph,
master_socket$nb_transport_fw$param$t = delay</label><label kind="comments">Update:
nodeID: 19414, file: tlm2_master_to_ahb.cpp, line: 497,
nodeID: 19438, file: tlm2_master_to_ahb.cpp, line: 498,
nodeID: 19438, file: tlm2_master_to_ahb.cpp, line: 498,
nodeID: 19438, file: tlm2_master_to_ahb.cpp, line: 498,
nodeID: 19438, file: tlm2_master_to_ahb.cpp, line: 498,
nodeID: 19438, file: tlm2_master_to_ahb.cpp, line: 498</label><nail x="1459" y="414" /><nail x="1459" y="508" /></transition><transition><source ref="id772" /><target ref="id774" /><label kind="guard" x="559" y="642">retval == TLM_UPDATED</label><label kind="comments">Guard:
nodeID: 19767, file: tlm2_master_to_ahb.cpp, line: 509</label><nail x="551" y="681" /><nail x="551" y="636" /></transition><transition><source ref="id774" /><target ref="id773" /><label kind="assignment" x="146" y="706">m_request_pending = false</label><label kind="comments">Update:
nodeID: 19858, file: tlm2_master_to_ahb.cpp, line: 513</label><nail x="138" y="636" /><nail x="138" y="809" /></transition><transition><source ref="id772" /><target ref="id775" /><label kind="guard" x="351" y="713">retval == TLM_ACCEPTED</label><label kind="comments">Guard:
nodeID: 19870, file: tlm2_master_to_ahb.cpp, line: 516</label><nail x="343" y="713" /><nail x="343" y="745" /></transition><transition><source ref="id775" /><target ref="id773" /><label kind="assignment" x="351" y="777">m_request_pending = true</label><label kind="comments">Update:
nodeID: 19961, file: tlm2_master_to_ahb.cpp, line: 520</label><nail x="343" y="777" /><nail x="343" y="809" /></transition><transition><source ref="id772" /><target ref="id773" /><label kind="guard" x="559" y="744">!(retval == TLM_UPDATED)  &amp;&amp;
!(retval == TLM_ACCEPTED)</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="551" y="713" /><nail x="551" y="809" /></transition><transition><source ref="id759" /><target ref="id757" /><label kind="synchronisation" x="8" y="437">startRequest$ctrl!</label><label kind="comments" /><nail x="0" y="875" /><nail x="0" y="32" /></transition><transition><source ref="id1127" /><target ref="id771" /><label kind="synchronisation" x="1475" y="540">master_socket$nb_transport_fw$ctrl!</label><label kind="comments" /><nail x="1467" y="540" /><nail x="1467" y="572" /></transition><transition><source ref="id771" /><target ref="id772" /><label kind="synchronisation" x="1475" y="604">master_socket$nb_transport_fw$ctrl?</label><label kind="assignment" x="1475" y="617">master_socket$nb_transport_fw$param$tran = NULL,
master_socket$nb_transport_fw$param$phase = NULL,
master_socket$nb_transport_fw$param$t = NULL,
retval = master_socket$nb_transport_fw$return</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="1467" y="604" /><nail x="1467" y="681" /></transition><transition><source ref="id773" /><target ref="id759" /><label kind="assignment" x="146" y="841">empty_stack_int(delay),
empty_stack_int(ph)</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="138" y="841" /><nail x="138" y="875" /></transition><transition><source ref="id762" /><target ref="id1220" /><label kind="guard" x="146" y="126">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="146" y="139">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="138" y="126" /><nail x="138" y="158" /></transition><transition><source ref="id763" /><target ref="id1221" /><label kind="guard" x="146" y="349">!(addr_is_valid_int(m_trans_type))</label><label kind="assignment" x="146" y="362">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="138" y="222" /><nail x="138" y="508" /></transition><transition><source ref="id764" /><target ref="id1222" /><label kind="guard" x="561" y="350">!(addr_is_valid_data(current_trans))</label><label kind="assignment" x="561" y="363">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="553" y="286" /><nail x="553" y="446" /></transition><transition><source ref="id765" /><target ref="id1223" /><label kind="guard" x="984" y="366">!(addr_is_valid_unsigned_int(m_burst_size))</label><label kind="assignment" x="984" y="379">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="976" y="350" /><nail x="976" y="414" /></transition></template><template><name>tlm2_master_to_ahb$thread0$sensitiveTemp</name><parameter>broadcast chan &amp;sensitive, broadcast chan &amp;clk</parameter><declaration /><location id="id783" x="41" y="16" /><location id="id784" x="41" y="80"><committed /></location><init ref="id783" /><transition><source ref="id784" /><target ref="id783" /><label kind="synchronisation" x="8" y="32">sensitive!</label><label kind="comments" /><nail x="0" y="64" /><nail x="0" y="32" /></transition><transition><source ref="id783" /><target ref="id784" /><label kind="synchronisation" x="90" y="32">clk?</label><label kind="comments" /><nail x="82" y="32" /><nail x="82" y="64" /></transition></template><template><name>tlm2_simple_master$clock_tick</name><parameter>chan &amp;pos_clk_edge$notify_imm, chan &amp;clock_tick$ctrl</parameter><declaration /><location id="id785" x="119" y="16"><name x="143" y="8">init_location</name></location><location id="id786" x="119" y="80"><urgent /></location><location id="id787" x="59" y="144"><urgent /></location><init ref="id785" /><transition><source ref="id785" /><target ref="id786" /><label kind="synchronisation" x="127" y="32">clock_tick$ctrl?</label><label kind="comments" /><nail x="119" y="32" /><nail x="119" y="64" /></transition><transition><source ref="id786" /><target ref="id787" /><label kind="synchronisation" x="127" y="96">pos_clk_edge$notify_imm!</label><label kind="comments" /><nail x="119" y="96" /><nail x="119" y="128" /></transition><transition><source ref="id787" /><target ref="id785" /><label kind="synchronisation" x="8" y="64">clock_tick$ctrl!</label><label kind="comments" /><nail x="0" y="128" /><nail x="0" y="32" /></transition></template><template><name>tlm2_simple_master$thread0$sensitiveTemp</name><parameter>broadcast chan &amp;sensitive, broadcast chan &amp;clk</parameter><declaration /><location id="id869" x="41" y="16" /><location id="id870" x="41" y="80"><committed /></location><init ref="id869" /><transition><source ref="id870" /><target ref="id869" /><label kind="synchronisation" x="8" y="32">sensitive!</label><label kind="comments" /><nail x="0" y="64" /><nail x="0" y="32" /></transition><transition><source ref="id869" /><target ref="id870" /><label kind="synchronisation" x="90" y="32">clk?</label><label kind="comments" /><nail x="82" y="32" /><nail x="82" y="64" /></transition></template><template><name>tlm2_simple_master$thread1$sensitiveTemp</name><parameter>broadcast chan &amp;sensitive</parameter><declaration /><location id="id871" x="0" y="16" /><location id="id872" x="0" y="80"><committed /></location><init ref="id871" /><transition><source ref="id872" /><target ref="id871" /><label kind="synchronisation" x="8" y="32">sensitive!</label><label kind="comments" /><nail x="0" y="64" /><nail x="0" y="32" /></transition></template><template><name>tlm2_simple_master$thread_process</name><parameter>broadcast chan &amp;pos_clk_edge$wait, tlmdata_addr_ptr &amp;init_sock$b_transport$param$tran, tlmdata_addr_ptr &amp;d, chan &amp;thread_process$ctrl, chan &amp;init_sock$b_transport$ctrl, int_addr_ptr &amp;init_sock$b_transport$param$t</parameter><declaration>uint64 adr;
unsigned_int cmd;
unsigned_short burst_len;
unsigned_short number_of_slaves;
unsigned_int slave_addr_range;
unsigned_int_addr_ptr dataArr = NULL;
unsigned_int i;
int l;
unsigned_int_addr_ptr dptr = NULL;
int j;
int k;
int m;
int wait_clks;
int n;
int zero_delay;
int_addr_ptr delay = NULL;</declaration><location id="id795" x="159" y="16"><name x="183" y="8">init_location</name></location><location id="id804" x="4574" y="170"><urgent /></location><location id="id806" x="4387" y="234"><urgent /></location><location id="id808" x="8639" y="298"><urgent /></location><location id="id809" x="8289" y="362"><urgent /></location><location id="id810" x="4387" y="2325"><urgent /></location><location id="id812" x="4213" y="2261"><urgent /></location><location id="id813" x="7458" y="394"><urgent /></location><location id="id814" x="159" y="2197"><urgent /></location><location id="id817" x="7040" y="778"><urgent /></location><location id="id819" x="7386" y="842"><urgent /></location><location id="id818" x="7169" y="906"><urgent /></location><location id="id821" x="7249" y="1002"><urgent /></location><location id="id823" x="7834" y="874"><urgent /></location><location id="id822" x="6891" y="1130"><urgent /></location><location id="id825" x="6668" y="1066"><urgent /></location><location id="id827" x="6520" y="490"><urgent /></location><location id="id829" x="5679" y="1220"><urgent /></location><location id="id830" x="5170" y="1284"><urgent /></location><location id="id831" x="4613" y="1348"><urgent /></location><location id="id832" x="3950" y="1412"><urgent /></location><location id="id833" x="3118" y="682"><urgent /></location><location id="id835" x="2588" y="906"><urgent /></location><location id="id837" x="2241" y="970"><urgent /></location><location id="id839" x="2015" y="1034"><urgent /></location><location id="id840" x="1651" y="1111"><urgent /></location><location id="id841" x="1701" y="1220"><urgent /></location><location id="id838" x="1694" y="1252"><urgent /></location><location id="id844" x="1369" y="1316"><urgent /></location><location id="id846" x="1348" y="810"><urgent /></location><location id="id834" x="1154" y="1508"><urgent /></location><location id="id836" x="2369" y="1444"><urgent /></location><location id="id847" x="1022" y="778"><urgent /></location><location id="id851" x="725" y="1717"><urgent /></location><location id="id852" x="894" y="1638" /><location id="id854" x="616" y="458"><urgent /></location><location id="id856" x="511" y="1638"><urgent /></location><location id="id858" x="487" y="426"><urgent /></location><location id="id853" x="645" y="1781"><urgent /></location><location id="id859" x="645" y="1845"><urgent /></location><location id="id863" x="296" y="2133"><urgent /></location><location id="id864" x="243" y="1877"><urgent /></location><location id="id867" x="159" y="2005" /><location id="id868" x="159" y="2069"><urgent /></location><location id="id805" x="4574" y="2357"><urgent /></location><location id="id797" x="79" y="2423"><urgent /></location><location id="id943" x="894" y="1574"><urgent /></location><location id="id946" x="159" y="1941"><urgent /></location><location id="id1176" x="6695" y="970"><name x="6719" y="962">mem_access_fail_35</name><urgent /></location><location id="id1177" x="6143" y="522"><name x="6167" y="514">mem_access_fail_36</name><urgent /></location><location id="id1178" x="5661" y="554"><name x="5685" y="546">mem_access_fail_37</name><urgent /></location><location id="id1179" x="5184" y="586"><name x="5208" y="578">mem_access_fail_38</name><urgent /></location><location id="id1180" x="4643" y="618"><name x="4667" y="610">mem_access_fail_39</name><urgent /></location><location id="id1181" x="4069" y="650"><name x="4093" y="642">mem_access_fail_40</name><urgent /></location><location id="id1182" x="2655" y="842"><name x="2679" y="834">mem_access_fail_41</name><urgent /></location><location id="id1183" x="1492" y="1002"><name x="1516" y="994">mem_access_fail_42</name><urgent /></location><location id="id1184" x="1415" y="1348"><name x="1439" y="1340">mem_access_fail_43</name><urgent /></location><location id="id1185" x="894" y="714"><name x="918" y="706">mem_access_fail_44</name><urgent /></location><init ref="id795" /><transition><source ref="id795" /><target ref="id804" /><label kind="synchronisation" x="167" y="32">thread_process$ctrl?</label><label kind="assignment" x="167" y="45">zero_delay = 0,
delay = allocate_static_and_init_int(0),
adr = 0,
cmd = TLM_IGNORE_COMMAND,
number_of_slaves = 2 + 0,
slave_addr_range = 3,
dataArr = allocate_static_arr_unsigned_int(3)</label><label kind="comments">Update:
nodeID: 20081, file: tlm2_simple_master.cpp, line: 11,
nodeID: 20121, file: tlm2_simple_master.cpp, line: 12,
nodeID: 20121, file: tlm2_simple_master.cpp, line: 12,
nodeID: 20121, file: tlm2_simple_master.cpp, line: 12,
nodeID: 20121, file: tlm2_simple_master.cpp, line: 12,
nodeID: 20121, file: tlm2_simple_master.cpp, line: 12,
nodeID: 20121, file: tlm2_simple_master.cpp, line: 12</label><nail x="159" y="32" /><nail x="159" y="154" /></transition><transition><source ref="id804" /><target ref="id806" /><label kind="guard" x="167" y="186">true</label><label kind="comments">Guard:
nodeID: 20275, file: tlm2_simple_master.cpp, line: 20</label><nail x="159" y="186" /><nail x="159" y="218" /></transition><transition><source ref="id806" /><target ref="id808" /><label kind="assignment" x="8624" y="250">i = 0</label><label kind="comments">Update:
nodeID: 20293, file: tlm2_simple_master.cpp, line: 22</label><nail x="8616" y="250" /><nail x="8616" y="282" /></transition><transition><source ref="id808" /><target ref="id809" /><label kind="guard" x="8320" y="314">i &lt; slave_addr_range * number_of_slaves</label><label kind="comments">Guard:
nodeID: 20315, file: tlm2_simple_master.cpp, line: 22</label><nail x="8312" y="314" /><nail x="8312" y="346" /></transition><transition><source ref="id809" /><target ref="id812" /><label kind="assignment" x="8275" y="1295">l = 0</label><label kind="comments">Update:
nodeID: 20377, file: tlm2_simple_master.cpp, line: 24</label><nail x="8267" y="378" /><nail x="8267" y="2245" /></transition><transition><source ref="id812" /><target ref="id813" /><label kind="guard" x="8230" y="1311">l &lt; 2</label><label kind="comments">Guard:
nodeID: 20399, file: tlm2_simple_master.cpp, line: 24</label><nail x="8222" y="2245" /><nail x="8222" y="410" /></transition><transition><source ref="id813" /><target ref="id817" /><label kind="assignment" x="6703" y="561">burst_len = 3,
dptr = dataArr,
adr = i % (number_of_slaves * slave_addr_range)</label><label kind="comments">Update:
nodeID: 20433, file: tlm2_simple_master.cpp, line: 27,
nodeID: 20451, file: tlm2_simple_master.cpp, line: 28,
nodeID: 20451, file: tlm2_simple_master.cpp, line: 28</label><nail x="6695" y="410" /><nail x="6695" y="762" /></transition><transition><source ref="id817" /><target ref="id819" /><label kind="guard" x="7394" y="794">adr &gt; ((number_of_slaves * slave_addr_range) - burst_len)</label><label kind="comments">Guard:
nodeID: 20534, file: tlm2_simple_master.cpp, line: 36</label><nail x="7386" y="794" /><nail x="7386" y="826" /></transition><transition><source ref="id819" /><target ref="id818" /><label kind="assignment" x="7394" y="858">adr = (number_of_slaves * slave_addr_range) - burst_len</label><label kind="comments">Update:
nodeID: 20582, file: tlm2_simple_master.cpp, line: 37</label><nail x="7386" y="858" /><nail x="7386" y="890" /></transition><transition><source ref="id817" /><target ref="id818" /><label kind="guard" x="6960" y="826">!(adr &gt; ((number_of_slaves * slave_addr_range) - burst_len))</label><label kind="comments">Guard:
nodeID: 20534, file: tlm2_simple_master.cpp, line: 36</label><nail x="6952" y="794" /><nail x="6952" y="890" /></transition><transition><source ref="id818" /><target ref="id821" /><label kind="guard" x="6960" y="938">addr_is_valid_int(delay)</label><label kind="assignment" x="6960" y="951">intMem[delay] = 1</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 20626, file: tlm2_simple_master.cpp, line: 42</label><nail x="6952" y="922" /><nail x="6952" y="986" /></transition><transition><source ref="id821" /><target ref="id823" /><label kind="guard" x="7811" y="922">l == 0</label><label kind="comments">Guard:
nodeID: 20663, file: tlm2_simple_master.cpp, line: 47</label><nail x="7803" y="986" /><nail x="7803" y="890" /></transition><transition><source ref="id823" /><target ref="id822" /><label kind="assignment" x="7873" y="986">cmd = TLM_WRITE_COMMAND</label><label kind="comments">Update:
nodeID: 20683, file: tlm2_simple_master.cpp, line: 48</label><nail x="7865" y="890" /><nail x="7865" y="1114" /></transition><transition><source ref="id821" /><target ref="id825" /><label kind="guard" x="6703" y="1018">!(l == 0)</label><label kind="comments">Guard:
nodeID: 20663, file: tlm2_simple_master.cpp, line: 47</label><nail x="6695" y="1018" /><nail x="6695" y="1050" /></transition><transition><source ref="id825" /><target ref="id827" /><label kind="guard" x="6649" y="762">l == 1</label><label kind="comments">Guard:
nodeID: 20705, file: tlm2_simple_master.cpp, line: 49</label><nail x="6641" y="1050" /><nail x="6641" y="506" /></transition><transition><source ref="id827" /><target ref="id822" /><label kind="assignment" x="6408" y="794">cmd = TLM_READ_COMMAND</label><label kind="comments">Update:
nodeID: 20725, file: tlm2_simple_master.cpp, line: 50</label><nail x="6400" y="506" /><nail x="6400" y="1114" /></transition><transition><source ref="id825" /><target ref="id822" /><label kind="guard" x="6649" y="1082">!(l == 1)</label><label kind="comments">Guard:
nodeID: 20705, file: tlm2_simple_master.cpp, line: 49</label><nail x="6641" y="1082" /><nail x="6641" y="1114" /></transition><transition><source ref="id822" /><target ref="id829" /><label kind="guard" x="5926" y="1159">addr_is_valid_tlmdata(d)</label><label kind="assignment" x="5926" y="1172">tlmdataMem[d].data_ptr = dptr</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 20749, file: tlm2_simple_master.cpp, line: 53</label><nail x="5918" y="1146" /><nail x="5918" y="1204" /></transition><transition><source ref="id829" /><target ref="id830" /><label kind="guard" x="5449" y="1236">addr_is_valid_tlmdata(d)</label><label kind="assignment" x="5449" y="1249">tlmdataMem[d].address = adr</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 20771, file: tlm2_simple_master.cpp, line: 54</label><nail x="5441" y="1236" /><nail x="5441" y="1268" /></transition><transition><source ref="id830" /><target ref="id831" /><label kind="guard" x="4908" y="1300">addr_is_valid_tlmdata(d)</label><label kind="assignment" x="4908" y="1313">tlmdataMem[d].data_length = burst_len</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 20793, file: tlm2_simple_master.cpp, line: 55</label><nail x="4900" y="1300" /><nail x="4900" y="1332" /></transition><transition><source ref="id831" /><target ref="id832" /><label kind="guard" x="4334" y="1364">addr_is_valid_tlmdata(d)</label><label kind="assignment" x="4334" y="1377">tlmdataMem[d].streaming_width = burst_len</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 20816, file: tlm2_simple_master.cpp, line: 56</label><nail x="4326" y="1364" /><nail x="4326" y="1396" /></transition><transition><source ref="id832" /><target ref="id833" /><label kind="guard" x="3582" y="1031">addr_is_valid_tlmdata(d)</label><label kind="assignment" x="3582" y="1044">tlmdataMem[d].response_status = TLM_INCOMPLETE_RESPONSE</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 20838, file: tlm2_simple_master.cpp, line: 57</label><nail x="3574" y="1396" /><nail x="3574" y="698" /></transition><transition><source ref="id833" /><target ref="id835" /><label kind="guard" x="2920" y="778">cmd == TLM_WRITE_COMMAND</label><label kind="comments">Guard:
nodeID: 20858, file: tlm2_simple_master.cpp, line: 60</label><nail x="2912" y="698" /><nail x="2912" y="890" /></transition><transition><source ref="id835" /><target ref="id837" /><label kind="guard" x="2272" y="922">addr_is_valid_tlmdata(d)</label><label kind="assignment" x="2272" y="935">tlmdataMem[d].command = TLM_WRITE_COMMAND</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 20888, file: tlm2_simple_master.cpp, line: 61</label><nail x="2264" y="922" /><nail x="2264" y="954" /></transition><transition><source ref="id837" /><target ref="id839" /><label kind="assignment" x="2227" y="986">j = 0</label><label kind="comments">Update:
nodeID: 20913, file: tlm2_simple_master.cpp, line: 63</label><nail x="2219" y="986" /><nail x="2219" y="1018" /></transition><transition><source ref="id839" /><target ref="id840" /><label kind="guard" x="1819" y="1056">j &lt; burst_len</label><label kind="comments">Guard:
nodeID: 20935, file: tlm2_simple_master.cpp, line: 63</label><nail x="1811" y="1050" /><nail x="1811" y="1095" /></transition><transition><source ref="id840" /><target ref="id841" /><label kind="guard" x="1500" y="1127">addr_is_valid_unsigned_int(dataArr)  &amp;&amp;
addr_is_valid_unsigned_int(dataArr + j)  &amp;&amp;
is_arr_elem_unsigned_int(dataArr,
j)</label><label kind="assignment" x="1500" y="1185">unsigned_intMem[dataArr + j] = 1</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 20979, file: tlm2_simple_master.cpp, line: 64</label><nail x="1492" y="1127" /><nail x="1492" y="1204" /></transition><transition><source ref="id841" /><target ref="id839" /><label kind="assignment" x="1918" y="1111">j++</label><label kind="comments">Update:
nodeID: 20953, file: tlm2_simple_master.cpp, line: 63</label><nail x="1910" y="1204" /><nail x="1910" y="1050" /></transition><transition><source ref="id839" /><target ref="id838" /><label kind="guard" x="1955" y="1127">!(j &lt; burst_len)</label><label kind="comments">Guard:
nodeID: 20935, file: tlm2_simple_master.cpp, line: 63</label><nail x="1947" y="1050" /><nail x="1947" y="1236" /></transition><transition><source ref="id838" /><target ref="id844" /><label kind="assignment" x="1450" y="1268">k = 0</label><label kind="comments">Update:
nodeID: 21074, file: tlm2_simple_master.cpp, line: 69</label><nail x="1442" y="1268" /><nail x="1442" y="1300" /></transition><transition><source ref="id844" /><target ref="id846" /><label kind="guard" x="1304" y="1047">k &lt; burst_len</label><label kind="comments">Guard:
nodeID: 21096, file: tlm2_simple_master.cpp, line: 69</label><nail x="1296" y="1300" /><nail x="1296" y="826" /></transition><transition><source ref="id846" /><target ref="id844" /><label kind="assignment" x="1408" y="1047">k++</label><label kind="comments">Update:
nodeID: 21114, file: tlm2_simple_master.cpp, line: 69</label><nail x="1400" y="826" /><nail x="1400" y="1300" /></transition><transition><source ref="id844" /><target ref="id834" /><label kind="guard" x="1304" y="1396">!(k &lt; burst_len)</label><label kind="comments">Guard:
nodeID: 21096, file: tlm2_simple_master.cpp, line: 69</label><nail x="1296" y="1332" /><nail x="1296" y="1492" /></transition><transition><source ref="id833" /><target ref="id836" /><label kind="guard" x="3332" y="1047">cmd == TLM_READ_COMMAND</label><label kind="comments">Guard:
nodeID: 21168, file: tlm2_simple_master.cpp, line: 75</label><nail x="3324" y="698" /><nail x="3324" y="1428" /></transition><transition><source ref="id836" /><target ref="id834" /><label kind="guard" x="1423" y="1460">addr_is_valid_tlmdata(d)</label><label kind="assignment" x="1423" y="1473">tlmdataMem[d].command = TLM_READ_COMMAND</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 21198, file: tlm2_simple_master.cpp, line: 76</label><nail x="1415" y="1460" /><nail x="1415" y="1492" /></transition><transition><source ref="id833" /><target ref="id847" /><label kind="guard" x="1159" y="713">!(cmd == TLM_WRITE_COMMAND)  &amp;&amp;
!(cmd == TLM_READ_COMMAND)</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1</label><nail x="1151" y="698" /><nail x="1151" y="762" /></transition><transition><source ref="id847" /><target ref="id834" /><label kind="guard" x="902" y="1127">addr_is_valid_tlmdata(d)</label><label kind="assignment" x="902" y="1140">tlmdataMem[d].command = TLM_IGNORE_COMMAND</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: 21228, file: tlm2_simple_master.cpp, line: 80</label><nail x="894" y="794" /><nail x="894" y="1492" /></transition><transition><source ref="id851" /><target ref="id854" /><label kind="guard" x="652" y="1071">cmd == TLM_READ_COMMAND</label><label kind="comments">Guard:
nodeID: 21296, file: tlm2_simple_master.cpp, line: 88</label><nail x="644" y="1701" /><nail x="644" y="474" /></transition><transition><source ref="id854" /><target ref="id856" /><label kind="assignment" x="597" y="1032">m = 0</label><label kind="comments">Update:
nodeID: 21394, file: tlm2_simple_master.cpp, line: 91</label><nail x="589" y="474" /><nail x="589" y="1622" /></transition><transition><source ref="id856" /><target ref="id858" /><label kind="guard" x="441" y="1016">m &lt; burst_len</label><label kind="comments">Guard:
nodeID: 21416, file: tlm2_simple_master.cpp, line: 91</label><nail x="433" y="1622" /><nail x="433" y="442" /></transition><transition><source ref="id858" /><target ref="id856" /><label kind="assignment" x="550" y="1016">m++</label><label kind="comments">Update:
nodeID: 21434, file: tlm2_simple_master.cpp, line: 91</label><nail x="542" y="442" /><nail x="542" y="1622" /></transition><transition><source ref="id856" /><target ref="id853" /><label kind="guard" x="441" y="1693">!(m &lt; burst_len)</label><label kind="comments">Guard:
nodeID: 21416, file: tlm2_simple_master.cpp, line: 91</label><nail x="433" y="1654" /><nail x="433" y="1765" /></transition><transition><source ref="id851" /><target ref="id853" /><label kind="guard" x="565" y="1733">!(cmd == TLM_READ_COMMAND)</label><label kind="comments">Guard:
nodeID: 21296, file: tlm2_simple_master.cpp, line: 88</label><nail x="557" y="1733" /><nail x="557" y="1765" /></transition><transition><source ref="id853" /><target ref="id859" /><label kind="guard" x="441" y="1797">tlmdataMem[d].response_status == TLM_OK_RESPONSE</label><label kind="comments">Guard:
nodeID: 21498, file: tlm2_simple_master.cpp, line: 98</label><nail x="433" y="1797" /><nail x="433" y="1829" /></transition><transition><source ref="id853" /><target ref="id859" /><label kind="guard" x="866" y="1797">!(tlmdataMem[d].response_status == TLM_OK_RESPONSE)</label><label kind="comments">Guard:
nodeID: 21498, file: tlm2_simple_master.cpp, line: 98</label><nail x="858" y="1797" /><nail x="858" y="1829" /></transition><transition><source ref="id859" /><target ref="id863" /><label kind="assignment" x="441" y="1972">wait_clks = 20,
n = 0</label><label kind="comments">Update:
nodeID: 21584, file: tlm2_simple_master.cpp, line: 103,
nodeID: 21688, file: tlm2_simple_master.cpp, line: 106</label><nail x="433" y="1861" /><nail x="433" y="2117" /></transition><transition><source ref="id863" /><target ref="id864" /><label kind="guard" x="336" y="1989">n &lt; wait_clks</label><label kind="comments">Guard:
nodeID: 21710, file: tlm2_simple_master.cpp, line: 106</label><nail x="328" y="2117" /><nail x="328" y="1893" /></transition><transition><source ref="id868" /><target ref="id863" /><label kind="synchronisation" x="167" y="2085">activate?</label><label kind="assignment" x="167" y="2098">n++</label><label kind="comments">Update:
nodeID: 21728, file: tlm2_simple_master.cpp, line: 106</label><nail x="159" y="2085" /><nail x="159" y="2117" /></transition><transition><source ref="id863" /><target ref="id814" /><label kind="guard" x="167" y="2149">!(n &lt; wait_clks)</label><label kind="comments">Guard:
nodeID: 21710, file: tlm2_simple_master.cpp, line: 106</label><nail x="159" y="2149" /><nail x="159" y="2181" /></transition><transition><source ref="id814" /><target ref="id812" /><label kind="assignment" x="167" y="2213">l++</label><label kind="comments">Update:
nodeID: 20417, file: tlm2_simple_master.cpp, line: 24</label><nail x="159" y="2213" /><nail x="159" y="2245" /></transition><transition><source ref="id812" /><target ref="id810" /><label kind="guard" x="167" y="2277">!(l &lt; 2)</label><label kind="comments">Guard:
nodeID: 20399, file: tlm2_simple_master.cpp, line: 24</label><nail x="159" y="2277" /><nail x="159" y="2309" /></transition><transition><source ref="id810" /><target ref="id808" /><label kind="assignment" x="8624" y="1295">i = i + 3</label><label kind="comments">Update:
nodeID: 20343, file: tlm2_simple_master.cpp, line: 22</label><nail x="8616" y="2309" /><nail x="8616" y="314" /></transition><transition><source ref="id808" /><target ref="id804" /><label kind="guard" x="8670" y="218">!(i &lt; slave_addr_range * number_of_slaves)</label><label kind="comments">Guard:
nodeID: 20315, file: tlm2_simple_master.cpp, line: 22</label><nail x="8662" y="282" /><nail x="8662" y="186" /></transition><transition><source ref="id804" /><target ref="id805" /><label kind="guard" x="8997" y="1247">!(true)</label><label kind="comments">Guard:
nodeID: 20275, file: tlm2_simple_master.cpp, line: 20</label><nail x="8989" y="186" /><nail x="8989" y="2341" /></transition><transition><source ref="id797" /><target ref="id795" /><label kind="synchronisation" x="8" y="1203">thread_process$ctrl!</label><label kind="comments" /><nail x="0" y="2407" /><nail x="0" y="32" /></transition><transition><source ref="id834" /><target ref="id943" /><label kind="assignment" x="902" y="1524">init_sock$b_transport$param$tran = d,
init_sock$b_transport$param$t = delay</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="894" y="1524" /><nail x="894" y="1558" /></transition><transition><source ref="id943" /><target ref="id852" /><label kind="synchronisation" x="902" y="1590">init_sock$b_transport$ctrl!</label><label kind="comments" /><nail x="894" y="1590" /><nail x="894" y="1622" /></transition><transition><source ref="id852" /><target ref="id851" /><label kind="synchronisation" x="902" y="1654">init_sock$b_transport$ctrl?</label><label kind="assignment" x="902" y="1667">init_sock$b_transport$param$tran = NULL,
init_sock$b_transport$param$t = NULL</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="894" y="1654" /><nail x="894" y="1701" /></transition><transition><source ref="id864" /><target ref="id946" /><label kind="assignment" x="167" y="1893">readyprocs--</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="159" y="1893" /><nail x="159" y="1925" /></transition><transition><source ref="id946" /><target ref="id867" /><label kind="synchronisation" x="167" y="1957">deactivate!</label><label kind="comments" /><nail x="159" y="1957" /><nail x="159" y="1989" /></transition><transition><source ref="id867" /><target ref="id868" /><label kind="synchronisation" x="167" y="2021">pos_clk_edge$wait?</label><label kind="assignment" x="167" y="2034">readyprocs++</label><label kind="comments">Update:
nodeID: -1, file: , line: -1</label><nail x="159" y="2021" /><nail x="159" y="2053" /></transition><transition><source ref="id805" /><target ref="id797" /><label kind="assignment" x="167" y="2373">empty_stack_arr_unsigned_int(dataArr),
empty_stack_int(delay)</label><label kind="comments">Update:
nodeID: -1, file: , line: -1,
nodeID: -1, file: , line: -1</label><nail x="159" y="2373" /><nail x="159" y="2407" /></transition><transition><source ref="id818" /><target ref="id1176" /><label kind="guard" x="6703" y="922">!(addr_is_valid_int(delay))</label><label kind="assignment" x="6703" y="935">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="6695" y="922" /><nail x="6695" y="954" /></transition><transition><source ref="id822" /><target ref="id1177" /><label kind="guard" x="6151" y="810">!(addr_is_valid_tlmdata(d))</label><label kind="assignment" x="6151" y="823">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="6143" y="1114" /><nail x="6143" y="538" /></transition><transition><source ref="id829" /><target ref="id1178" /><label kind="guard" x="5669" y="871">!(addr_is_valid_tlmdata(d))</label><label kind="assignment" x="5669" y="884">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="5661" y="1204" /><nail x="5661" y="570" /></transition><transition><source ref="id830" /><target ref="id1179" /><label kind="guard" x="5192" y="919">!(addr_is_valid_tlmdata(d))</label><label kind="assignment" x="5192" y="932">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="5184" y="1268" /><nail x="5184" y="602" /></transition><transition><source ref="id831" /><target ref="id1180" /><label kind="guard" x="4651" y="967">!(addr_is_valid_tlmdata(d))</label><label kind="assignment" x="4651" y="980">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="4643" y="1332" /><nail x="4643" y="634" /></transition><transition><source ref="id832" /><target ref="id1181" /><label kind="guard" x="4077" y="1015">!(addr_is_valid_tlmdata(d))</label><label kind="assignment" x="4077" y="1028">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="4069" y="1396" /><nail x="4069" y="666" /></transition><transition><source ref="id835" /><target ref="id1182" /><label kind="guard" x="2663" y="858">!(addr_is_valid_tlmdata(d))</label><label kind="assignment" x="2663" y="871">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="2655" y="890" /><nail x="2655" y="858" /></transition><transition><source ref="id840" /><target ref="id1183" /><label kind="guard" x="1500" y="1018">!(addr_is_valid_unsigned_int(dataArr)  &amp;&amp;
addr_is_valid_unsigned_int(dataArr + j)  &amp;&amp;
is_arr_elem_unsigned_int(dataArr,
j))</label><label kind="assignment" x="1500" y="1076">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="1492" y="1095" /><nail x="1492" y="1018" /></transition><transition><source ref="id836" /><target ref="id1184" /><label kind="guard" x="1423" y="1380">!(addr_is_valid_tlmdata(d))</label><label kind="assignment" x="1423" y="1393">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="1415" y="1428" /><nail x="1415" y="1364" /></transition><transition><source ref="id847" /><target ref="id1185" /><label kind="guard" x="902" y="730">!(addr_is_valid_tlmdata(d))</label><label kind="assignment" x="902" y="743">MEM_ERR_ACCESS_FAIL = true</label><label kind="comments">Guard:
nodeID: -1, file: , line: -1Update:
nodeID: -1, file: , line: -1</label><nail x="894" y="762" /><nail x="894" y="730" /></transition></template><system>AHB_Bus$ahb_simple_bus$ahb_simple_bus$arbitrate = ahb_simple_bus$arbitrate(AHB_Bus$m_InService_Register, AHB_Bus$m_BusRequest_Register, AHB_Bus$current_req_master, AHB_Bus$ahb_simple_bus$arbitrate$ctrl);
AHB_Bus$ahb_simple_bus$ahb_simple_bus$bus_grant = ahb_simple_bus$bus_grant(AHB_Bus$m_grant_time, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$param$tran, AHB_Bus$m_grant_txn, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$ctrl, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$return, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$param$t, AHB_Bus$m_grant_phase, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$param$tran, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$param$phase, AHB_Bus$ahb_simple_bus$bus_grant$ctrl, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$ctrl, AHB_Bus$current_req_master, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$param$t, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$return, AHB_Bus$ahb_simple_bus$arbitrate$ctrl, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$param$phase);
AHB_Bus$ahb_simple_bus$ahb_simple_bus$bus_ungrant = ahb_simple_bus$bus_ungrant(AHB_Bus$m_grant_time, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$param$tran, AHB_Bus$m_grant_txn, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$ctrl, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$return, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$param$t, AHB_Bus$m_grant_phase, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$param$tran, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$param$phase, AHB_Bus$m_InService_Register, AHB_Bus$bus_grant_ev$notify_imm, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$ctrl, AHB_Bus$outstanding_txn_count, AHB_Bus$ahb_simple_bus$bus_ungrant$ctrl, AHB_Bus$m_BusRequest_Register, AHB_Bus$current_req_master, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$param$t, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$return, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$param$phase);
AHB_Bus$ahb_simple_bus$ahb_simple_bus$get_index = ahb_simple_bus$get_index(AHB_Bus$ahb_simple_bus$get_index$ctrl, AHB_Bus$ahb_simple_bus$get_index$param$address, AHB_Bus$ahb_simple_bus$get_index$return);
AHB_Bus$ahb_simple_bus$ahb_simple_bus$nb_transport_bw = ahb_simple_bus$nb_transport_bw(AHB_M2$tlm2_master_to_ahb$nb_transport_bw$param$tran, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$ctrl, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$return, AHB_Bus$m_default_size, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$param$t, AHB_Bus$m_req_sample_time, AHB_Bus$m_drop_cycle, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$param$tran, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$param$phase, AHB_Bus$ahb_simple_bus$nb_transport_bw$param$t, AHB_Bus$current_data_master, AHB_Bus$ahb_simple_bus$nb_transport_bw$return, AHB_Bus$data_count, AHB_Bus$end_data_ev$notify_t, AHB_Bus$ahb_simple_bus$nb_transport_bw$ctrl, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$ctrl, AHB_Bus$end_data_ev$notify, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$param$t, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$return, AHB_Bus$ahb_simple_bus$nb_transport_bw$param$phase, AHB_Bus$outstanding_data, AHB_Bus$ahb_simple_bus$nb_transport_bw$param$tran, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$param$phase);
AHB_Bus$ahb_simple_bus$ahb_simple_bus$nb_transport_fw = ahb_simple_bus$nb_transport_fw(AHB_Bus$ahb_simple_bus$get_index$ctrl, AHB_S2$ahb_simple_mem$nb_transport_fw$return, AHB_Bus$m_default_size, AHB_Bus$bus_grant_ev$notify_t, AHB_Bus$ahb_simple_bus$nb_transport_fw$param$t, AHB_S1$ahb_simple_mem$nb_transport_fw$param$phase, AHB_Bus$ahb_simple_bus$nb_transport_fw$return, AHB_Bus$ahb_simple_bus$nb_transport_fw$param$tran, AHB_Bus$data_count, AHB_S1$ahb_simple_mem$nb_transport_fw$ctrl, AHB_Bus$ahb_simple_bus$nb_transport_bw$ctrl, AHB_Bus$m_outstanding_req_type, AHB_Bus$bus_ungrant_ev$notify, AHB_Bus$outstanding_txn_count, AHB_S2$ahb_simple_mem$nb_transport_fw$ctrl, AHB_Bus$m_bus_req_sample_time, AHB_Bus$outstanding_data, AHB_Bus$ahb_simple_bus$get_index$return, AHB_Bus$ahb_simple_bus$nb_transport_bw$param$tran, AHB_S1$ahb_simple_mem$nb_transport_fw$param$t, AHB_Bus$bus_grant_ev$notify, AHB_Bus$ahb_simple_bus$nb_transport_fw$ctrl, AHB_Bus$ahb_simple_bus$get_index$param$address, AHB_Bus$ahb_simple_bus$nb_transport_bw$param$t, AHB_Bus$bus_ungrant_ev$notify_t, AHB_Bus$current_data_master, AHB_S2$ahb_simple_mem$nb_transport_fw$param$t, AHB_Bus$ahb_simple_bus$nb_transport_fw$param$phase, AHB_Bus$outstanding_req, AHB_Bus$m_BusRequest_Register, AHB_Bus$current_req_master, AHB_S1$ahb_simple_mem$nb_transport_fw$return, AHB_Bus$ahb_simple_bus$nb_transport_bw$param$phase, AHB_S2$ahb_simple_mem$nb_transport_fw$param$phase, AHB_S2$ahb_simple_mem$nb_transport_fw$param$tran, AHB_S1$ahb_simple_mem$nb_transport_fw$param$tran);
AHB_Bus$ahb_simple_bus$ahb_simple_bus$pendingReqProcess = ahb_simple_bus$pendingReqProcess(AHB_Bus$ahb_simple_bus$get_index$ctrl, AHB_S2$ahb_simple_mem$nb_transport_fw$return, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$ctrl, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$param$phase, AHB_S1$ahb_simple_mem$nb_transport_fw$param$phase, AHB_Bus$data_count, AHB_S1$ahb_simple_mem$nb_transport_fw$ctrl, AHB_Bus$m_outstanding_req_type, AHB_Bus$bus_ungrant_ev$notify, AHB_Bus$outstanding_txn_count, AHB_Bus$ahb_simple_bus$pendingReqProcess$ctrl, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$param$t, AHB_S2$ahb_simple_mem$nb_transport_fw$ctrl, AHB_Bus$m_bus_req_sample_time, AHB_Bus$outstanding_data, AHB_Bus$ahb_simple_bus$get_index$return, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$param$tran, AHB_S1$ahb_simple_mem$nb_transport_fw$param$t, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$return, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$param$t, AHB_Bus$ahb_simple_bus$get_index$param$address, AHB_Bus$m_drop_cycle, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$param$tran, AHB_Bus$bus_ungrant_ev$notify_t, AHB_Bus$current_data_master, AHB_S2$ahb_simple_mem$nb_transport_fw$param$t, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$ctrl, AHB_Bus$outstanding_req, AHB_Bus$current_req_master, AHB_S1$ahb_simple_mem$nb_transport_fw$return, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$return, AHB_S2$ahb_simple_mem$nb_transport_fw$param$phase, AHB_S2$ahb_simple_mem$nb_transport_fw$param$tran, AHB_S1$ahb_simple_mem$nb_transport_fw$param$tran, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$param$phase);
AHB_Bus$bus_grant_ev = SCEventTemplate(AHB_Bus$bus_grant_ev$notify_imm, AHB_Bus$bus_grant_ev$notify_t, AHB_Bus$bus_grant_ev$notify, AHB_Bus$bus_grant_ev$wait);
AHB_Bus$bus_ungrant_ev = SCEventTemplate(AHB_Bus$bus_ungrant_ev$notify_imm, AHB_Bus$bus_ungrant_ev$notify_t, AHB_Bus$bus_ungrant_ev$notify, AHB_Bus$bus_ungrant_ev$wait);
AHB_Bus$end_data_ev = SCEventTemplate(AHB_Bus$end_data_ev$notify_imm, AHB_Bus$end_data_ev$notify_t, AHB_Bus$end_data_ev$notify, AHB_Bus$end_data_ev$wait);
AHB_Bus$thread0$sensitive = ahb_simple_bus$thread0$sensitiveTemp(AHB_Bus$bus_ungrant_ev$wait, AHB_Bus$thread0$sensitivechan);
AHB_Bus$thread0$starter = MethodStarterNoInitTemplate(AHB_Bus$ahb_simple_bus$bus_ungrant$ctrl, AHB_Bus$thread0$sensitivechan);
AHB_Bus$thread1$sensitive = ahb_simple_bus$thread1$sensitiveTemp(AHB_Bus$bus_grant_ev$wait, AHB_Bus$thread1$sensitivechan);
AHB_Bus$thread1$starter = MethodStarterNoInitTemplate(AHB_Bus$ahb_simple_bus$bus_grant$ctrl, AHB_Bus$thread1$sensitivechan);
AHB_Bus$thread2$sensitive = ahb_simple_bus$thread2$sensitiveTemp(AHB_Bus$end_data_ev$wait, AHB_Bus$thread2$sensitivechan);
AHB_Bus$thread2$starter = MethodStarterNoInitTemplate(AHB_Bus$ahb_simple_bus$pendingReqProcess$ctrl, AHB_Bus$thread2$sensitivechan);
AHB_M1$b_transport_finished_ev = SCEventTemplate(AHB_M1$b_transport_finished_ev$notify_imm, AHB_M1$b_transport_finished_ev$notify_t, AHB_M1$b_transport_finished_ev$notify, AHB_M1$b_transport_finished_ev$wait);
AHB_M1$m_peq$peq_element0 = peq_element$data(AHB_M1$tlm2_master_to_ahb$peq_cb$param$tran, AHB_M1$m_peq$peq_element$param$trans, AHB_M1$m_peq$fetch$peq_fetch$ctrl, AHB_M1$tlm2_master_to_ahb$peq_cb$param$phase, AHB_M1$m_peq$peq_element$param$phase, AHB_M1$m_peq$peq_element$param$delay, AHB_M1$m_peq$notify$peqInUse[0], AHB_M1$m_peq$notify$peq_element$ctrl[0]);
AHB_M1$m_peq$peq_element1 = peq_element$data(AHB_M1$tlm2_master_to_ahb$peq_cb$param$tran, AHB_M1$m_peq$peq_element$param$trans, AHB_M1$m_peq$fetch$peq_fetch$ctrl, AHB_M1$tlm2_master_to_ahb$peq_cb$param$phase, AHB_M1$m_peq$peq_element$param$phase, AHB_M1$m_peq$peq_element$param$delay, AHB_M1$m_peq$notify$peqInUse[1], AHB_M1$m_peq$notify$peq_element$ctrl[1]);
AHB_M1$m_peq$peq_element2 = peq_element$data(AHB_M1$tlm2_master_to_ahb$peq_cb$param$tran, AHB_M1$m_peq$peq_element$param$trans, AHB_M1$m_peq$fetch$peq_fetch$ctrl, AHB_M1$tlm2_master_to_ahb$peq_cb$param$phase, AHB_M1$m_peq$peq_element$param$phase, AHB_M1$m_peq$peq_element$param$delay, AHB_M1$m_peq$notify$peqInUse[2], AHB_M1$m_peq$notify$peq_element$ctrl[2]);
AHB_M1$m_peq$peq_element3 = peq_element$data(AHB_M1$tlm2_master_to_ahb$peq_cb$param$tran, AHB_M1$m_peq$peq_element$param$trans, AHB_M1$m_peq$fetch$peq_fetch$ctrl, AHB_M1$tlm2_master_to_ahb$peq_cb$param$phase, AHB_M1$m_peq$peq_element$param$phase, AHB_M1$m_peq$peq_element$param$delay, AHB_M1$m_peq$notify$peqInUse[3], AHB_M1$m_peq$notify$peq_element$ctrl[3]);
AHB_M1$m_peq$peq_fetch = peq_fetch$data(AHB_M1$tlm2_master_to_ahb$peq_cb$ctrl, AHB_M1$m_peq$fetch$peq_fetch$ctrl);
AHB_M1$m_peq$peq_notify = peq_notify$data$4(AHB_M1$m_peq$notify$peqInUse, AHB_M1$m_peq$notify$peq_notify$ctrl, AHB_M1$m_peq$notify$peq_element$ctrl);
AHB_M1$thread0$sensitive = tlm2_master_to_ahb$thread0$sensitiveTemp(AHB_M1$thread0$sensitivechan, clk$change$wait);
AHB_M1$thread0$starter = MethodStarterNoInitTemplate(AHB_M1$tlm2_master_to_ahb$clock_tick$ctrl, AHB_M1$thread0$sensitivechan);
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$busGranted = tlm2_master_to_ahb$busGranted(AHB_M1$tlm2_master_to_ahb$startRequest$ctrl, AHB_M1$tlm2_master_to_ahb$busGranted$ctrl, AHB_M1$current_trans, AHB_M1$tlm2_master_to_ahb$resumeRequest$ctrl, AHB_M1$m_txn_count);
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$busNotGranted = tlm2_master_to_ahb$busNotGranted(AHB_Bus$ahb_simple_bus$nb_transport_fw$param$phase, AHB_Bus$ahb_simple_bus$nb_transport_fw$param$tran, AHB_Bus$ahb_simple_bus$nb_transport_fw$ctrl, AHB_Bus$ahb_simple_bus$nb_transport_fw$param$t, AHB_M1$tlm2_master_to_ahb$busNotGranted$ctrl, AHB_Bus$ahb_simple_bus$nb_transport_fw$return, AHB_M1$current_trans, AHB_M1$m_bus_req_pending, AHB_M1$m_bus_granted);
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$clock_tick = tlm2_master_to_ahb$clock_tick(AHB_M1$tlm2_master_to_ahb$requestProcess$ctrl, AHB_M1$tlm2_master_to_ahb$clock_tick$ctrl, AHB_M1$tlm2_master_to_ahb$dataProcess$ctrl);
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$dataProcess = tlm2_master_to_ahb$dataProcess(AHB_M1$current_DataLength, AHB_M1$tlm2_master_to_ahb$sendData$ctrl, AHB_M1$tlm2_master_to_ahb$dataProcess$ctrl, AHB_M1$m_restart_pending_req, AHB_M1$m_request_pending, AHB_M1$m_data_pending, AHB_M1$current_trans, AHB_M1$m_txn_count, AHB_M1$m_data_count);
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$nb_transport_bw = tlm2_master_to_ahb$nb_transport_bw(AHB_M1$m_peq$notify$peq_notify$ctrl, AHB_M1$m_peq$peq_element$param$delay, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$param$t, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$return, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$ctrl, AHB_M1$m_peq$peq_element$param$phase, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$param$phase, AHB_M1$m_peq$peq_element$param$trans, AHB_M1$tlm2_master_to_ahb$nb_transport_bw$param$tran);
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$peq_cb = tlm2_master_to_ahb$peq_cb(AHB_M1$tlm2_master_to_ahb$requestProcess$ctrl, AHB_M1$b_transport_finished_ev$notify_imm, AHB_M1$tlm2_master_to_ahb$peq_cb$param$phase, AHB_M1$tlm2_master_to_ahb$dataProcess$ctrl, AHB_M1$m_restart_pending_req, AHB_M1$m_request_pending, AHB_M1$tlm2_master_to_ahb$peq_cb$ctrl, AHB_M1$tlm2_master_to_ahb$receiveData$ctrl, AHB_M1$tlm2_master_to_ahb$peq_cb$param$tran, AHB_M1$m_data_pending, AHB_M1$current_trans, AHB_M1$m_txn_count, AHB_M1$m_bus_req_pending, AHB_M1$m_bus_granted, AHB_M1$m_data_count, AHB_M1$tlm2_master_to_ahb$receiveData$param$tran);
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$receiveData = tlm2_master_to_ahb$receiveData(AHB_M1$b_transport_finished_ev$notify_imm, AHB_M1$tlm2_master_to_ahb$receiveData$ctrl, AHB_M1$m_data_pending, AHB_M1$m_data_count, AHB_M1$tlm2_master_to_ahb$receiveData$param$tran);
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$requestProcess = tlm2_master_to_ahb$requestProcess(AHB_M1$tlm2_master_to_ahb$requestProcess$ctrl, AHB_M1$current_DataLength, AHB_M1$tlm2_master_to_ahb$busNotGranted$ctrl, AHB_M1$tlm2_master_to_ahb$busGranted$ctrl, AHB_M1$current_trans, AHB_M1$m_txn_count, AHB_M1$m_bus_granted);
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$resumeRequest = tlm2_master_to_ahb$resumeRequest(AHB_Bus$ahb_simple_bus$nb_transport_fw$param$phase, AHB_Bus$ahb_simple_bus$nb_transport_fw$param$tran, AHB_Bus$ahb_simple_bus$nb_transport_fw$ctrl, AHB_Bus$ahb_simple_bus$nb_transport_fw$param$t, AHB_M1$m_restart_pending_req, AHB_M1$m_request_pending, AHB_M1$m_data_pending, AHB_Bus$ahb_simple_bus$nb_transport_fw$return, AHB_M1$current_trans, AHB_M1$tlm2_master_to_ahb$resumeRequest$ctrl, AHB_M1$m_txn_count);
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$sendData = tlm2_master_to_ahb$sendData(AHB_Bus$ahb_simple_bus$nb_transport_fw$param$phase, AHB_M1$b_transport_finished_ev$notify_imm, AHB_Bus$ahb_simple_bus$nb_transport_fw$param$tran, AHB_M1$tlm2_master_to_ahb$sendData$ctrl, AHB_Bus$ahb_simple_bus$nb_transport_fw$ctrl, AHB_Bus$ahb_simple_bus$nb_transport_fw$param$t, AHB_M1$m_data_pending, AHB_Bus$ahb_simple_bus$nb_transport_fw$return, AHB_M1$current_trans, AHB_M1$m_data_count);
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$startRequest = tlm2_master_to_ahb$startRequest(AHB_Bus$ahb_simple_bus$nb_transport_fw$param$phase, AHB_Bus$ahb_simple_bus$nb_transport_fw$param$tran, AHB_Bus$ahb_simple_bus$nb_transport_fw$ctrl, AHB_M1$tlm2_master_to_ahb$startRequest$ctrl, AHB_Bus$ahb_simple_bus$nb_transport_fw$param$t, AHB_M1$m_request_pending, AHB_Bus$ahb_simple_bus$nb_transport_fw$return, AHB_M1$current_trans, AHB_M1$m_txn_count, AHB_M1$m_data_count);
AHB_M2$b_transport_finished_ev = SCEventTemplate(AHB_M2$b_transport_finished_ev$notify_imm, AHB_M2$b_transport_finished_ev$notify_t, AHB_M2$b_transport_finished_ev$notify, AHB_M2$b_transport_finished_ev$wait);
AHB_M2$m_peq$peq_element0 = peq_element$data(AHB_M2$tlm2_master_to_ahb$peq_cb$param$tran, AHB_M2$m_peq$peq_element$param$trans, AHB_M2$m_peq$fetch$peq_fetch$ctrl, AHB_M2$tlm2_master_to_ahb$peq_cb$param$phase, AHB_M2$m_peq$peq_element$param$phase, AHB_M2$m_peq$peq_element$param$delay, AHB_M2$m_peq$notify$peqInUse[0], AHB_M2$m_peq$notify$peq_element$ctrl[0]);
AHB_M2$m_peq$peq_element1 = peq_element$data(AHB_M2$tlm2_master_to_ahb$peq_cb$param$tran, AHB_M2$m_peq$peq_element$param$trans, AHB_M2$m_peq$fetch$peq_fetch$ctrl, AHB_M2$tlm2_master_to_ahb$peq_cb$param$phase, AHB_M2$m_peq$peq_element$param$phase, AHB_M2$m_peq$peq_element$param$delay, AHB_M2$m_peq$notify$peqInUse[1], AHB_M2$m_peq$notify$peq_element$ctrl[1]);
AHB_M2$m_peq$peq_element2 = peq_element$data(AHB_M2$tlm2_master_to_ahb$peq_cb$param$tran, AHB_M2$m_peq$peq_element$param$trans, AHB_M2$m_peq$fetch$peq_fetch$ctrl, AHB_M2$tlm2_master_to_ahb$peq_cb$param$phase, AHB_M2$m_peq$peq_element$param$phase, AHB_M2$m_peq$peq_element$param$delay, AHB_M2$m_peq$notify$peqInUse[2], AHB_M2$m_peq$notify$peq_element$ctrl[2]);
AHB_M2$m_peq$peq_element3 = peq_element$data(AHB_M2$tlm2_master_to_ahb$peq_cb$param$tran, AHB_M2$m_peq$peq_element$param$trans, AHB_M2$m_peq$fetch$peq_fetch$ctrl, AHB_M2$tlm2_master_to_ahb$peq_cb$param$phase, AHB_M2$m_peq$peq_element$param$phase, AHB_M2$m_peq$peq_element$param$delay, AHB_M2$m_peq$notify$peqInUse[3], AHB_M2$m_peq$notify$peq_element$ctrl[3]);
AHB_M2$m_peq$peq_fetch = peq_fetch$data(AHB_M2$tlm2_master_to_ahb$peq_cb$ctrl, AHB_M2$m_peq$fetch$peq_fetch$ctrl);
AHB_M2$m_peq$peq_notify = peq_notify$data$4(AHB_M2$m_peq$notify$peqInUse, AHB_M2$m_peq$notify$peq_notify$ctrl, AHB_M2$m_peq$notify$peq_element$ctrl);
AHB_M2$thread0$sensitive = tlm2_master_to_ahb$thread0$sensitiveTemp(AHB_M2$thread0$sensitivechan, clk$change$wait);
AHB_M2$thread0$starter = MethodStarterNoInitTemplate(AHB_M2$tlm2_master_to_ahb$clock_tick$ctrl, AHB_M2$thread0$sensitivechan);
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$busGranted = tlm2_master_to_ahb$busGranted(AHB_M2$tlm2_master_to_ahb$startRequest$ctrl, AHB_M2$tlm2_master_to_ahb$busGranted$ctrl, AHB_M2$current_trans, AHB_M2$tlm2_master_to_ahb$resumeRequest$ctrl, AHB_M2$m_txn_count);
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$busNotGranted = tlm2_master_to_ahb$busNotGranted(AHB_Bus$ahb_simple_bus$nb_transport_fw$param$phase, AHB_Bus$ahb_simple_bus$nb_transport_fw$param$tran, AHB_Bus$ahb_simple_bus$nb_transport_fw$ctrl, AHB_Bus$ahb_simple_bus$nb_transport_fw$param$t, AHB_M2$tlm2_master_to_ahb$busNotGranted$ctrl, AHB_Bus$ahb_simple_bus$nb_transport_fw$return, AHB_M2$current_trans, AHB_M2$m_bus_req_pending, AHB_M2$m_bus_granted);
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$clock_tick = tlm2_master_to_ahb$clock_tick(AHB_M2$tlm2_master_to_ahb$requestProcess$ctrl, AHB_M2$tlm2_master_to_ahb$clock_tick$ctrl, AHB_M2$tlm2_master_to_ahb$dataProcess$ctrl);
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$dataProcess = tlm2_master_to_ahb$dataProcess(AHB_M2$current_DataLength, AHB_M2$tlm2_master_to_ahb$sendData$ctrl, AHB_M2$tlm2_master_to_ahb$dataProcess$ctrl, AHB_M2$m_restart_pending_req, AHB_M2$m_request_pending, AHB_M2$m_data_pending, AHB_M2$current_trans, AHB_M2$m_txn_count, AHB_M2$m_data_count);
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$nb_transport_bw = tlm2_master_to_ahb$nb_transport_bw(AHB_M2$m_peq$notify$peq_notify$ctrl, AHB_M2$m_peq$peq_element$param$delay, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$param$t, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$return, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$ctrl, AHB_M2$m_peq$peq_element$param$phase, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$param$phase, AHB_M2$m_peq$peq_element$param$trans, AHB_M2$tlm2_master_to_ahb$nb_transport_bw$param$tran);
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$peq_cb = tlm2_master_to_ahb$peq_cb(AHB_M2$tlm2_master_to_ahb$requestProcess$ctrl, AHB_M2$b_transport_finished_ev$notify_imm, AHB_M2$tlm2_master_to_ahb$peq_cb$param$phase, AHB_M2$tlm2_master_to_ahb$dataProcess$ctrl, AHB_M2$m_restart_pending_req, AHB_M2$m_request_pending, AHB_M2$tlm2_master_to_ahb$peq_cb$ctrl, AHB_M2$tlm2_master_to_ahb$receiveData$ctrl, AHB_M2$tlm2_master_to_ahb$peq_cb$param$tran, AHB_M2$m_data_pending, AHB_M2$current_trans, AHB_M2$m_txn_count, AHB_M2$m_bus_req_pending, AHB_M2$m_bus_granted, AHB_M2$m_data_count, AHB_M2$tlm2_master_to_ahb$receiveData$param$tran);
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$receiveData = tlm2_master_to_ahb$receiveData(AHB_M2$b_transport_finished_ev$notify_imm, AHB_M2$tlm2_master_to_ahb$receiveData$ctrl, AHB_M2$m_data_pending, AHB_M2$m_data_count, AHB_M2$tlm2_master_to_ahb$receiveData$param$tran);
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$requestProcess = tlm2_master_to_ahb$requestProcess(AHB_M2$tlm2_master_to_ahb$requestProcess$ctrl, AHB_M2$current_DataLength, AHB_M2$tlm2_master_to_ahb$busNotGranted$ctrl, AHB_M2$tlm2_master_to_ahb$busGranted$ctrl, AHB_M2$current_trans, AHB_M2$m_txn_count, AHB_M2$m_bus_granted);
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$resumeRequest = tlm2_master_to_ahb$resumeRequest(AHB_Bus$ahb_simple_bus$nb_transport_fw$param$phase, AHB_Bus$ahb_simple_bus$nb_transport_fw$param$tran, AHB_Bus$ahb_simple_bus$nb_transport_fw$ctrl, AHB_Bus$ahb_simple_bus$nb_transport_fw$param$t, AHB_M2$m_restart_pending_req, AHB_M2$m_request_pending, AHB_M2$m_data_pending, AHB_Bus$ahb_simple_bus$nb_transport_fw$return, AHB_M2$current_trans, AHB_M2$tlm2_master_to_ahb$resumeRequest$ctrl, AHB_M2$m_txn_count);
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$sendData = tlm2_master_to_ahb$sendData(AHB_Bus$ahb_simple_bus$nb_transport_fw$param$phase, AHB_M2$b_transport_finished_ev$notify_imm, AHB_Bus$ahb_simple_bus$nb_transport_fw$param$tran, AHB_M2$tlm2_master_to_ahb$sendData$ctrl, AHB_Bus$ahb_simple_bus$nb_transport_fw$ctrl, AHB_Bus$ahb_simple_bus$nb_transport_fw$param$t, AHB_M2$m_data_pending, AHB_Bus$ahb_simple_bus$nb_transport_fw$return, AHB_M2$current_trans, AHB_M2$m_data_count);
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$startRequest = tlm2_master_to_ahb$startRequest(AHB_Bus$ahb_simple_bus$nb_transport_fw$param$phase, AHB_Bus$ahb_simple_bus$nb_transport_fw$param$tran, AHB_Bus$ahb_simple_bus$nb_transport_fw$ctrl, AHB_M2$tlm2_master_to_ahb$startRequest$ctrl, AHB_Bus$ahb_simple_bus$nb_transport_fw$param$t, AHB_M2$m_request_pending, AHB_Bus$ahb_simple_bus$nb_transport_fw$return, AHB_M2$current_trans, AHB_M2$m_txn_count, AHB_M2$m_data_count);
AHB_S1$ahb_simple_mem$ahb_simple_mem$nb_transport_fw = ahb_simple_mem$nb_transport_fw(AHB_S1$m_peq$notify$peq_notify$ctrl, AHB_S1$m_peq$peq_element$param$delay, AHB_S1$ahb_simple_mem$nb_transport_fw$ctrl, AHB_S1$ahb_simple_mem$nb_transport_fw$param$t, AHB_S1$ahb_simple_mem$nb_transport_fw$return, AHB_S1$ahb_simple_mem$nb_transport_fw$param$tran, AHB_S1$ahb_simple_mem$nb_transport_fw$param$phase, AHB_S1$m_peq$peq_element$param$phase, AHB_S1$m_peq$peq_element$param$trans);
AHB_S1$ahb_simple_mem$ahb_simple_mem$peq_cb = ahb_simple_mem$peq_cb(AHB_S1$txn_address, AHB_S1$counter, AHB_S1$ahb_simple_mem$peq_cb$param$phase, AHB_S1$ahb_simple_mem$peq_cb$ctrl, AHB_S1$ahb_simple_mem$peq_cb$param$tran, AHB_S1$m_data_pending, AHB_S1$current_trans, AHB_S1$txn_burst_len);
AHB_S1$ahb_simple_mem$ahb_simple_mem$readData = ahb_simple_mem$readData(AHB_S1$txn_address, AHB_S1$counter, AHB_S1$ahb_simple_mem$readData$ctrl, AHB_Bus$ahb_simple_bus$nb_transport_bw$ctrl, AHB_Bus$ahb_simple_bus$nb_transport_bw$param$tran, AHB_Bus$ahb_simple_bus$nb_transport_bw$param$t, AHB_Bus$ahb_simple_bus$nb_transport_bw$return, AHB_S1$m_data_pending, AHB_S1$current_trans, AHB_S1$baseAddr, AHB_S1$ahb_simple_mem$readData$param$burst_size, AHB_S1$MEM, AHB_Bus$ahb_simple_bus$nb_transport_bw$param$phase);
AHB_S1$ahb_simple_mem$ahb_simple_mem$responseProcess = ahb_simple_mem$responseProcess(AHB_S1$ahb_simple_mem$writeData$ctrl, AHB_S1$txn_address, AHB_S1$ahb_simple_mem$writeData$param$burst_size, AHB_S1$counter, AHB_S1$ahb_simple_mem$readData$ctrl, AHB_S1$ahb_simple_mem$responseProcess$ctrl, AHB_S1$m_data_pending, AHB_S1$current_trans, AHB_S1$txn_burst_len, AHB_S1$ahb_simple_mem$readData$param$burst_size);
AHB_S1$ahb_simple_mem$ahb_simple_mem$writeData = ahb_simple_mem$writeData(AHB_S1$ahb_simple_mem$writeData$ctrl, AHB_S1$txn_address, AHB_S1$ahb_simple_mem$writeData$param$burst_size, AHB_S1$counter, AHB_Bus$ahb_simple_bus$nb_transport_bw$ctrl, AHB_Bus$ahb_simple_bus$nb_transport_bw$param$tran, AHB_Bus$ahb_simple_bus$nb_transport_bw$param$t, AHB_Bus$ahb_simple_bus$nb_transport_bw$return, AHB_S1$m_data_pending, AHB_S1$current_trans, AHB_S1$baseAddr, AHB_S1$MEM, AHB_Bus$ahb_simple_bus$nb_transport_bw$param$phase);
AHB_S1$m_peq$peq_element0 = peq_element$data(AHB_S1$ahb_simple_mem$peq_cb$param$tran, AHB_S1$m_peq$peq_element$param$trans, AHB_S1$m_peq$fetch$peq_fetch$ctrl, AHB_S1$ahb_simple_mem$peq_cb$param$phase, AHB_S1$m_peq$peq_element$param$phase, AHB_S1$m_peq$peq_element$param$delay, AHB_S1$m_peq$notify$peqInUse[0], AHB_S1$m_peq$notify$peq_element$ctrl[0]);
AHB_S1$m_peq$peq_element1 = peq_element$data(AHB_S1$ahb_simple_mem$peq_cb$param$tran, AHB_S1$m_peq$peq_element$param$trans, AHB_S1$m_peq$fetch$peq_fetch$ctrl, AHB_S1$ahb_simple_mem$peq_cb$param$phase, AHB_S1$m_peq$peq_element$param$phase, AHB_S1$m_peq$peq_element$param$delay, AHB_S1$m_peq$notify$peqInUse[1], AHB_S1$m_peq$notify$peq_element$ctrl[1]);
AHB_S1$m_peq$peq_element2 = peq_element$data(AHB_S1$ahb_simple_mem$peq_cb$param$tran, AHB_S1$m_peq$peq_element$param$trans, AHB_S1$m_peq$fetch$peq_fetch$ctrl, AHB_S1$ahb_simple_mem$peq_cb$param$phase, AHB_S1$m_peq$peq_element$param$phase, AHB_S1$m_peq$peq_element$param$delay, AHB_S1$m_peq$notify$peqInUse[2], AHB_S1$m_peq$notify$peq_element$ctrl[2]);
AHB_S1$m_peq$peq_element3 = peq_element$data(AHB_S1$ahb_simple_mem$peq_cb$param$tran, AHB_S1$m_peq$peq_element$param$trans, AHB_S1$m_peq$fetch$peq_fetch$ctrl, AHB_S1$ahb_simple_mem$peq_cb$param$phase, AHB_S1$m_peq$peq_element$param$phase, AHB_S1$m_peq$peq_element$param$delay, AHB_S1$m_peq$notify$peqInUse[3], AHB_S1$m_peq$notify$peq_element$ctrl[3]);
AHB_S1$m_peq$peq_fetch = peq_fetch$data(AHB_S1$ahb_simple_mem$peq_cb$ctrl, AHB_S1$m_peq$fetch$peq_fetch$ctrl);
AHB_S1$m_peq$peq_notify = peq_notify$data$4(AHB_S1$m_peq$notify$peqInUse, AHB_S1$m_peq$notify$peq_notify$ctrl, AHB_S1$m_peq$notify$peq_element$ctrl);
AHB_S1$thread0$sensitive = ahb_simple_mem$thread0$sensitiveTemp(AHB_S1$thread0$sensitivechan, clk$change$wait);
AHB_S1$thread0$starter = MethodStarterNoInitTemplate(AHB_S1$ahb_simple_mem$responseProcess$ctrl, AHB_S1$thread0$sensitivechan);
AHB_S2$ahb_simple_mem$ahb_simple_mem$nb_transport_fw = ahb_simple_mem$nb_transport_fw(AHB_S2$m_peq$notify$peq_notify$ctrl, AHB_S2$m_peq$peq_element$param$delay, AHB_S2$ahb_simple_mem$nb_transport_fw$ctrl, AHB_S2$ahb_simple_mem$nb_transport_fw$param$t, AHB_S2$ahb_simple_mem$nb_transport_fw$return, AHB_S2$ahb_simple_mem$nb_transport_fw$param$tran, AHB_S2$ahb_simple_mem$nb_transport_fw$param$phase, AHB_S2$m_peq$peq_element$param$phase, AHB_S2$m_peq$peq_element$param$trans);
AHB_S2$ahb_simple_mem$ahb_simple_mem$peq_cb = ahb_simple_mem$peq_cb(AHB_S2$txn_address, AHB_S2$counter, AHB_S2$ahb_simple_mem$peq_cb$param$phase, AHB_S2$ahb_simple_mem$peq_cb$ctrl, AHB_S2$ahb_simple_mem$peq_cb$param$tran, AHB_S2$m_data_pending, AHB_S2$current_trans, AHB_S2$txn_burst_len);
AHB_S2$ahb_simple_mem$ahb_simple_mem$readData = ahb_simple_mem$readData(AHB_S2$txn_address, AHB_S2$counter, AHB_S2$ahb_simple_mem$readData$ctrl, AHB_Bus$ahb_simple_bus$nb_transport_bw$ctrl, AHB_Bus$ahb_simple_bus$nb_transport_bw$param$tran, AHB_Bus$ahb_simple_bus$nb_transport_bw$param$t, AHB_Bus$ahb_simple_bus$nb_transport_bw$return, AHB_S2$m_data_pending, AHB_S2$current_trans, AHB_S2$baseAddr, AHB_S2$ahb_simple_mem$readData$param$burst_size, AHB_S2$MEM, AHB_Bus$ahb_simple_bus$nb_transport_bw$param$phase);
AHB_S2$ahb_simple_mem$ahb_simple_mem$responseProcess = ahb_simple_mem$responseProcess(AHB_S2$ahb_simple_mem$writeData$ctrl, AHB_S2$txn_address, AHB_S2$ahb_simple_mem$writeData$param$burst_size, AHB_S2$counter, AHB_S2$ahb_simple_mem$readData$ctrl, AHB_S2$ahb_simple_mem$responseProcess$ctrl, AHB_S2$m_data_pending, AHB_S2$current_trans, AHB_S2$txn_burst_len, AHB_S2$ahb_simple_mem$readData$param$burst_size);
AHB_S2$ahb_simple_mem$ahb_simple_mem$writeData = ahb_simple_mem$writeData(AHB_S2$ahb_simple_mem$writeData$ctrl, AHB_S2$txn_address, AHB_S2$ahb_simple_mem$writeData$param$burst_size, AHB_S2$counter, AHB_Bus$ahb_simple_bus$nb_transport_bw$ctrl, AHB_Bus$ahb_simple_bus$nb_transport_bw$param$tran, AHB_Bus$ahb_simple_bus$nb_transport_bw$param$t, AHB_Bus$ahb_simple_bus$nb_transport_bw$return, AHB_S2$m_data_pending, AHB_S2$current_trans, AHB_S2$baseAddr, AHB_S2$MEM, AHB_Bus$ahb_simple_bus$nb_transport_bw$param$phase);
AHB_S2$m_peq$peq_element0 = peq_element$data(AHB_S2$ahb_simple_mem$peq_cb$param$tran, AHB_S2$m_peq$peq_element$param$trans, AHB_S2$m_peq$fetch$peq_fetch$ctrl, AHB_S2$ahb_simple_mem$peq_cb$param$phase, AHB_S2$m_peq$peq_element$param$phase, AHB_S2$m_peq$peq_element$param$delay, AHB_S2$m_peq$notify$peqInUse[0], AHB_S2$m_peq$notify$peq_element$ctrl[0]);
AHB_S2$m_peq$peq_element1 = peq_element$data(AHB_S2$ahb_simple_mem$peq_cb$param$tran, AHB_S2$m_peq$peq_element$param$trans, AHB_S2$m_peq$fetch$peq_fetch$ctrl, AHB_S2$ahb_simple_mem$peq_cb$param$phase, AHB_S2$m_peq$peq_element$param$phase, AHB_S2$m_peq$peq_element$param$delay, AHB_S2$m_peq$notify$peqInUse[1], AHB_S2$m_peq$notify$peq_element$ctrl[1]);
AHB_S2$m_peq$peq_element2 = peq_element$data(AHB_S2$ahb_simple_mem$peq_cb$param$tran, AHB_S2$m_peq$peq_element$param$trans, AHB_S2$m_peq$fetch$peq_fetch$ctrl, AHB_S2$ahb_simple_mem$peq_cb$param$phase, AHB_S2$m_peq$peq_element$param$phase, AHB_S2$m_peq$peq_element$param$delay, AHB_S2$m_peq$notify$peqInUse[2], AHB_S2$m_peq$notify$peq_element$ctrl[2]);
AHB_S2$m_peq$peq_element3 = peq_element$data(AHB_S2$ahb_simple_mem$peq_cb$param$tran, AHB_S2$m_peq$peq_element$param$trans, AHB_S2$m_peq$fetch$peq_fetch$ctrl, AHB_S2$ahb_simple_mem$peq_cb$param$phase, AHB_S2$m_peq$peq_element$param$phase, AHB_S2$m_peq$peq_element$param$delay, AHB_S2$m_peq$notify$peqInUse[3], AHB_S2$m_peq$notify$peq_element$ctrl[3]);
AHB_S2$m_peq$peq_fetch = peq_fetch$data(AHB_S2$ahb_simple_mem$peq_cb$ctrl, AHB_S2$m_peq$fetch$peq_fetch$ctrl);
AHB_S2$m_peq$peq_notify = peq_notify$data$4(AHB_S2$m_peq$notify$peqInUse, AHB_S2$m_peq$notify$peq_notify$ctrl, AHB_S2$m_peq$notify$peq_element$ctrl);
AHB_S2$thread0$sensitive = ahb_simple_mem$thread0$sensitiveTemp(AHB_S2$thread0$sensitivechan, clk$change$wait);
AHB_S2$thread0$starter = MethodStarterNoInitTemplate(AHB_S2$ahb_simple_mem$responseProcess$ctrl, AHB_S2$thread0$sensitivechan);
TLM2_M1$pos_clk_edge = SCEventTemplate(TLM2_M1$pos_clk_edge$notify_imm, TLM2_M1$pos_clk_edge$notify_t, TLM2_M1$pos_clk_edge$notify, TLM2_M1$pos_clk_edge$wait);
TLM2_M1$thread0$sensitive = tlm2_simple_master$thread0$sensitiveTemp(TLM2_M1$thread0$sensitivechan, clk$change$wait);
TLM2_M1$thread0$starter = MethodStarterNoInitTemplate(TLM2_M1$tlm2_simple_master$clock_tick$ctrl, TLM2_M1$thread0$sensitivechan);
TLM2_M1$thread1$AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$b_transport = tlm2_master_to_ahb$b_transport(AHB_M1$current_Address, AHB_M1$current_DataLength, TLM2_M1$thread1$AHB_M1$tlm2_master_to_ahb$b_transport$param$tran, AHB_M1$current_trans, AHB_M1$m_txn_count, AHB_M1$b_transport_finished_ev$wait, TLM2_M1$thread1$AHB_M1$tlm2_master_to_ahb$b_transport$param$t, TLM2_M1$thread1$AHB_M1$tlm2_master_to_ahb$b_transport$ctrl, AHB_M1$master_id, AHB_M1$current_Command);
TLM2_M1$thread1$sensitive = tlm2_simple_master$thread1$sensitiveTemp(TLM2_M1$thread1$sensitivechan);
TLM2_M1$thread1$starter = ThreadStarterTemplate(TLM2_M1$thread1$tlm2_simple_master$thread_process$ctrl);
TLM2_M1$thread1$tlm2_simple_master$tlm2_simple_master$thread_process = tlm2_simple_master$thread_process(TLM2_M1$pos_clk_edge$wait, TLM2_M1$thread1$AHB_M1$tlm2_master_to_ahb$b_transport$param$tran, TLM2_M1$d, TLM2_M1$thread1$tlm2_simple_master$thread_process$ctrl, TLM2_M1$thread1$AHB_M1$tlm2_master_to_ahb$b_transport$ctrl, TLM2_M1$thread1$AHB_M1$tlm2_master_to_ahb$b_transport$param$t);
TLM2_M1$tlm2_simple_master$tlm2_simple_master$clock_tick = tlm2_simple_master$clock_tick(TLM2_M1$pos_clk_edge$notify_imm, TLM2_M1$tlm2_simple_master$clock_tick$ctrl);
TLM2_M2$pos_clk_edge = SCEventTemplate(TLM2_M2$pos_clk_edge$notify_imm, TLM2_M2$pos_clk_edge$notify_t, TLM2_M2$pos_clk_edge$notify, TLM2_M2$pos_clk_edge$wait);
TLM2_M2$thread0$sensitive = tlm2_simple_master$thread0$sensitiveTemp(TLM2_M2$thread0$sensitivechan, clk$change$wait);
TLM2_M2$thread0$starter = MethodStarterNoInitTemplate(TLM2_M2$tlm2_simple_master$clock_tick$ctrl, TLM2_M2$thread0$sensitivechan);
TLM2_M2$thread1$AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$b_transport = tlm2_master_to_ahb$b_transport(AHB_M2$current_Address, AHB_M2$current_DataLength, TLM2_M2$thread1$AHB_M2$tlm2_master_to_ahb$b_transport$param$tran, AHB_M2$current_trans, AHB_M2$m_txn_count, AHB_M2$b_transport_finished_ev$wait, TLM2_M2$thread1$AHB_M2$tlm2_master_to_ahb$b_transport$param$t, TLM2_M2$thread1$AHB_M2$tlm2_master_to_ahb$b_transport$ctrl, AHB_M2$master_id, AHB_M2$current_Command);
TLM2_M2$thread1$sensitive = tlm2_simple_master$thread1$sensitiveTemp(TLM2_M2$thread1$sensitivechan);
TLM2_M2$thread1$starter = ThreadStarterTemplate(TLM2_M2$thread1$tlm2_simple_master$thread_process$ctrl);
TLM2_M2$thread1$tlm2_simple_master$tlm2_simple_master$thread_process = tlm2_simple_master$thread_process(TLM2_M2$pos_clk_edge$wait, TLM2_M2$thread1$AHB_M2$tlm2_master_to_ahb$b_transport$param$tran, TLM2_M2$d, TLM2_M2$thread1$tlm2_simple_master$thread_process$ctrl, TLM2_M2$thread1$AHB_M2$tlm2_master_to_ahb$b_transport$ctrl, TLM2_M2$thread1$AHB_M2$tlm2_master_to_ahb$b_transport$param$t);
TLM2_M2$tlm2_simple_master$tlm2_simple_master$clock_tick = tlm2_simple_master$clock_tick(TLM2_M2$pos_clk_edge$notify_imm, TLM2_M2$tlm2_simple_master$clock_tick$ctrl);
clk$change = SCEventTemplate(clk$change$notify_imm, clk$change$notify_t, clk$change$notify, clk$change$wait);
clk$edge = SCEventTemplate(clk$edge$notify_imm, clk$edge$notify_t, clk$edge$notify, clk$edge$wait);
clk$thread0$sc_clock$sc_clock$run = sc_clock$run(clk$period, clk$edge$notify, clk$change$notify, clk$thread0$sc_clock$run$ctrl, clk$change$notify_t, clk$thread0$timeoutevent$wait, clk$thread0$timeoutevent$notify, clk$val, clk$edge$notify_t, clk$thread0$timeoutevent$notify_t);
clk$thread0$sensitive = sc_clock$thread0$sensitiveTemp(clk$thread0$sensitivechan);
clk$thread0$starter = ThreadStarterTemplate(clk$thread0$sc_clock$run$ctrl);
clk$thread0$timeoutevent = SCEventTemplate(clk$thread0$timeoutevent$notify_imm, clk$thread0$timeoutevent$notify_t, clk$thread0$timeoutevent$notify, clk$thread0$timeoutevent$wait);
initialization = InitializerTemplate();
scheduler = SchedulerTemplate();
scmain = SCMainTemplate();


system AHB_Bus$ahb_simple_bus$ahb_simple_bus$arbitrate,
AHB_Bus$ahb_simple_bus$ahb_simple_bus$bus_grant,
AHB_Bus$ahb_simple_bus$ahb_simple_bus$bus_ungrant,
AHB_Bus$ahb_simple_bus$ahb_simple_bus$get_index,
AHB_Bus$ahb_simple_bus$ahb_simple_bus$nb_transport_bw,
AHB_Bus$ahb_simple_bus$ahb_simple_bus$nb_transport_fw,
AHB_Bus$ahb_simple_bus$ahb_simple_bus$pendingReqProcess,
AHB_Bus$bus_grant_ev,
AHB_Bus$bus_ungrant_ev,
AHB_Bus$end_data_ev,
AHB_Bus$thread0$sensitive,
AHB_Bus$thread0$starter,
AHB_Bus$thread1$sensitive,
AHB_Bus$thread1$starter,
AHB_Bus$thread2$sensitive,
AHB_Bus$thread2$starter,
AHB_M1$b_transport_finished_ev,
AHB_M1$m_peq$peq_element0,
AHB_M1$m_peq$peq_element1,
AHB_M1$m_peq$peq_element2,
AHB_M1$m_peq$peq_element3,
AHB_M1$m_peq$peq_fetch,
AHB_M1$m_peq$peq_notify,
AHB_M1$thread0$sensitive,
AHB_M1$thread0$starter,
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$busGranted,
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$busNotGranted,
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$clock_tick,
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$dataProcess,
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$nb_transport_bw,
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$peq_cb,
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$receiveData,
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$requestProcess,
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$resumeRequest,
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$sendData,
AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$startRequest,
AHB_M2$b_transport_finished_ev,
AHB_M2$m_peq$peq_element0,
AHB_M2$m_peq$peq_element1,
AHB_M2$m_peq$peq_element2,
AHB_M2$m_peq$peq_element3,
AHB_M2$m_peq$peq_fetch,
AHB_M2$m_peq$peq_notify,
AHB_M2$thread0$sensitive,
AHB_M2$thread0$starter,
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$busGranted,
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$busNotGranted,
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$clock_tick,
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$dataProcess,
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$nb_transport_bw,
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$peq_cb,
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$receiveData,
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$requestProcess,
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$resumeRequest,
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$sendData,
AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$startRequest,
AHB_S1$ahb_simple_mem$ahb_simple_mem$nb_transport_fw,
AHB_S1$ahb_simple_mem$ahb_simple_mem$peq_cb,
AHB_S1$ahb_simple_mem$ahb_simple_mem$readData,
AHB_S1$ahb_simple_mem$ahb_simple_mem$responseProcess,
AHB_S1$ahb_simple_mem$ahb_simple_mem$writeData,
AHB_S1$m_peq$peq_element0,
AHB_S1$m_peq$peq_element1,
AHB_S1$m_peq$peq_element2,
AHB_S1$m_peq$peq_element3,
AHB_S1$m_peq$peq_fetch,
AHB_S1$m_peq$peq_notify,
AHB_S1$thread0$sensitive,
AHB_S1$thread0$starter,
AHB_S2$ahb_simple_mem$ahb_simple_mem$nb_transport_fw,
AHB_S2$ahb_simple_mem$ahb_simple_mem$peq_cb,
AHB_S2$ahb_simple_mem$ahb_simple_mem$readData,
AHB_S2$ahb_simple_mem$ahb_simple_mem$responseProcess,
AHB_S2$ahb_simple_mem$ahb_simple_mem$writeData,
AHB_S2$m_peq$peq_element0,
AHB_S2$m_peq$peq_element1,
AHB_S2$m_peq$peq_element2,
AHB_S2$m_peq$peq_element3,
AHB_S2$m_peq$peq_fetch,
AHB_S2$m_peq$peq_notify,
AHB_S2$thread0$sensitive,
AHB_S2$thread0$starter,
TLM2_M1$pos_clk_edge,
TLM2_M1$thread0$sensitive,
TLM2_M1$thread0$starter,
TLM2_M1$thread1$AHB_M1$tlm2_master_to_ahb$tlm2_master_to_ahb$b_transport,
TLM2_M1$thread1$sensitive,
TLM2_M1$thread1$starter,
TLM2_M1$thread1$tlm2_simple_master$tlm2_simple_master$thread_process,
TLM2_M1$tlm2_simple_master$tlm2_simple_master$clock_tick,
TLM2_M2$pos_clk_edge,
TLM2_M2$thread0$sensitive,
TLM2_M2$thread0$starter,
TLM2_M2$thread1$AHB_M2$tlm2_master_to_ahb$tlm2_master_to_ahb$b_transport,
TLM2_M2$thread1$sensitive,
TLM2_M2$thread1$starter,
TLM2_M2$thread1$tlm2_simple_master$tlm2_simple_master$thread_process,
TLM2_M2$tlm2_simple_master$tlm2_simple_master$clock_tick,
clk$change,
clk$edge,
clk$thread0$sc_clock$sc_clock$run,
clk$thread0$sensitive,
clk$thread0$starter,
clk$thread0$timeoutevent,
initialization,
scheduler,
scmain;</system></nta>
